{"data": null, "prompt": "You are an exceptionally intelligent coding assistant that consistently delivers accurate and reliable responses to user instructions.\n\n    @@ Instruction\n    You are a program repairer. Please repair the following buggy program. You are given an integer array nums and an integer goal.\nYou want to choose a subsequence of nums such that the sum of its elements is the closest possible to goal. That is, if the sum of the subsequence's elements is sum, then you want to minimize the absolute difference abs(sum - goal).\nReturn the minimum possible value of abs(sum - goal).\nNote that a subsequence of an array is an array formed by removing some elements (possibly all or none) of the original array.Buggy code : class Solution {\npublic:\n    void find(vector<int>&v, int i, int e, int sum, vector<int>&sumv){\n        if(i==e){\n            sumv.push_back(sum);\n            return;\n        }\n        find(v,i+1,e,sum+v[i],sumv);\n        find(v,i+1,e,sum,sumv);\n    }\n        \n    \n    int minAbsDifference(vector<int>& nums, int goal) {\n        int n=nums.size();\n        \n        //Step 1: Divide nums into 2 subarrays of size n/2 and n-n/2\n        \n        vector<int>A,B;\n        for(int i=0;i<n/2;i++)\n            A.push_back(nums[i]);\n        for(int i=n/2;i<n;i++)\n            B.push_back(nums[i]);\n        \n        //Step 2: Find all possible subset sums of A and B\n        \n        vector<int>sumA,sumB;\n        find(A,0,A.size(),0,sumA);\n        find(B,0,B.size(),0,sumB);\n        \n        sort(sumA.begin(),sumA.end());\n         \n        //Step 3: Find combinations from sumA & sumB such that abs(sum-goal) is minimized\n        \n        int ans=INT_MAX;\n        \n        for(int i=0;i<sumA.size();i++){\n            int s=sumA[i];\n            int l=0;\n            int r=sumB.size()-1;\n            while(l<=r){\n                int mid=l+(r-l)/2;\n                int sum=s+sumB[mid];\n                if(sum==goal)\n                    return 0;\n                ans=min(ans,abs(sum-goal));\n                if(sum>goal){\n                    r=mid-1;\n                }\n                else{\n                    l=mid+1;\n                }    \n            }\n        }\n        \n        return ans;\n    }\n};$Testcase(Input with expected output) : Input: nums = [5,-7,3,5], goal = 6\nOutput: 0\nFault reasoning: sumB(variable) in minAbsDifference(function) is wrong.\n\n    @@ Response\n    ", "res": {"reading_first": [[58, "You", 0.00860595703125, [0, 3]], [59, "are", 0.01007080078125, [3, 7]], [60, "an", 0.01190185546875, [7, 10]], [61, "exception", 0.01226806640625, [10, 20]], [62, "ally", 0.01141357421875, [20, 24]], [63, "intelligent", 0.01043701171875, [24, 36]], [64, "coding", 0.01953125, [36, 43]], [65, "assistant", 0.0086669921875, [43, 53]], [66, "that", 0.01318359375, [53, 58]], [67, "consistently", 0.014404296875, [58, 71]], [68, "delivers", 0.01025390625, [71, 80]], [69, "accurate", 0.01348876953125, [80, 89]], [70, "and", 0.016357421875, [89, 93]], [71, "reliable", 0.00982666015625, [93, 102]], [72, "responses", 0.01116943359375, [102, 112]], [73, "to", 0.01470947265625, [112, 115]], [74, "user", 0.008056640625, [115, 120]], [75, "instructions", 0.01031494140625, [120, 133]], [76, ".", 0.06787109375, [133, 134]], [80, "@", 0.0072021484375, [139, 141]], [81, "@", 0.0087890625, [141, 142]], [82, "Inst", 0.007781982421875, [142, 147]], [83, "ruction", 0.007354736328125, [147, 154]], [86, "You", 0.00665283203125, [158, 162]], [87, "are", 0.01068115234375, [162, 166]], [88, "a", 0.020751953125, [166, 168]], [89, "program", 0.0108642578125, [168, 176]], [90, "rep", 0.010009765625, [176, 180]], [91, "aire", 0.00811767578125, [180, 184]], [92, "r", 0.007171630859375, [184, 185]], [93, ".", 0.06884765625, [185, 186]], [94, "Please", 0.0146484375, [186, 193]], [95, "repair", 0.01141357421875, [193, 200]], [96, "the", 0.0162353515625, [200, 204]], [97, "following", 0.016357421875, [204, 214]], [98, "bug", 0.0125732421875, [214, 218]], [99, "gy", 0.007080078125, [218, 220]], [100, "program", 0.010498046875, [220, 228]], [101, ".", 0.06982421875, [228, 229]], [102, "You", 0.007354736328125, [229, 233]], [103, "are", 0.010009765625, [233, 237]], [104, "given", 0.0177001953125, [237, 243]], [105, "an", 0.01214599609375, [243, 246]], [106, "integer", 0.0108642578125, [246, 254]], [107, "array", 0.01251220703125, [254, 260]], [108, "num", 0.01068115234375, [260, 264]], [109, "s", 0.01092529296875, [264, 265]], [110, "and", 0.01708984375, [265, 269]], [111, "an", 0.0118408203125, [269, 272]], [112, "integer", 0.0111083984375, [272, 280]], [113, "goal", 0.0118408203125, [280, 285]], [114, ".", 0.06884765625, [285, 286]], [116, "You", 0.0086669921875, [287, 290]], [117, "want", 0.01202392578125, [290, 295]], [118, "to", 0.015625, [295, 298]], [119, "choose", 0.01129150390625, [298, 305]], [120, "a", 0.020263671875, [305, 307]], [121, "subsequ", 0.0150146484375, [307, 315]], [122, "ence", 0.00897216796875, [315, 319]], [123, "of", 0.016845703125, [319, 322]], [124, "num", 0.010986328125, [322, 326]], [125, "s", 0.01031494140625, [326, 327]], [126, "such", 0.0107421875, [327, 332]], [127, "that", 0.01318359375, [332, 337]], [128, "the", 0.0157470703125, [337, 341]], [129, "sum", 0.00946044921875, [341, 345]], [130, "of", 0.0167236328125, [345, 348]], [131, "its", 0.0086669921875, [348, 352]], [132, "elements", 0.0113525390625, [352, 361]], [133, "is", 0.0111083984375, [361, 364]], [134, "the", 0.01611328125, [364, 368]], [135, "closest", 0.0115966796875, [368, 376]], [136, "possible", 0.01031494140625, [376, 385]], [137, "to", 0.0159912109375, [385, 388]], [138, "goal", 0.011962890625, [388, 393]], [139, ".", 0.068359375, [393, 394]], [140, "That", 0.01239013671875, [394, 399]], [141, "is", 0.01123046875, [399, 402]], [142, ",", 0.0228271484375, [402, 403]], [143, "if", 0.0172119140625, [403, 406]], [144, "the", 0.0166015625, [406, 410]], [145, "sum", 0.0093994140625, [410, 414]], [146, "of", 0.016845703125, [414, 417]], [147, "the", 0.0166015625, [417, 421]], [148, "subsequ", 0.0147705078125, [421, 429]], [149, "ence", 0.00909423828125, [429, 433]], [150, "'", 0.010009765625, [433, 434]], [151, "s", 0.010498046875, [434, 435]], [152, "elements", 0.01153564453125, [435, 444]], [153, "is", 0.011474609375, [444, 447]], [154, "sum", 0.00970458984375, [447, 451]], [155, ",", 0.0235595703125, [451, 452]], [156, "then", 0.0152587890625, [452, 457]], [157, "you", 0.00714111328125, [457, 461]], [158, "want", 0.0120849609375, [461, 466]], [159, "to", 0.016357421875, [466, 469]], [160, "minimize", 0.0157470703125, [469, 478]], [161, "the", 0.0166015625, [478, 482]], [162, "absolute", 0.0157470703125, [482, 491]], [163, "difference", 0.01226806640625, [491, 502]], [164, "abs", 0.01220703125, [502, 506]], [165, "(", 0.0390625, [506, 507]], [166, "sum", 0.0107421875, [507, 510]], [167, "-", 0.00872802734375, [510, 512]], [168, "goal", 0.01220703125, [512, 517]], [169, ").", 0.01470947265625, [517, 519]], [171, "Return", 0.0107421875, [520, 526]], [172, "the", 0.0162353515625, [526, 530]], [173, "minimum", 0.0106201171875, [530, 538]], [174, "possible", 0.0106201171875, [538, 547]], [175, "value", 0.01287841796875, [547, 553]], [176, "of", 0.0174560546875, [553, 556]], [177, "abs", 0.0120849609375, [556, 560]], [178, "(", 0.0400390625, [560, 561]], [179, "sum", 0.010986328125, [561, 564]], [180, "-", 0.00909423828125, [564, 566]], [181, "goal", 0.01239013671875, [566, 571]], [182, ").", 0.01531982421875, [571, 573]], [184, "Note", 0.010009765625, [574, 578]], [185, "that", 0.01397705078125, [578, 583]], [186, "a", 0.0218505859375, [583, 585]], [187, "subsequ", 0.01446533203125, [585, 593]], [188, "ence", 0.0096435546875, [593, 597]], [189, "of", 0.0179443359375, [597, 600]], [190, "an", 0.01226806640625, [600, 603]], [191, "array", 0.01348876953125, [603, 609]], [192, "is", 0.0111083984375, [609, 612]], [193, "an", 0.0120849609375, [612, 615]], [194, "array", 0.01336669921875, [615, 621]], [195, "formed", 0.0184326171875, [621, 628]], [196, "by", 0.0118408203125, [628, 631]], [197, "removing", 0.0081787109375, [631, 640]], [198, "some", 0.01025390625, [640, 645]], [199, "elements", 0.0115966796875, [645, 654]], [200, "(", 0.01904296875, [654, 656]], [201, "poss", 0.0111083984375, [656, 660]], [202, "ibly", 0.01287841796875, [660, 664]], [203, "all", 0.00994873046875, [664, 668]], [204, "or", 0.01251220703125, [668, 671]], [205, "none", 0.0126953125, [671, 676]], [206, ")", 0.052490234375, [676, 677]], [207, "of", 0.0172119140625, [677, 680]], [208, "the", 0.0159912109375, [680, 684]], [209, "original", 0.011474609375, [684, 693]], [210, "array", 0.01312255859375, [693, 699]], [211, ".", 0.07275390625, [699, 700]], [212, "B", 0.004913330078125, [700, 701]], [213, "ug", 0.00811767578125, [701, 703]], [214, "gy", 0.00787353515625, [703, 705]], [215, "code", 0.01312255859375, [705, 710]], [216, ":", 0.007171630859375, [710, 712]], [217, "class", 0.012939453125, [712, 718]], [218, "S", 0.00799560546875, [718, 720]], [219, "olution", 0.01373291015625, [720, 727]], [220, "{", 0.0306396484375, [727, 729]], [222, "public", 0.010009765625, [730, 736]], [223, ":", 0.0194091796875, [736, 737]], [226, "void", 0.0107421875, [741, 746]], [227, "find", 0.01312255859375, [746, 751]], [228, "(", 0.04052734375, [751, 752]], [229, "vector", 0.01251220703125, [752, 758]], [230, "<", 0.0078125, [758, 759]], [231, "int", 0.01165771484375, [759, 762]], [232, ">", 0.011474609375, [762, 763]], [233, "&", 0.0032196044921875, [763, 764]], [234, "v", 0.00537109375, [764, 765]], [235, ",", 0.0235595703125, [765, 766]], [236, "int", 0.01141357421875, [766, 770]], [237, "i", 0.007293701171875, [770, 772]], [238, ",", 0.0235595703125, [772, 773]], [239, "int", 0.01153564453125, [773, 777]], [240, "e", 0.0064697265625, [777, 779]], [241, ",", 0.023681640625, [779, 780]], [242, "int", 0.01141357421875, [780, 784]], [243, "sum", 0.010009765625, [784, 788]], [244, ",", 0.023681640625, [788, 789]], [245, "vector", 0.00970458984375, [789, 796]], [246, "<", 0.007659912109375, [796, 797]], [247, "int", 0.01171875, [797, 800]], [248, ">", 0.01141357421875, [800, 801]], [249, "&", 0.003204345703125, [801, 802]], [250, "sum", 0.0111083984375, [802, 805]], [251, "v", 0.005340576171875, [805, 806]], [252, "){", 0.017333984375, [806, 808]], [255, "if", 0.017822265625, [816, 819]], [256, "(", 0.0400390625, [819, 820]], [257, "i", 0.00872802734375, [820, 821]], [258, "==", 0.01373291015625, [821, 823]], [259, "e", 0.00750732421875, [823, 824]], [260, "){", 0.0177001953125, [824, 826]], [263, "sum", 0.01068115234375, [838, 842]], [264, "v", 0.00567626953125, [842, 843]], [265, ".", 0.072265625, [843, 844]], [266, "push", 0.01226806640625, [844, 848]], [267, "_", 0.0206298828125, [848, 849]], [268, "back", 0.0106201171875, [849, 853]], [269, "(", 0.040283203125, [853, 854]], [270, "sum", 0.01171875, [854, 857]], [271, ");", 0.0206298828125, [857, 859]], [274, "return", 0.0208740234375, [871, 878]], [275, ";", 0.0164794921875, [878, 879]], [278, "}", 0.02392578125, [887, 889]], [281, "find", 0.01409912109375, [897, 902]], [282, "(", 0.042236328125, [902, 903]], [283, "v", 0.005889892578125, [903, 904]], [284, ",", 0.0247802734375, [904, 905]], [285, "i", 0.00933837890625, [905, 906]], [286, "+", 0.01025390625, [906, 907]], [287, "1", 0.0272216796875, [907, 908]], [288, ",", 0.0247802734375, [908, 909]], [289, "e", 0.0078125, [909, 910]], [290, ",", 0.024658203125, [910, 911]], [291, "sum", 0.011962890625, [911, 914]], [292, "+", 0.01025390625, [914, 915]], [293, "v", 0.005950927734375, [915, 916]], [294, "[", 0.01239013671875, [916, 917]], [295, "i", 0.00927734375, [917, 918]], [296, "],", 0.01043701171875, [918, 920]], [297, "sum", 0.0118408203125, [920, 923]], [298, "v", 0.00592041015625, [923, 924]], [299, ");", 0.0213623046875, [924, 926]], [302, "find", 0.013916015625, [934, 939]], [303, "(", 0.04150390625, [939, 940]], [304, "v", 0.005950927734375, [940, 941]], [305, ",", 0.0242919921875, [941, 942]], [306, "i", 0.0093994140625, [942, 943]], [307, "+", 0.009765625, [943, 944]], [308, "1", 0.0281982421875, [944, 945]], [309, ",", 0.0244140625, [945, 946]], [310, "e", 0.00787353515625, [946, 947]], [311, ",", 0.0245361328125, [947, 948]], [312, "sum", 0.0113525390625, [948, 951]], [313, ",", 0.0244140625, [951, 952]], [314, "sum", 0.010986328125, [952, 955]], [315, "v", 0.005615234375, [955, 956]], [316, ");", 0.020751953125, [956, 958]], [319, "}", 0.0238037109375, [962, 964]], [326, "int", 0.01171875, [982, 986]], [327, "min", 0.00994873046875, [986, 990]], [328, "Abs", 0.00897216796875, [990, 993]], [329, "Diff", 0.007476806640625, [993, 997]], [330, "erence", 0.00994873046875, [997, 1003]], [331, "(", 0.044189453125, [1003, 1004]], [332, "vector", 0.0137939453125, [1004, 1010]], [333, "<", 0.0089111328125, [1010, 1011]], [334, "int", 0.0133056640625, [1011, 1014]], [335, ">", 0.01287841796875, [1014, 1015]], [336, "&", 0.0038604736328125, [1015, 1016]], [337, "num", 0.012939453125, [1016, 1020]], [338, "s", 0.011962890625, [1020, 1021]], [339, ",", 0.0262451171875, [1021, 1022]], [340, "int", 0.012451171875, [1022, 1026]], [341, "goal", 0.01519775390625, [1026, 1031]], [342, ")", 0.0595703125, [1031, 1032]], [343, "{", 0.032958984375, [1032, 1034]], [346, "int", 0.01190185546875, [1042, 1046]], [347, "n", 0.0111083984375, [1046, 1048]], [348, "=", 0.021728515625, [1048, 1049]], [349, "num", 0.01019287109375, [1049, 1052]], [350, "s", 0.01123046875, [1052, 1053]], [351, ".", 0.0771484375, [1053, 1054]], [352, "size", 0.01422119140625, [1054, 1058]], [353, "();", 0.0164794921875, [1058, 1061]], [358, "//", 0.01153564453125, [1078, 1081]], [359, "Step", 0.010498046875, [1081, 1085]], [361, "1", 0.0281982421875, [1086, 1087]], [362, ":", 0.0206298828125, [1087, 1088]], [363, "Div", 0.0091552734375, [1088, 1092]], [364, "ide", 0.0120849609375, [1092, 1095]], [365, "num", 0.01312255859375, [1095, 1099]], [366, "s", 0.0115966796875, [1099, 1100]], [367, "into", 0.015625, [1100, 1105]], [369, "2", 0.032958984375, [1106, 1107]], [370, "sub", 0.00958251953125, [1107, 1111]], [371, "arr", 0.01116943359375, [1111, 1114]], [372, "ays", 0.010498046875, [1114, 1117]], [373, "of", 0.01953125, [1117, 1120]], [374, "size", 0.012939453125, [1120, 1125]], [375, "n", 0.0115966796875, [1125, 1127]], [376, "/", 0.01300048828125, [1127, 1128]], [377, "2", 0.031982421875, [1128, 1129]], [378, "and", 0.0184326171875, [1129, 1133]], [379, "n", 0.01177978515625, [1133, 1135]], [380, "-", 0.0269775390625, [1135, 1136]], [381, "n", 0.00750732421875, [1136, 1137]], [382, "/", 0.01287841796875, [1137, 1138]], [383, "2", 0.032470703125, [1138, 1139]], [388, "vector", 0.0113525390625, [1156, 1163]], [389, "<", 0.00921630859375, [1163, 1164]], [390, "int", 0.01312255859375, [1164, 1167]], [391, ">", 0.0130615234375, [1167, 1168]], [392, "A", 0.00830078125, [1168, 1169]], [393, ",", 0.0255126953125, [1169, 1170]], [394, "B", 0.005035400390625, [1170, 1171]], [395, ";", 0.01806640625, [1171, 1172]], [398, "for", 0.0146484375, [1180, 1184]], [399, "(", 0.044921875, [1184, 1185]], [400, "int", 0.01239013671875, [1185, 1188]], [401, "i", 0.0076904296875, [1188, 1190]], [402, "=", 0.0224609375, [1190, 1191]], [403, "0", 0.00946044921875, [1191, 1192]], [404, ";", 0.0184326171875, [1192, 1193]], [405, "i", 0.0091552734375, [1193, 1194]], [406, "<", 0.0089111328125, [1194, 1195]], [407, "n", 0.007110595703125, [1195, 1196]], [408, "/", 0.0135498046875, [1196, 1197]], [409, "2", 0.033203125, [1197, 1198]], [410, ";", 0.0185546875, [1198, 1199]], [411, "i", 0.00946044921875, [1199, 1200]], [412, "++", 0.01373291015625, [1200, 1202]], [413, ")", 0.061279296875, [1202, 1203]], [416, "A", 0.00958251953125, [1215, 1217]], [417, ".", 0.080078125, [1217, 1218]], [418, "push", 0.01373291015625, [1218, 1222]], [419, "_", 0.024169921875, [1222, 1223]], [420, "back", 0.01141357421875, [1223, 1227]], [421, "(", 0.04541015625, [1227, 1228]], [422, "num", 0.01080322265625, [1228, 1231]], [423, "s", 0.0115966796875, [1231, 1232]], [424, "[", 0.01348876953125, [1232, 1233]], [425, "i", 0.009521484375, [1233, 1234]], [426, "]);", 0.0194091796875, [1234, 1237]], [429, "for", 0.01611328125, [1245, 1249]], [430, "(", 0.04638671875, [1249, 1250]], [431, "int", 0.013916015625, [1250, 1253]], [432, "i", 0.00830078125, [1253, 1255]], [433, "=", 0.0240478515625, [1255, 1256]], [434, "n", 0.00775146484375, [1256, 1257]], [435, "/", 0.01416015625, [1257, 1258]], [436, "2", 0.034423828125, [1258, 1259]], [437, ";", 0.02001953125, [1259, 1260]], [438, "i", 0.01019287109375, [1260, 1261]], [439, "<", 0.010009765625, [1261, 1262]], [440, "n", 0.00811767578125, [1262, 1263]], [441, ";", 0.0201416015625, [1263, 1264]], [442, "i", 0.01043701171875, [1264, 1265]], [443, "++", 0.0146484375, [1265, 1267]], [444, ")", 0.06103515625, [1267, 1268]], [447, "B", 0.0106201171875, [1280, 1282]], [448, ".", 0.083984375, [1282, 1283]], [449, "push", 0.0145263671875, [1283, 1287]], [450, "_", 0.0267333984375, [1287, 1288]], [451, "back", 0.01251220703125, [1288, 1292]], [452, "(", 0.04833984375, [1292, 1293]], [453, "num", 0.0118408203125, [1293, 1296]], [454, "s", 0.01300048828125, [1296, 1297]], [455, "[", 0.01507568359375, [1297, 1298]], [456, "i", 0.01141357421875, [1298, 1299]], [457, "]);", 0.0205078125, [1299, 1302]], [462, "//", 0.01263427734375, [1319, 1322]], [463, "Step", 0.01116943359375, [1322, 1326]], [465, "2", 0.03564453125, [1327, 1328]], [466, ":", 0.022705078125, [1328, 1329]], [467, "Find", 0.0172119140625, [1329, 1334]], [468, "all", 0.01190185546875, [1334, 1338]], [469, "possible", 0.01336669921875, [1338, 1347]], [470, "subset", 0.0162353515625, [1347, 1354]], [471, "sums", 0.018798828125, [1354, 1359]], [472, "of", 0.020751953125, [1359, 1362]], [473, "A", 0.01007080078125, [1362, 1364]], [474, "and", 0.0194091796875, [1364, 1368]], [475, "B", 0.01019287109375, [1368, 1370]], [480, "vector", 0.013671875, [1387, 1394]], [481, "<", 0.01031494140625, [1394, 1395]], [482, "int", 0.0147705078125, [1395, 1398]], [483, ">", 0.0145263671875, [1398, 1399]], [484, "sum", 0.0140380859375, [1399, 1402]], [485, "A", 0.0087890625, [1402, 1403]], [486, ",", 0.0283203125, [1403, 1404]], [487, "sum", 0.01416015625, [1404, 1407]], [488, "B", 0.0057373046875, [1407, 1408]], [489, ";", 0.020751953125, [1408, 1409]], [492, "find", 0.016845703125, [1417, 1422]], [493, "(", 0.048828125, [1422, 1423]], [494, "A", 0.00836181640625, [1423, 1424]], [495, ",", 0.02783203125, [1424, 1425]], [496, "0", 0.0108642578125, [1425, 1426]], [497, ",", 0.0277099609375, [1426, 1427]], [498, "A", 0.008056640625, [1427, 1428]], [499, ".", 0.08544921875, [1428, 1429]], [500, "size", 0.01611328125, [1429, 1433]], [501, "(),", 0.013671875, [1433, 1436]], [502, "0", 0.01104736328125, [1436, 1437]], [503, ",", 0.028076171875, [1437, 1438]], [504, "sum", 0.013916015625, [1438, 1441]], [505, "A", 0.008544921875, [1441, 1442]], [506, ");", 0.0267333984375, [1442, 1444]], [509, "find", 0.017333984375, [1452, 1457]], [510, "(", 0.04931640625, [1457, 1458]], [511, "B", 0.00634765625, [1458, 1459]], [512, ",", 0.028564453125, [1459, 1460]], [513, "0", 0.0120849609375, [1460, 1461]], [514, ",", 0.0283203125, [1461, 1462]], [515, "B", 0.00634765625, [1462, 1463]], [516, ".", 0.08544921875, [1463, 1464]], [517, "size", 0.0164794921875, [1464, 1468]], [518, "(),", 0.0137939453125, [1468, 1471]], [519, "0", 0.0113525390625, [1471, 1472]], [520, ",", 0.027587890625, [1472, 1473]], [521, "sum", 0.01336669921875, [1473, 1476]], [522, "B", 0.0054931640625, [1476, 1477]], [523, ");", 0.02392578125, [1477, 1479]], [528, "sort", 0.01373291015625, [1496, 1501]], [529, "(", 0.04833984375, [1501, 1502]], [530, "sum", 0.013671875, [1502, 1505]], [531, "A", 0.00848388671875, [1505, 1506]], [532, ".", 0.08837890625, [1506, 1507]], [533, "begin", 0.0220947265625, [1507, 1512]], [534, "(),", 0.014404296875, [1512, 1515]], [535, "sum", 0.0142822265625, [1515, 1518]], [536, "A", 0.00927734375, [1518, 1519]], [537, ".", 0.0927734375, [1519, 1520]], [538, "end", 0.01409912109375, [1520, 1523]], [539, "());", 0.0201416015625, [1523, 1527]], [544, "//", 0.01446533203125, [1545, 1548]], [545, "Step", 0.01226806640625, [1548, 1552]], [547, "3", 0.02294921875, [1553, 1554]], [548, ":", 0.0252685546875, [1554, 1555]], [549, "Find", 0.020263671875, [1555, 1560]], [550, "combinations", 0.0281982421875, [1560, 1573]], [551, "from", 0.0205078125, [1573, 1578]], [552, "sum", 0.015380859375, [1578, 1582]], [553, "A", 0.00970458984375, [1582, 1583]], [554, "&", 0.004638671875, [1583, 1585]], [555, "sum", 0.0152587890625, [1585, 1589]], [556, "B", 0.00628662109375, [1589, 1590]], [557, "such", 0.018798828125, [1590, 1595]], [558, "that", 0.0191650390625, [1595, 1600]], [559, "abs", 0.0191650390625, [1600, 1604]], [560, "(", 0.052734375, [1604, 1605]], [561, "sum", 0.01544189453125, [1605, 1608]], [562, "-", 0.033447265625, [1608, 1609]], [563, "go", 0.01519775390625, [1609, 1611]], [564, "al", 0.01251220703125, [1611, 1613]], [565, ")", 0.06689453125, [1613, 1614]], [566, "is", 0.01519775390625, [1614, 1617]], [567, "minim", 0.01806640625, [1617, 1623]], [568, "ized", 0.0147705078125, [1623, 1627]], [573, "int", 0.01611328125, [1644, 1648]], [574, "an", 0.016357421875, [1648, 1651]], [575, "s", 0.01312255859375, [1651, 1652]], [576, "=", 0.02685546875, [1652, 1653]], [577, "INT", 0.01190185546875, [1653, 1656]], [578, "_", 0.028076171875, [1656, 1657]], [579, "MAX", 0.0137939453125, [1657, 1660]], [580, ";", 0.0228271484375, [1660, 1661]], [585, "for", 0.018798828125, [1678, 1682]], [586, "(", 0.05517578125, [1682, 1683]], [587, "int", 0.01708984375, [1683, 1686]], [588, "i", 0.01031494140625, [1686, 1688]], [589, "=", 0.0289306640625, [1688, 1689]], [590, "0", 0.0123291015625, [1689, 1690]], [591, ";", 0.0244140625, [1690, 1691]], [592, "i", 0.0123291015625, [1691, 1692]], [593, "<", 0.011962890625, [1692, 1693]], [594, "sum", 0.0169677734375, [1693, 1696]], [595, "A", 0.01019287109375, [1696, 1697]], [596, ".", 0.095703125, [1697, 1698]], [597, "size", 0.0191650390625, [1698, 1702]], [598, "();", 0.0244140625, [1702, 1705]], [599, "i", 0.01239013671875, [1705, 1706]], [600, "++", 0.0174560546875, [1706, 1708]], [601, "){", 0.029052734375, [1708, 1710]], [604, "int", 0.0172119140625, [1722, 1726]], [605, "s", 0.0128173828125, [1726, 1728]], [606, "=", 0.0281982421875, [1728, 1729]], [607, "sum", 0.01611328125, [1729, 1732]], [608, "A", 0.01104736328125, [1732, 1733]], [609, "[", 0.0167236328125, [1733, 1734]], [610, "i", 0.0120849609375, [1734, 1735]], [611, "];", 0.022216796875, [1735, 1737]], [614, "int", 0.0162353515625, [1749, 1753]], [615, "l", 0.0111083984375, [1753, 1755]], [616, "=", 0.028076171875, [1755, 1756]], [617, "0", 0.01153564453125, [1756, 1757]], [618, ";", 0.0234375, [1757, 1758]], [621, "int", 0.017333984375, [1770, 1774]], [622, "r", 0.0126953125, [1774, 1776]], [623, "=", 0.0289306640625, [1776, 1777]], [624, "sum", 0.016845703125, [1777, 1780]], [625, "B", 0.00653076171875, [1780, 1781]], [626, ".", 0.09912109375, [1781, 1782]], [627, "size", 0.0198974609375, [1782, 1786]], [628, "()-", 0.0205078125, [1786, 1789]], [629, "1", 0.034912109375, [1789, 1790]], [630, ";", 0.0262451171875, [1790, 1791]], [633, "while", 0.031494140625, [1803, 1809]], [634, "(", 0.060302734375, [1809, 1810]], [635, "l", 0.00970458984375, [1810, 1811]], [636, "<", 0.01385498046875, [1811, 1812]], [637, "=", 0.03125, [1812, 1813]], [638, "r", 0.01239013671875, [1813, 1814]], [639, "){", 0.033447265625, [1814, 1816]], [642, "int", 0.0186767578125, [1832, 1836]], [643, "mid", 0.01953125, [1836, 1840]], [644, "=", 0.030029296875, [1840, 1841]], [645, "l", 0.007568359375, [1841, 1842]], [646, "+", 0.0140380859375, [1842, 1843]], [647, "(", 0.060791015625, [1843, 1844]], [648, "r", 0.010009765625, [1844, 1845]], [649, "-", 0.03955078125, [1845, 1846]], [650, "l", 0.007232666015625, [1846, 1847]], [651, ")/", 0.0224609375, [1847, 1849]], [652, "2", 0.03955078125, [1849, 1850]], [653, ";", 0.02685546875, [1850, 1851]], [656, "int", 0.0201416015625, [1867, 1871]], [657, "sum", 0.01953125, [1871, 1875]], [658, "=", 0.03369140625, [1875, 1876]], [659, "s", 0.0162353515625, [1876, 1877]], [660, "+", 0.01544189453125, [1877, 1878]], [661, "sum", 0.0206298828125, [1878, 1881]], [662, "B", 0.00909423828125, [1881, 1882]], [663, "[", 0.0213623046875, [1882, 1883]], [664, "mid", 0.0167236328125, [1883, 1886]], [665, "];", 0.030517578125, [1886, 1888]], [668, "if", 0.0267333984375, [1904, 1907]], [669, "(", 0.06591796875, [1907, 1908]], [670, "sum", 0.02001953125, [1908, 1911]], [671, "==", 0.0308837890625, [1911, 1913]], [672, "go", 0.0177001953125, [1913, 1915]], [673, "al", 0.01263427734375, [1915, 1917]], [674, ")", 0.08154296875, [1917, 1918]], [677, "return", 0.03076171875, [1938, 1945]], [679, "0", 0.0128173828125, [1946, 1947]], [680, ";", 0.031005859375, [1947, 1948]], [683, "an", 0.023193359375, [1964, 1967]], [684, "s", 0.0162353515625, [1967, 1968]], [685, "=", 0.0380859375, [1968, 1969]], [686, "min", 0.0186767578125, [1969, 1972]], [687, "(", 0.06884765625, [1972, 1973]], [688, "ans", 0.0230712890625, [1973, 1976]], [689, ",", 0.0400390625, [1976, 1977]], [690, "abs", 0.0234375, [1977, 1980]], [691, "(", 0.06982421875, [1980, 1981]], [692, "sum", 0.02197265625, [1981, 1984]], [693, "-", 0.043212890625, [1984, 1985]], [694, "go", 0.0201416015625, [1985, 1987]], [695, "al", 0.0147705078125, [1987, 1989]], [696, "));", 0.038330078125, [1989, 1992]], [699, "if", 0.02685546875, [2008, 2011]], [700, "(", 0.0703125, [2011, 2012]], [701, "sum", 0.0216064453125, [2012, 2015]], [702, ">", 0.021728515625, [2015, 2016]], [703, "go", 0.019775390625, [2016, 2018]], [704, "al", 0.013916015625, [2018, 2020]], [705, "){", 0.040283203125, [2020, 2022]], [708, "r", 0.019775390625, [2042, 2044]], [709, "=", 0.042236328125, [2044, 2045]], [710, "mid", 0.01806640625, [2045, 2048]], [711, "-", 0.048828125, [2048, 2049]], [712, "1", 0.043212890625, [2049, 2050]], [713, ";", 0.037353515625, [2050, 2051]], [716, "}", 0.042236328125, [2067, 2069]], [719, "else", 0.031494140625, [2085, 2090]], [720, "{", 0.03759765625, [2090, 2091]], [723, "l", 0.018310546875, [2111, 2113]], [724, "=", 0.0419921875, [2113, 2114]], [725, "mid", 0.0191650390625, [2114, 2117]], [726, "+", 0.0174560546875, [2117, 2118]], [727, "1", 0.041015625, [2118, 2119]], [728, ";", 0.0361328125, [2119, 2120]], [731, "}", 0.04248046875, [2136, 2138]], [735, "}", 0.044189453125, [2154, 2156]], [738, "}", 0.0458984375, [2164, 2166]], [743, "return", 0.04248046875, [2183, 2190]], [744, "an", 0.0308837890625, [2190, 2193]], [745, "s", 0.021240234375, [2193, 2194]], [746, ";", 0.043701171875, [2194, 2195]], [749, "}", 0.046875, [2199, 2201]], [751, "};", 0.0439453125, [2202, 2204]]], "reading_last": [[58, "You", 0.1298828125, [0, 3]], [59, "are", 0.138671875, [3, 7]], [60, "an", 0.1904296875, [7, 10]], [61, "exception", 0.203125, [10, 20]], [62, "ally", 0.2041015625, [20, 24]], [63, "intelligent", 0.169921875, [24, 36]], [64, "coding", 0.1845703125, [36, 43]], [65, "assistant", 0.220703125, [43, 53]], [66, "that", 0.296875, [53, 58]], [67, "consistently", 0.2138671875, [58, 71]], [68, "delivers", 0.2119140625, [71, 80]], [69, "accurate", 0.1728515625, [80, 89]], [70, "and", 0.1806640625, [89, 93]], [71, "reliable", 0.19921875, [93, 102]], [72, "responses", 0.2158203125, [102, 112]], [73, "to", 0.16015625, [112, 115]], [74, "user", 0.140625, [115, 120]], [75, "instructions", 0.166015625, [120, 133]], [76, ".", 0.0966796875, [133, 134]], [80, "@", 0.010009765625, [139, 141]], [81, "@", 0.004547119140625, [141, 142]], [82, "Inst", 0.01397705078125, [142, 147]], [83, "ruction", 0.027099609375, [147, 154]], [86, "You", 0.0595703125, [158, 162]], [87, "are", 0.018798828125, [162, 166]], [88, "a", 0.00762939453125, [166, 168]], [89, "program", 0.0142822265625, [168, 176]], [90, "rep", 0.043212890625, [176, 180]], [91, "aire", 0.014892578125, [180, 184]], [92, "r", 0.006500244140625, [184, 185]], [93, ".", 0.0150146484375, [185, 186]], [94, "Please", 0.004180908203125, [186, 193]], [95, "repair", 0.01043701171875, [193, 200]], [96, "the", 0.004791259765625, [200, 204]], [97, "following", 0.0020294189453125, [204, 214]], [98, "bug", 0.005615234375, [214, 218]], [99, "gy", 0.00188446044921875, [218, 220]], [100, "program", 0.005584716796875, [220, 228]], [101, ".", 0.004669189453125, [228, 229]], [102, "You", 0.00897216796875, [229, 233]], [103, "are", 0.0007171630859375, [233, 237]], [104, "given", 0.00090789794921875, [237, 243]], [105, "an", 0.001556396484375, [243, 246]], [106, "integer", 0.00176239013671875, [246, 254]], [107, "array", 0.00384521484375, [254, 260]], [108, "num", 0.00634765625, [260, 264]], [109, "s", 0.004852294921875, [264, 265]], [110, "and", 0.0012664794921875, [265, 269]], [111, "an", 0.0013580322265625, [269, 272]], [112, "integer", 0.00122833251953125, [272, 280]], [113, "goal", 0.00445556640625, [280, 285]], [114, ".", 0.005523681640625, [285, 286]], [116, "You", 0.0026397705078125, [287, 290]], [117, "want", 0.005859375, [290, 295]], [118, "to", 0.00250244140625, [295, 298]], [119, "choose", 0.0030059814453125, [298, 305]], [120, "a", 0.00116729736328125, [305, 307]], [121, "subsequ", 0.036376953125, [307, 315]], [122, "ence", 0.00665283203125, [315, 319]], [123, "of", 0.004364013671875, [319, 322]], [124, "num", 0.006103515625, [322, 326]], [125, "s", 0.004058837890625, [326, 327]], [126, "such", 0.001922607421875, [327, 332]], [127, "that", 0.00174713134765625, [332, 337]], [128, "the", 0.0019989013671875, [337, 341]], [129, "sum", 0.00238037109375, [341, 345]], [130, "of", 0.00335693359375, [345, 348]], [131, "its", 0.0020751953125, [348, 352]], [132, "elements", 0.0042724609375, [352, 361]], [133, "is", 0.001068115234375, [361, 364]], [134, "the", 0.00157928466796875, [364, 368]], [135, "closest", 0.003875732421875, [368, 376]], [136, "possible", 0.00141143798828125, [376, 385]], [137, "to", 0.00168609619140625, [385, 388]], [138, "goal", 0.00189208984375, [388, 393]], [139, ".", 0.00494384765625, [393, 394]], [140, "That", 0.0009307861328125, [394, 399]], [141, "is", 0.00038909912109375, [399, 402]], [142, ",", 0.00145721435546875, [402, 403]], [143, "if", 0.000904083251953125, [403, 406]], [144, "the", 0.001434326171875, [406, 410]], [145, "sum", 0.0021820068359375, [410, 414]], [146, "of", 0.00045013427734375, [414, 417]], [147, "the", 0.001312255859375, [417, 421]], [148, "subsequ", 0.007781982421875, [421, 429]], [149, "ence", 0.0024871826171875, [429, 433]], [150, "'", 0.0025482177734375, [433, 434]], [151, "s", 0.00160980224609375, [434, 435]], [152, "elements", 0.004119873046875, [435, 444]], [153, "is", 0.000186920166015625, [444, 447]], [154, "sum", 0.00150299072265625, [447, 451]], [155, ",", 0.00115203857421875, [451, 452]], [156, "then", 0.000919342041015625, [452, 457]], [157, "you", 0.00799560546875, [457, 461]], [158, "want", 0.00095367431640625, [461, 466]], [159, "to", 0.00078582763671875, [466, 469]], [160, "minimize", 0.001922607421875, [469, 478]], [161, "the", 0.000946044921875, [478, 482]], [162, "absolute", 0.0103759765625, [482, 491]], [163, "difference", 0.0267333984375, [491, 502]], [164, "abs", 0.005096435546875, [502, 506]], [165, "(", 0.003753662109375, [506, 507]], [166, "sum", 0.00421142578125, [507, 510]], [167, "-", 0.0016632080078125, [510, 512]], [168, "goal", 0.003997802734375, [512, 517]], [169, ").", 0.0017242431640625, [517, 519]], [171, "Return", 0.00168609619140625, [520, 526]], [172, "the", 0.0010986328125, [526, 530]], [173, "minimum", 0.000499725341796875, [530, 538]], [174, "possible", 0.000949859619140625, [538, 547]], [175, "value", 0.0021209716796875, [547, 553]], [176, "of", 0.000865936279296875, [553, 556]], [177, "abs", 0.01385498046875, [556, 560]], [178, "(", 0.0015869140625, [560, 561]], [179, "sum", 0.0012054443359375, [561, 564]], [180, "-", 0.00128936767578125, [564, 566]], [181, "goal", 0.00121307373046875, [566, 571]], [182, ").", 0.00079345703125, [571, 573]], [184, "Note", 0.00171661376953125, [574, 578]], [185, "that", 0.0015716552734375, [578, 583]], [186, "a", 0.001953125, [583, 585]], [187, "subsequ", 0.01611328125, [585, 593]], [188, "ence", 0.0033111572265625, [593, 597]], [189, "of", 0.0012054443359375, [597, 600]], [190, "an", 0.0017242431640625, [600, 603]], [191, "array", 0.004241943359375, [603, 609]], [192, "is", 0.000732421875, [609, 612]], [193, "an", 0.0014495849609375, [612, 615]], [194, "array", 0.0022735595703125, [615, 621]], [195, "formed", 0.00244140625, [621, 628]], [196, "by", 0.00110626220703125, [628, 631]], [197, "removing", 0.0037078857421875, [631, 640]], [198, "some", 0.00145721435546875, [640, 645]], [199, "elements", 0.00262451171875, [645, 654]], [200, "(", 0.0036163330078125, [654, 656]], [201, "poss", 0.0810546875, [656, 660]], [202, "ibly", 0.0048828125, [660, 664]], [203, "all", 0.0035858154296875, [664, 668]], [204, "or", 0.004547119140625, [668, 671]], [205, "none", 0.0037384033203125, [671, 676]], [206, ")", 0.000881195068359375, [676, 677]], [207, "of", 0.001373291015625, [677, 680]], [208, "the", 0.0020599365234375, [680, 684]], [209, "original", 0.004241943359375, [684, 693]], [210, "array", 0.003387451171875, [693, 699]], [211, ".", 0.004364013671875, [699, 700]], [212, "B", 0.004058837890625, [700, 701]], [213, "ug", 0.01251220703125, [701, 703]], [214, "gy", 0.0038299560546875, [703, 705]], [215, "code", 0.007720947265625, [705, 710]], [216, ":", 0.0022125244140625, [710, 712]], [217, "class", 0.0036468505859375, [712, 718]], [218, "S", 0.0037994384765625, [718, 720]], [219, "olution", 0.004974365234375, [720, 727]], [220, "{", 0.00147247314453125, [727, 729]], [222, "public", 0.0026702880859375, [730, 736]], [223, ":", 0.00070953369140625, [736, 737]], [226, "void", 0.004364013671875, [741, 746]], [227, "find", 0.004058837890625, [746, 751]], [228, "(", 0.0024566650390625, [751, 752]], [229, "vector", 0.0032196044921875, [752, 758]], [230, "<", 0.0040283203125, [758, 759]], [231, "int", 0.006622314453125, [759, 762]], [232, ">", 0.00148773193359375, [762, 763]], [233, "&", 0.0034942626953125, [763, 764]], [234, "v", 0.0069580078125, [764, 765]], [235, ",", 0.003204345703125, [765, 766]], [236, "int", 0.0045166015625, [766, 770]], [237, "i", 0.0027923583984375, [770, 772]], [238, ",", 0.0028839111328125, [772, 773]], [239, "int", 0.003204345703125, [773, 777]], [240, "e", 0.0034942626953125, [777, 779]], [241, ",", 0.00194549560546875, [779, 780]], [242, "int", 0.0022430419921875, [780, 784]], [243, "sum", 0.00689697265625, [784, 788]], [244, ",", 0.001708984375, [788, 789]], [245, "vector", 0.00390625, [789, 796]], [246, "<", 0.0024261474609375, [796, 797]], [247, "int", 0.00131988525390625, [797, 800]], [248, ">", 0.0004177093505859375, [800, 801]], [249, "&", 0.001861572265625, [801, 802]], [250, "sum", 0.004730224609375, [802, 805]], [251, "v", 0.01397705078125, [805, 806]], [252, "){", 0.0023193359375, [806, 808]], [255, "if", 0.0026092529296875, [816, 819]], [256, "(", 0.002685546875, [819, 820]], [257, "i", 0.00165557861328125, [820, 821]], [258, "==", 0.00225830078125, [821, 823]], [259, "e", 0.0020294189453125, [823, 824]], [260, "){", 0.00148773193359375, [824, 826]], [263, "sum", 0.0034942626953125, [838, 842]], [264, "v", 0.004608154296875, [842, 843]], [265, ".", 0.005340576171875, [843, 844]], [266, "push", 0.011962890625, [844, 848]], [267, "_", 0.0067138671875, [848, 849]], [268, "back", 0.00762939453125, [849, 853]], [269, "(", 0.00171661376953125, [853, 854]], [270, "sum", 0.00173187255859375, [854, 857]], [271, ");", 0.00179290771484375, [857, 859]], [274, "return", 0.0021820068359375, [871, 878]], [275, ";", 0.00106048583984375, [878, 879]], [278, "}", 0.0023345947265625, [887, 889]], [281, "find", 0.006072998046875, [897, 902]], [282, "(", 0.000885009765625, [902, 903]], [283, "v", 0.0030059814453125, [903, 904]], [284, ",", 0.00128173828125, [904, 905]], [285, "i", 0.001251220703125, [905, 906]], [286, "+", 0.00157928466796875, [906, 907]], [287, "1", 0.00244140625, [907, 908]], [288, ",", 0.00095367431640625, [908, 909]], [289, "e", 0.00153350830078125, [909, 910]], [290, ",", 0.000934600830078125, [910, 911]], [291, "sum", 0.001556396484375, [911, 914]], [292, "+", 0.0012359619140625, [914, 915]], [293, "v", 0.0035858154296875, [915, 916]], [294, "[", 0.0026092529296875, [916, 917]], [295, "i", 0.0011138916015625, [917, 918]], [296, "],", 0.004119873046875, [918, 920]], [297, "sum", 0.00171661376953125, [920, 923]], [298, "v", 0.004730224609375, [923, 924]], [299, ");", 0.002349853515625, [924, 926]], [302, "find", 0.0020751953125, [934, 939]], [303, "(", 0.0008697509765625, [939, 940]], [304, "v", 0.0010833740234375, [940, 941]], [305, ",", 0.000553131103515625, [941, 942]], [306, "i", 0.00070953369140625, [942, 943]], [307, "+", 0.000507354736328125, [943, 944]], [308, "1", 0.00054168701171875, [944, 945]], [309, ",", 0.0004215240478515625, [945, 946]], [310, "e", 0.00121307373046875, [946, 947]], [311, ",", 0.0003833770751953125, [947, 948]], [312, "sum", 0.00080108642578125, [948, 951]], [313, ",", 0.000762939453125, [951, 952]], [314, "sum", 0.000820159912109375, [952, 955]], [315, "v", 0.00133514404296875, [955, 956]], [316, ");", 0.00058746337890625, [956, 958]], [319, "}", 0.0019683837890625, [962, 964]], [326, "int", 0.0040283203125, [982, 986]], [327, "min", 0.00958251953125, [986, 990]], [328, "Abs", 0.037353515625, [990, 993]], [329, "Diff", 0.01373291015625, [993, 997]], [330, "erence", 0.007110595703125, [997, 1003]], [331, "(", 0.0016632080078125, [1003, 1004]], [332, "vector", 0.005462646484375, [1004, 1010]], [333, "<", 0.00225830078125, [1010, 1011]], [334, "int", 0.000782012939453125, [1011, 1014]], [335, ">", 0.000354766845703125, [1014, 1015]], [336, "&", 0.001312255859375, [1015, 1016]], [337, "num", 0.0072021484375, [1016, 1020]], [338, "s", 0.004730224609375, [1020, 1021]], [339, ",", 0.00286865234375, [1021, 1022]], [340, "int", 0.0020599365234375, [1022, 1026]], [341, "goal", 0.023193359375, [1026, 1031]], [342, ")", 0.0029754638671875, [1031, 1032]], [343, "{", 0.0025634765625, [1032, 1034]], [346, "int", 0.0030517578125, [1042, 1046]], [347, "n", 0.004608154296875, [1046, 1048]], [348, "=", 0.00153350830078125, [1048, 1049]], [349, "num", 0.00506591796875, [1049, 1052]], [350, "s", 0.002197265625, [1052, 1053]], [351, ".", 0.007720947265625, [1053, 1054]], [352, "size", 0.00150299072265625, [1054, 1058]], [353, "();", 0.00116729736328125, [1058, 1061]], [358, "//", 0.0030059814453125, [1078, 1081]], [359, "Step", 0.0047607421875, [1081, 1085]], [361, "1", 0.003997802734375, [1086, 1087]], [362, ":", 0.004302978515625, [1087, 1088]], [363, "Div", 0.0400390625, [1088, 1092]], [364, "ide", 0.0498046875, [1092, 1095]], [365, "num", 0.00640869140625, [1095, 1099]], [366, "s", 0.0064697265625, [1099, 1100]], [367, "into", 0.00799560546875, [1100, 1105]], [369, "2", 0.0031585693359375, [1106, 1107]], [370, "sub", 0.04736328125, [1107, 1111]], [371, "arr", 0.29296875, [1111, 1114]], [372, "ays", 0.0250244140625, [1114, 1117]], [373, "of", 0.0025482177734375, [1117, 1120]], [374, "size", 0.00274658203125, [1120, 1125]], [375, "n", 0.0028839111328125, [1125, 1127]], [376, "/", 0.00543212890625, [1127, 1128]], [377, "2", 0.0035247802734375, [1128, 1129]], [378, "and", 0.00323486328125, [1129, 1133]], [379, "n", 0.002166748046875, [1133, 1135]], [380, "-", 0.00567626953125, [1135, 1136]], [381, "n", 0.0035400390625, [1136, 1137]], [382, "/", 0.00122833251953125, [1137, 1138]], [383, "2", 0.0016021728515625, [1138, 1139]], [388, "vector", 0.0120849609375, [1156, 1163]], [389, "<", 0.006256103515625, [1163, 1164]], [390, "int", 0.0025634765625, [1164, 1167]], [391, ">", 0.00145721435546875, [1167, 1168]], [392, "A", 0.0120849609375, [1168, 1169]], [393, ",", 0.005035400390625, [1169, 1170]], [394, "B", 0.0081787109375, [1170, 1171]], [395, ";", 0.003204345703125, [1171, 1172]], [398, "for", 0.00341796875, [1180, 1184]], [399, "(", 0.002044677734375, [1184, 1185]], [400, "int", 0.0015106201171875, [1185, 1188]], [401, "i", 0.0013427734375, [1188, 1190]], [402, "=", 0.001007080078125, [1190, 1191]], [403, "0", 0.00096893310546875, [1191, 1192]], [404, ";", 0.0005645751953125, [1192, 1193]], [405, "i", 0.000812530517578125, [1193, 1194]], [406, "<", 0.00160980224609375, [1194, 1195]], [407, "n", 0.00177001953125, [1195, 1196]], [408, "/", 0.0006561279296875, [1196, 1197]], [409, "2", 0.0013580322265625, [1197, 1198]], [410, ";", 0.000698089599609375, [1198, 1199]], [411, "i", 0.000720977783203125, [1199, 1200]], [412, "++", 0.00168609619140625, [1200, 1202]], [413, ")", 0.001129150390625, [1202, 1203]], [416, "A", 0.0076904296875, [1215, 1217]], [417, ".", 0.01312255859375, [1217, 1218]], [418, "push", 0.0172119140625, [1218, 1222]], [419, "_", 0.003936767578125, [1222, 1223]], [420, "back", 0.009033203125, [1223, 1227]], [421, "(", 0.00138092041015625, [1227, 1228]], [422, "num", 0.004241943359375, [1228, 1231]], [423, "s", 0.00262451171875, [1231, 1232]], [424, "[", 0.00116729736328125, [1232, 1233]], [425, "i", 0.00058746337890625, [1233, 1234]], [426, "]);", 0.0022735595703125, [1234, 1237]], [429, "for", 0.003173828125, [1245, 1249]], [430, "(", 0.000606536865234375, [1249, 1250]], [431, "int", 0.00140380859375, [1250, 1253]], [432, "i", 0.00067901611328125, [1253, 1255]], [433, "=", 0.000255584716796875, [1255, 1256]], [434, "n", 0.00086212158203125, [1256, 1257]], [435, "/", 0.000431060791015625, [1257, 1258]], [436, "2", 0.0004711151123046875, [1258, 1259]], [437, ";", 0.0003376007080078125, [1259, 1260]], [438, "i", 0.0003719329833984375, [1260, 1261]], [439, "<", 0.00124359130859375, [1261, 1262]], [440, "n", 0.00048065185546875, [1262, 1263]], [441, ";", 0.000682830810546875, [1263, 1264]], [442, "i", 0.000408172607421875, [1264, 1265]], [443, "++", 0.000629425048828125, [1265, 1267]], [444, ")", 0.000766754150390625, [1267, 1268]], [447, "B", 0.0164794921875, [1280, 1282]], [448, ".", 0.0012359619140625, [1282, 1283]], [449, "push", 0.0074462890625, [1283, 1287]], [450, "_", 0.003204345703125, [1287, 1288]], [451, "back", 0.00732421875, [1288, 1292]], [452, "(", 0.0010223388671875, [1292, 1293]], [453, "num", 0.0028228759765625, [1293, 1296]], [454, "s", 0.00171661376953125, [1296, 1297]], [455, "[", 0.00041961669921875, [1297, 1298]], [456, "i", 0.00057220458984375, [1298, 1299]], [457, "]);", 0.0014801025390625, [1299, 1302]], [462, "//", 0.00579833984375, [1319, 1322]], [463, "Step", 0.006011962890625, [1322, 1326]], [465, "2", 0.0018463134765625, [1327, 1328]], [466, ":", 0.003143310546875, [1328, 1329]], [467, "Find", 0.006683349609375, [1329, 1334]], [468, "all", 0.0045166015625, [1334, 1338]], [469, "possible", 0.00836181640625, [1338, 1347]], [470, "subset", 0.01470947265625, [1347, 1354]], [471, "sums", 0.006103515625, [1354, 1359]], [472, "of", 0.000682830810546875, [1359, 1362]], [473, "A", 0.015380859375, [1362, 1364]], [474, "and", 0.003265380859375, [1364, 1368]], [475, "B", 0.006256103515625, [1368, 1370]], [480, "vector", 0.006072998046875, [1387, 1394]], [481, "<", 0.00140380859375, [1394, 1395]], [482, "int", 0.0014801025390625, [1395, 1398]], [483, ">", 0.00118255615234375, [1398, 1399]], [484, "sum", 0.00750732421875, [1399, 1402]], [485, "A", 0.015869140625, [1402, 1403]], [486, ",", 0.00567626953125, [1403, 1404]], [487, "sum", 0.00555419921875, [1404, 1407]], [488, "B", 0.0184326171875, [1407, 1408]], [489, ";", 0.0024871826171875, [1408, 1409]], [492, "find", 0.004791259765625, [1417, 1422]], [493, "(", 0.00130462646484375, [1422, 1423]], [494, "A", 0.00469970703125, [1423, 1424]], [495, ",", 0.00167083740234375, [1424, 1425]], [496, "0", 0.0010833740234375, [1425, 1426]], [497, ",", 0.00072479248046875, [1426, 1427]], [498, "A", 0.00396728515625, [1427, 1428]], [499, ".", 0.01055908203125, [1428, 1429]], [500, "size", 0.001739501953125, [1429, 1433]], [501, "(),", 0.0018310546875, [1433, 1436]], [502, "0", 0.0006561279296875, [1436, 1437]], [503, ",", 0.00049591064453125, [1437, 1438]], [504, "sum", 0.0032196044921875, [1438, 1441]], [505, "A", 0.004119873046875, [1441, 1442]], [506, ");", 0.00201416015625, [1442, 1444]], [509, "find", 0.007354736328125, [1452, 1457]], [510, "(", 0.00124359130859375, [1457, 1458]], [511, "B", 0.00885009765625, [1458, 1459]], [512, ",", 0.0020751953125, [1459, 1460]], [513, "0", 0.0037994384765625, [1460, 1461]], [514, ",", 0.00080108642578125, [1461, 1462]], [515, "B", 0.006561279296875, [1462, 1463]], [516, ".", 0.0023651123046875, [1463, 1464]], [517, "size", 0.00153350830078125, [1464, 1468]], [518, "(),", 0.00106048583984375, [1468, 1471]], [519, "0", 0.000530242919921875, [1471, 1472]], [520, ",", 0.000568389892578125, [1472, 1473]], [521, "sum", 0.0022125244140625, [1473, 1476]], [522, "B", 0.001739501953125, [1476, 1477]], [523, ");", 0.00109100341796875, [1477, 1479]], [528, "sort", 0.005401611328125, [1496, 1501]], [529, "(", 0.0019683837890625, [1501, 1502]], [530, "sum", 0.003875732421875, [1502, 1505]], [531, "A", 0.0050048828125, [1505, 1506]], [532, ".", 0.004913330078125, [1506, 1507]], [533, "begin", 0.0033721923828125, [1507, 1512]], [534, "(),", 0.00191497802734375, [1512, 1515]], [535, "sum", 0.00112152099609375, [1515, 1518]], [536, "A", 0.002044677734375, [1518, 1519]], [537, ".", 0.002044677734375, [1519, 1520]], [538, "end", 0.0029144287109375, [1520, 1523]], [539, "());", 0.004547119140625, [1523, 1527]], [544, "//", 0.004913330078125, [1545, 1548]], [545, "Step", 0.007476806640625, [1548, 1552]], [547, "3", 0.003204345703125, [1553, 1554]], [548, ":", 0.00457763671875, [1554, 1555]], [549, "Find", 0.00628662109375, [1555, 1560]], [550, "combinations", 0.02490234375, [1560, 1573]], [551, "from", 0.0057373046875, [1573, 1578]], [552, "sum", 0.00860595703125, [1578, 1582]], [553, "A", 0.0145263671875, [1582, 1583]], [554, "&", 0.0068359375, [1583, 1585]], [555, "sum", 0.01080322265625, [1585, 1589]], [556, "B", 0.013916015625, [1589, 1590]], [557, "such", 0.0087890625, [1590, 1595]], [558, "that", 0.0029296875, [1595, 1600]], [559, "abs", 0.0341796875, [1600, 1604]], [560, "(", 0.01251220703125, [1604, 1605]], [561, "sum", 0.005645751953125, [1605, 1608]], [562, "-", 0.0172119140625, [1608, 1609]], [563, "go", 0.00933837890625, [1609, 1611]], [564, "al", 0.0198974609375, [1611, 1613]], [565, ")", 0.00592041015625, [1613, 1614]], [566, "is", 0.006683349609375, [1614, 1617]], [567, "minim", 0.02099609375, [1617, 1623]], [568, "ized", 0.005584716796875, [1623, 1627]], [573, "int", 0.0098876953125, [1644, 1648]], [574, "an", 0.037109375, [1648, 1651]], [575, "s", 0.0284423828125, [1651, 1652]], [576, "=", 0.00396728515625, [1652, 1653]], [577, "INT", 0.01092529296875, [1653, 1656]], [578, "_", 0.00799560546875, [1656, 1657]], [579, "MAX", 0.00933837890625, [1657, 1660]], [580, ";", 0.002410888671875, [1660, 1661]], [585, "for", 0.006591796875, [1678, 1682]], [586, "(", 0.0023651123046875, [1682, 1683]], [587, "int", 0.00421142578125, [1683, 1686]], [588, "i", 0.00262451171875, [1686, 1688]], [589, "=", 0.00147247314453125, [1688, 1689]], [590, "0", 0.00131988525390625, [1689, 1690]], [591, ";", 0.001007080078125, [1690, 1691]], [592, "i", 0.0018463134765625, [1691, 1692]], [593, "<", 0.00189208984375, [1692, 1693]], [594, "sum", 0.007415771484375, [1693, 1696]], [595, "A", 0.021728515625, [1696, 1697]], [596, ".", 0.0040283203125, [1697, 1698]], [597, "size", 0.002227783203125, [1698, 1702]], [598, "();", 0.00186920166015625, [1702, 1705]], [599, "i", 0.00152587890625, [1705, 1706]], [600, "++", 0.004180908203125, [1706, 1708]], [601, "){", 0.0057373046875, [1708, 1710]], [604, "int", 0.01226806640625, [1722, 1726]], [605, "s", 0.01434326171875, [1726, 1728]], [606, "=", 0.00439453125, [1728, 1729]], [607, "sum", 0.01171875, [1729, 1732]], [608, "A", 0.0194091796875, [1732, 1733]], [609, "[", 0.004547119140625, [1733, 1734]], [610, "i", 0.0022430419921875, [1734, 1735]], [611, "];", 0.001922607421875, [1735, 1737]], [614, "int", 0.007049560546875, [1749, 1753]], [615, "l", 0.00921630859375, [1753, 1755]], [616, "=", 0.003326416015625, [1755, 1756]], [617, "0", 0.0020904541015625, [1756, 1757]], [618, ";", 0.00146484375, [1757, 1758]], [621, "int", 0.00408935546875, [1770, 1774]], [622, "r", 0.0120849609375, [1774, 1776]], [623, "=", 0.001861572265625, [1776, 1777]], [624, "sum", 0.00848388671875, [1777, 1780]], [625, "B", 0.0264892578125, [1780, 1781]], [626, ".", 0.00604248046875, [1781, 1782]], [627, "size", 0.002716064453125, [1782, 1786]], [628, "()-", 0.005584716796875, [1786, 1789]], [629, "1", 0.007110595703125, [1789, 1790]], [630, ";", 0.0025482177734375, [1790, 1791]], [633, "while", 0.01092529296875, [1803, 1809]], [634, "(", 0.006500244140625, [1809, 1810]], [635, "l", 0.00665283203125, [1810, 1811]], [636, "<", 0.004241943359375, [1811, 1812]], [637, "=", 0.0040283203125, [1812, 1813]], [638, "r", 0.0126953125, [1813, 1814]], [639, "){", 0.006134033203125, [1814, 1816]], [642, "int", 0.0086669921875, [1832, 1836]], [643, "mid", 0.0272216796875, [1836, 1840]], [644, "=", 0.0025177001953125, [1840, 1841]], [645, "l", 0.00469970703125, [1841, 1842]], [646, "+", 0.0027618408203125, [1842, 1843]], [647, "(", 0.0025787353515625, [1843, 1844]], [648, "r", 0.0027313232421875, [1844, 1845]], [649, "-", 0.001190185546875, [1845, 1846]], [650, "l", 0.00390625, [1846, 1847]], [651, ")/", 0.00154876708984375, [1847, 1849]], [652, "2", 0.001251220703125, [1849, 1850]], [653, ";", 0.00135040283203125, [1850, 1851]], [656, "int", 0.005218505859375, [1867, 1871]], [657, "sum", 0.0181884765625, [1871, 1875]], [658, "=", 0.00157928466796875, [1875, 1876]], [659, "s", 0.0048828125, [1876, 1877]], [660, "+", 0.002288818359375, [1877, 1878]], [661, "sum", 0.00762939453125, [1878, 1881]], [662, "B", 0.0159912109375, [1881, 1882]], [663, "[", 0.0029144287109375, [1882, 1883]], [664, "mid", 0.00860595703125, [1883, 1886]], [665, "];", 0.006134033203125, [1886, 1888]], [668, "if", 0.008544921875, [1904, 1907]], [669, "(", 0.004669189453125, [1907, 1908]], [670, "sum", 0.005035400390625, [1908, 1911]], [671, "==", 0.006072998046875, [1911, 1913]], [672, "go", 0.03271484375, [1913, 1915]], [673, "al", 0.01385498046875, [1915, 1917]], [674, ")", 0.003997802734375, [1917, 1918]], [677, "return", 0.005767822265625, [1938, 1945]], [679, "0", 0.0021820068359375, [1946, 1947]], [680, ";", 0.002777099609375, [1947, 1948]], [683, "an", 0.029296875, [1964, 1967]], [684, "s", 0.0238037109375, [1967, 1968]], [685, "=", 0.00164031982421875, [1968, 1969]], [686, "min", 0.0115966796875, [1969, 1972]], [687, "(", 0.00860595703125, [1972, 1973]], [688, "ans", 0.0096435546875, [1973, 1976]], [689, ",", 0.005157470703125, [1976, 1977]], [690, "abs", 0.0235595703125, [1977, 1980]], [691, "(", 0.00506591796875, [1980, 1981]], [692, "sum", 0.0032958984375, [1981, 1984]], [693, "-", 0.0031585693359375, [1984, 1985]], [694, "go", 0.0166015625, [1985, 1987]], [695, "al", 0.00433349609375, [1987, 1989]], [696, "));", 0.0118408203125, [1989, 1992]], [699, "if", 0.005218505859375, [2008, 2011]], [700, "(", 0.0025634765625, [2011, 2012]], [701, "sum", 0.003570556640625, [2012, 2015]], [702, ">", 0.0023956298828125, [2015, 2016]], [703, "go", 0.02001953125, [2016, 2018]], [704, "al", 0.00872802734375, [2018, 2020]], [705, "){", 0.00390625, [2020, 2022]], [708, "r", 0.0087890625, [2042, 2044]], [709, "=", 0.002471923828125, [2044, 2045]], [710, "mid", 0.0101318359375, [2045, 2048]], [711, "-", 0.004547119140625, [2048, 2049]], [712, "1", 0.00640869140625, [2049, 2050]], [713, ";", 0.00225830078125, [2050, 2051]], [716, "}", 0.01007080078125, [2067, 2069]], [719, "else", 0.009765625, [2085, 2090]], [720, "{", 0.004974365234375, [2090, 2091]], [723, "l", 0.00811767578125, [2111, 2113]], [724, "=", 0.00177764892578125, [2113, 2114]], [725, "mid", 0.004302978515625, [2114, 2117]], [726, "+", 0.00250244140625, [2117, 2118]], [727, "1", 0.005218505859375, [2118, 2119]], [728, ";", 0.003875732421875, [2119, 2120]], [731, "}", 0.0059814453125, [2136, 2138]], [735, "}", 0.017822265625, [2154, 2156]], [738, "}", 0.0147705078125, [2164, 2166]], [743, "return", 0.0145263671875, [2183, 2190]], [744, "an", 0.027099609375, [2190, 2193]], [745, "s", 0.0181884765625, [2193, 2194]], [746, ";", 0.006988525390625, [2194, 2195]], [749, "}", 0.0135498046875, [2199, 2201]], [751, "};", 0.02685546875, [2202, 2204]]], "reading_all": [[58, "You", 0.546875, [0, 3]], [59, "are", 0.46875, [3, 7]], [60, "an", 0.466796875, [7, 10]], [61, "exception", 0.6484375, [10, 20]], [62, "ally", 0.478515625, [20, 24]], [63, "intelligent", 0.42578125, [24, 36]], [64, "coding", 0.43359375, [36, 43]], [65, "assistant", 0.45703125, [43, 53]], [66, "that", 0.5078125, [53, 58]], [67, "consistently", 0.4375, [58, 71]], [68, "delivers", 0.44140625, [71, 80]], [69, "accurate", 0.35546875, [80, 89]], [70, "and", 0.318359375, [89, 93]], [71, "reliable", 0.357421875, [93, 102]], [72, "responses", 0.45703125, [102, 112]], [73, "to", 0.283203125, [112, 115]], [74, "user", 0.330078125, [115, 120]], [75, "instructions", 0.427734375, [120, 133]], [76, ".", 0.291015625, [133, 134]], [80, "@", 0.283203125, [139, 141]], [81, "@", 0.251953125, [141, 142]], [82, "Inst", 0.671875, [142, 147]], [83, "ruction", 1.6640625, [147, 154]], [86, "You", 0.421875, [158, 162]], [87, "are", 0.359375, [162, 166]], [88, "a", 0.2451171875, [166, 168]], [89, "program", 0.48828125, [168, 176]], [90, "rep", 2.015625, [176, 180]], [91, "aire", 1.1953125, [180, 184]], [92, "r", 0.318359375, [184, 185]], [93, ".", 0.1923828125, [185, 186]], [94, "Please", 0.224609375, [186, 193]], [95, "repair", 0.55078125, [193, 200]], [96, "the", 0.12451171875, [200, 204]], [97, "following", 0.13671875, [204, 214]], [98, "bug", 0.1845703125, [214, 218]], [99, "gy", 0.1015625, [218, 220]], [100, "program", 0.1875, [220, 228]], [101, ".", 0.125, [228, 229]], [102, "You", 0.08642578125, [229, 233]], [103, "are", 0.07177734375, [233, 237]], [104, "given", 0.1162109375, [237, 243]], [105, "an", 0.080078125, [243, 246]], [106, "integer", 0.1357421875, [246, 254]], [107, "array", 0.1298828125, [254, 260]], [108, "num", 0.11083984375, [260, 264]], [109, "s", 0.11181640625, [264, 265]], [110, "and", 0.076171875, [265, 269]], [111, "an", 0.055419921875, [269, 272]], [112, "integer", 0.08056640625, [272, 280]], [113, "goal", 0.0966796875, [280, 285]], [114, ".", 0.109375, [285, 286]], [116, "You", 0.07275390625, [287, 290]], [117, "want", 0.087890625, [290, 295]], [118, "to", 0.0791015625, [295, 298]], [119, "choose", 0.10009765625, [298, 305]], [120, "a", 0.07861328125, [305, 307]], [121, "subsequ", 0.40625, [307, 315]], [122, "ence", 0.28125, [315, 319]], [123, "of", 0.1435546875, [319, 322]], [124, "num", 0.1328125, [322, 326]], [125, "s", 0.0966796875, [326, 327]], [126, "such", 0.07568359375, [327, 332]], [127, "that", 0.064453125, [332, 337]], [128, "the", 0.055419921875, [337, 341]], [129, "sum", 0.1376953125, [341, 345]], [130, "of", 0.1064453125, [345, 348]], [131, "its", 0.11083984375, [348, 352]], [132, "elements", 0.1533203125, [352, 361]], [133, "is", 0.06884765625, [361, 364]], [134, "the", 0.06591796875, [364, 368]], [135, "closest", 0.15234375, [368, 376]], [136, "possible", 0.1611328125, [376, 385]], [137, "to", 0.07177734375, [385, 388]], [138, "goal", 0.09912109375, [388, 393]], [139, ".", 0.11083984375, [393, 394]], [140, "That", 0.08154296875, [394, 399]], [141, "is", 0.06396484375, [399, 402]], [142, ",", 0.07373046875, [402, 403]], [143, "if", 0.10888671875, [403, 406]], [144, "the", 0.0654296875, [406, 410]], [145, "sum", 0.1201171875, [410, 414]], [146, "of", 0.09228515625, [414, 417]], [147, "the", 0.06396484375, [417, 421]], [148, "subsequ", 0.1904296875, [421, 429]], [149, "ence", 0.1865234375, [429, 433]], [150, "'", 0.080078125, [433, 434]], [151, "s", 0.07666015625, [434, 435]], [152, "elements", 0.12060546875, [435, 444]], [153, "is", 0.0537109375, [444, 447]], [154, "sum", 0.1064453125, [447, 451]], [155, ",", 0.08203125, [451, 452]], [156, "then", 0.0869140625, [452, 457]], [157, "you", 0.09326171875, [457, 461]], [158, "want", 0.08984375, [461, 466]], [159, "to", 0.0693359375, [466, 469]], [160, "minimize", 0.21875, [469, 478]], [161, "the", 0.0703125, [478, 482]], [162, "absolute", 0.1552734375, [482, 491]], [163, "difference", 0.2080078125, [491, 502]], [164, "abs", 0.296875, [502, 506]], [165, "(", 0.162109375, [506, 507]], [166, "sum", 0.1484375, [507, 510]], [167, "-", 0.1611328125, [510, 512]], [168, "goal", 0.2177734375, [512, 517]], [169, ").", 0.1015625, [517, 519]], [171, "Return", 0.267578125, [520, 526]], [172, "the", 0.10595703125, [526, 530]], [173, "minimum", 0.1689453125, [530, 538]], [174, "possible", 0.125, [538, 547]], [175, "value", 0.1005859375, [547, 553]], [176, "of", 0.0654296875, [553, 556]], [177, "abs", 0.26953125, [556, 560]], [178, "(", 0.11962890625, [560, 561]], [179, "sum", 0.1630859375, [561, 564]], [180, "-", 0.11767578125, [564, 566]], [181, "goal", 0.11962890625, [566, 571]], [182, ").", 0.10693359375, [571, 573]], [184, "Note", 0.1650390625, [574, 578]], [185, "that", 0.1484375, [578, 583]], [186, "a", 0.1611328125, [583, 585]], [187, "subsequ", 0.431640625, [585, 593]], [188, "ence", 0.353515625, [593, 597]], [189, "of", 0.1337890625, [597, 600]], [190, "an", 0.11962890625, [600, 603]], [191, "array", 0.177734375, [603, 609]], [192, "is", 0.064453125, [609, 612]], [193, "an", 0.07568359375, [612, 615]], [194, "array", 0.10595703125, [615, 621]], [195, "formed", 0.126953125, [621, 628]], [196, "by", 0.10302734375, [628, 631]], [197, "removing", 0.328125, [631, 640]], [198, "some", 0.134765625, [640, 645]], [199, "elements", 0.18359375, [645, 654]], [200, "(", 0.1279296875, [654, 656]], [201, "poss", 0.70703125, [656, 660]], [202, "ibly", 1.09375, [660, 664]], [203, "all", 0.32421875, [664, 668]], [204, "or", 0.30078125, [668, 671]], [205, "none", 0.287109375, [671, 676]], [206, ")", 0.140625, [676, 677]], [207, "of", 0.11474609375, [677, 680]], [208, "the", 0.12109375, [680, 684]], [209, "original", 0.15234375, [684, 693]], [210, "array", 0.1630859375, [693, 699]], [211, ".", 0.15625, [699, 700]], [212, "B", 0.169921875, [700, 701]], [213, "ug", 0.265625, [701, 703]], [214, "gy", 0.201171875, [703, 705]], [215, "code", 0.31640625, [705, 710]], [216, ":", 0.1298828125, [710, 712]], [217, "class", 0.216796875, [712, 718]], [218, "S", 0.318359375, [718, 720]], [219, "olution", 0.60546875, [720, 727]], [220, "{", 0.1396484375, [727, 729]], [222, "public", 0.189453125, [730, 736]], [223, ":", 0.083984375, [736, 737]], [226, "void", 0.2041015625, [741, 746]], [227, "find", 0.478515625, [746, 751]], [228, "(", 0.240234375, [751, 752]], [229, "vector", 0.30078125, [752, 758]], [230, "<", 0.236328125, [758, 759]], [231, "int", 0.1611328125, [759, 762]], [232, ">", 0.0810546875, [762, 763]], [233, "&", 0.1484375, [763, 764]], [234, "v", 0.2392578125, [764, 765]], [235, ",", 0.0966796875, [765, 766]], [236, "int", 0.1162109375, [766, 770]], [237, "i", 0.1787109375, [770, 772]], [238, ",", 0.08251953125, [772, 773]], [239, "int", 0.08251953125, [773, 777]], [240, "e", 0.24609375, [777, 779]], [241, ",", 0.08447265625, [779, 780]], [242, "int", 0.080078125, [780, 784]], [243, "sum", 0.28125, [784, 788]], [244, ",", 0.07763671875, [788, 789]], [245, "vector", 0.1494140625, [789, 796]], [246, "<", 0.07958984375, [796, 797]], [247, "int", 0.0771484375, [797, 800]], [248, ">", 0.045654296875, [800, 801]], [249, "&", 0.09326171875, [801, 802]], [250, "sum", 0.2353515625, [802, 805]], [251, "v", 0.283203125, [805, 806]], [252, "){", 0.1630859375, [806, 808]], [255, "if", 0.2138671875, [816, 819]], [256, "(", 0.15625, [819, 820]], [257, "i", 0.125, [820, 821]], [258, "==", 0.1689453125, [821, 823]], [259, "e", 0.1611328125, [823, 824]], [260, "){", 0.12890625, [824, 826]], [263, "sum", 0.220703125, [838, 842]], [264, "v", 0.25390625, [842, 843]], [265, ".", 0.1337890625, [843, 844]], [266, "push", 0.3671875, [844, 848]], [267, "_", 0.1865234375, [848, 849]], [268, "back", 0.75, [849, 853]], [269, "(", 0.115234375, [853, 854]], [270, "sum", 0.15625, [854, 857]], [271, ");", 0.126953125, [857, 859]], [274, "return", 0.171875, [871, 878]], [275, ";", 0.09033203125, [878, 879]], [278, "}", 0.1376953125, [887, 889]], [281, "find", 0.5, [897, 902]], [282, "(", 0.1865234375, [902, 903]], [283, "v", 0.21484375, [903, 904]], [284, ",", 0.10498046875, [904, 905]], [285, "i", 0.1474609375, [905, 906]], [286, "+", 0.111328125, [906, 907]], [287, "1", 0.1279296875, [907, 908]], [288, ",", 0.06787109375, [908, 909]], [289, "e", 0.126953125, [909, 910]], [290, ",", 0.0712890625, [910, 911]], [291, "sum", 0.154296875, [911, 914]], [292, "+", 0.1416015625, [914, 915]], [293, "v", 0.09521484375, [915, 916]], [294, "[", 0.08544921875, [916, 917]], [295, "i", 0.0810546875, [917, 918]], [296, "],", 0.09521484375, [918, 920]], [297, "sum", 0.1259765625, [920, 923]], [298, "v", 0.134765625, [923, 924]], [299, ");", 0.1044921875, [924, 926]], [302, "find", 0.2734375, [934, 939]], [303, "(", 0.1669921875, [939, 940]], [304, "v", 0.10498046875, [940, 941]], [305, ",", 0.08740234375, [941, 942]], [306, "i", 0.11376953125, [942, 943]], [307, "+", 0.0927734375, [943, 944]], [308, "1", 0.11865234375, [944, 945]], [309, ",", 0.08349609375, [945, 946]], [310, "e", 0.09375, [946, 947]], [311, ",", 0.0703125, [947, 948]], [312, "sum", 0.11474609375, [948, 951]], [313, ",", 0.072265625, [951, 952]], [314, "sum", 0.08251953125, [952, 955]], [315, "v", 0.07080078125, [955, 956]], [316, ");", 0.0732421875, [956, 958]], [319, "}", 0.1220703125, [962, 964]], [326, "int", 0.177734375, [982, 986]], [327, "min", 0.36328125, [986, 990]], [328, "Abs", 1.203125, [990, 993]], [329, "Diff", 0.89453125, [993, 997]], [330, "erence", 0.87109375, [997, 1003]], [331, "(", 0.220703125, [1003, 1004]], [332, "vector", 0.30859375, [1004, 1010]], [333, "<", 0.1416015625, [1010, 1011]], [334, "int", 0.15625, [1011, 1014]], [335, ">", 0.09033203125, [1014, 1015]], [336, "&", 0.154296875, [1015, 1016]], [337, "num", 0.251953125, [1016, 1020]], [338, "s", 0.189453125, [1020, 1021]], [339, ",", 0.10595703125, [1021, 1022]], [340, "int", 0.09814453125, [1022, 1026]], [341, "goal", 0.53515625, [1026, 1031]], [342, ")", 0.1494140625, [1031, 1032]], [343, "{", 0.1279296875, [1032, 1034]], [346, "int", 0.1396484375, [1042, 1046]], [347, "n", 0.2099609375, [1046, 1048]], [348, "=", 0.1513671875, [1048, 1049]], [349, "num", 0.11669921875, [1049, 1052]], [350, "s", 0.11376953125, [1052, 1053]], [351, ".", 0.12890625, [1053, 1054]], [352, "size", 0.1328125, [1054, 1058]], [353, "();", 0.111328125, [1058, 1061]], [358, "//", 0.1728515625, [1078, 1081]], [359, "Step", 0.5390625, [1081, 1085]], [361, "1", 0.3984375, [1086, 1087]], [362, ":", 0.1904296875, [1087, 1088]], [363, "Div", 0.734375, [1088, 1092]], [364, "ide", 1.40625, [1092, 1095]], [365, "num", 0.400390625, [1095, 1099]], [366, "s", 0.3515625, [1099, 1100]], [367, "into", 0.318359375, [1100, 1105]], [369, "2", 0.224609375, [1106, 1107]], [370, "sub", 0.423828125, [1107, 1111]], [371, "arr", 0.96875, [1111, 1114]], [372, "ays", 0.7109375, [1114, 1117]], [373, "of", 0.2109375, [1117, 1120]], [374, "size", 0.2451171875, [1120, 1125]], [375, "n", 0.2021484375, [1125, 1127]], [376, "/", 0.1923828125, [1127, 1128]], [377, "2", 0.220703125, [1128, 1129]], [378, "and", 0.2060546875, [1129, 1133]], [379, "n", 0.1748046875, [1133, 1135]], [380, "-", 0.142578125, [1135, 1136]], [381, "n", 0.17578125, [1136, 1137]], [382, "/", 0.1298828125, [1137, 1138]], [383, "2", 0.158203125, [1138, 1139]], [388, "vector", 0.4375, [1156, 1163]], [389, "<", 0.1982421875, [1163, 1164]], [390, "int", 0.1962890625, [1164, 1167]], [391, ">", 0.11767578125, [1167, 1168]], [392, "A", 0.439453125, [1168, 1169]], [393, ",", 0.1552734375, [1169, 1170]], [394, "B", 0.232421875, [1170, 1171]], [395, ";", 0.140625, [1171, 1172]], [398, "for", 0.2578125, [1180, 1184]], [399, "(", 0.2255859375, [1184, 1185]], [400, "int", 0.142578125, [1185, 1188]], [401, "i", 0.150390625, [1188, 1190]], [402, "=", 0.11572265625, [1190, 1191]], [403, "0", 0.1103515625, [1191, 1192]], [404, ";", 0.07861328125, [1192, 1193]], [405, "i", 0.1083984375, [1193, 1194]], [406, "<", 0.07080078125, [1194, 1195]], [407, "n", 0.10400390625, [1195, 1196]], [408, "/", 0.07861328125, [1196, 1197]], [409, "2", 0.11572265625, [1197, 1198]], [410, ";", 0.06982421875, [1198, 1199]], [411, "i", 0.08544921875, [1199, 1200]], [412, "++", 0.19140625, [1200, 1202]], [413, ")", 0.146484375, [1202, 1203]], [416, "A", 0.333984375, [1215, 1217]], [417, ".", 0.205078125, [1217, 1218]], [418, "push", 0.54296875, [1218, 1222]], [419, "_", 0.224609375, [1222, 1223]], [420, "back", 0.62109375, [1223, 1227]], [421, "(", 0.12890625, [1227, 1228]], [422, "num", 0.208984375, [1228, 1231]], [423, "s", 0.1865234375, [1231, 1232]], [424, "[", 0.0771484375, [1232, 1233]], [425, "i", 0.06689453125, [1233, 1234]], [426, "]);", 0.126953125, [1234, 1237]], [429, "for", 0.2236328125, [1245, 1249]], [430, "(", 0.1640625, [1249, 1250]], [431, "int", 0.13671875, [1250, 1253]], [432, "i", 0.08935546875, [1253, 1255]], [433, "=", 0.09130859375, [1255, 1256]], [434, "n", 0.09326171875, [1256, 1257]], [435, "/", 0.0869140625, [1257, 1258]], [436, "2", 0.1015625, [1258, 1259]], [437, ";", 0.0673828125, [1259, 1260]], [438, "i", 0.064453125, [1260, 1261]], [439, "<", 0.0576171875, [1261, 1262]], [440, "n", 0.06640625, [1262, 1263]], [441, ";", 0.06787109375, [1263, 1264]], [442, "i", 0.054931640625, [1264, 1265]], [443, "++", 0.1181640625, [1265, 1267]], [444, ")", 0.11767578125, [1267, 1268]], [447, "B", 0.25, [1280, 1282]], [448, ".", 0.1884765625, [1282, 1283]], [449, "push", 0.21875, [1283, 1287]], [450, "_", 0.150390625, [1287, 1288]], [451, "back", 0.376953125, [1288, 1292]], [452, "(", 0.12353515625, [1292, 1293]], [453, "num", 0.11669921875, [1293, 1296]], [454, "s", 0.115234375, [1296, 1297]], [455, "[", 0.07177734375, [1297, 1298]], [456, "i", 0.064453125, [1298, 1299]], [457, "]);", 0.11865234375, [1299, 1302]], [462, "//", 0.240234375, [1319, 1322]], [463, "Step", 0.380859375, [1322, 1326]], [465, "2", 0.31640625, [1327, 1328]], [466, ":", 0.208984375, [1328, 1329]], [467, "Find", 0.4921875, [1329, 1334]], [468, "all", 0.3359375, [1334, 1338]], [469, "possible", 0.49609375, [1338, 1347]], [470, "subset", 0.61328125, [1347, 1354]], [471, "sums", 0.75390625, [1354, 1359]], [472, "of", 0.197265625, [1359, 1362]], [473, "A", 0.3984375, [1362, 1364]], [474, "and", 0.23046875, [1364, 1368]], [475, "B", 0.24609375, [1368, 1370]], [480, "vector", 0.373046875, [1387, 1394]], [481, "<", 0.1572265625, [1394, 1395]], [482, "int", 0.2119140625, [1395, 1398]], [483, ">", 0.1533203125, [1398, 1399]], [484, "sum", 0.484375, [1399, 1402]], [485, "A", 0.75390625, [1402, 1403]], [486, ",", 0.1904296875, [1403, 1404]], [487, "sum", 0.310546875, [1404, 1407]], [488, "B", 0.57421875, [1407, 1408]], [489, ";", 0.177734375, [1408, 1409]], [492, "find", 0.466796875, [1417, 1422]], [493, "(", 0.2890625, [1422, 1423]], [494, "A", 0.3046875, [1423, 1424]], [495, ",", 0.10888671875, [1424, 1425]], [496, "0", 0.1787109375, [1425, 1426]], [497, ",", 0.099609375, [1426, 1427]], [498, "A", 0.1455078125, [1427, 1428]], [499, ".", 0.2109375, [1428, 1429]], [500, "size", 0.2451171875, [1429, 1433]], [501, "(),", 0.162109375, [1433, 1436]], [502, "0", 0.1513671875, [1436, 1437]], [503, ",", 0.1015625, [1437, 1438]], [504, "sum", 0.279296875, [1438, 1441]], [505, "A", 0.2578125, [1441, 1442]], [506, ");", 0.1865234375, [1442, 1444]], [509, "find", 0.392578125, [1452, 1457]], [510, "(", 0.306640625, [1457, 1458]], [511, "B", 0.302734375, [1458, 1459]], [512, ",", 0.1640625, [1459, 1460]], [513, "0", 0.2041015625, [1460, 1461]], [514, ",", 0.130859375, [1461, 1462]], [515, "B", 0.1484375, [1462, 1463]], [516, ".", 0.2158203125, [1463, 1464]], [517, "size", 0.1865234375, [1464, 1468]], [518, "(),", 0.1083984375, [1468, 1471]], [519, "0", 0.10595703125, [1471, 1472]], [520, ",", 0.0771484375, [1472, 1473]], [521, "sum", 0.1748046875, [1473, 1476]], [522, "B", 0.19140625, [1476, 1477]], [523, ");", 0.1220703125, [1477, 1479]], [528, "sort", 0.60546875, [1496, 1501]], [529, "(", 0.259765625, [1501, 1502]], [530, "sum", 0.30859375, [1502, 1505]], [531, "A", 0.2431640625, [1505, 1506]], [532, ".", 0.19921875, [1506, 1507]], [533, "begin", 0.3359375, [1507, 1512]], [534, "(),", 0.1865234375, [1512, 1515]], [535, "sum", 0.23828125, [1515, 1518]], [536, "A", 0.2099609375, [1518, 1519]], [537, ".", 0.189453125, [1519, 1520]], [538, "end", 0.1767578125, [1520, 1523]], [539, "());", 0.27734375, [1523, 1527]], [544, "//", 0.26171875, [1545, 1548]], [545, "Step", 0.408203125, [1548, 1552]], [547, "3", 0.353515625, [1553, 1554]], [548, ":", 0.283203125, [1554, 1555]], [549, "Find", 0.44921875, [1555, 1560]], [550, "combinations", 2.140625, [1560, 1573]], [551, "from", 0.60546875, [1573, 1578]], [552, "sum", 0.8046875, [1578, 1582]], [553, "A", 0.56640625, [1582, 1583]], [554, "&", 0.6015625, [1583, 1585]], [555, "sum", 0.53125, [1585, 1589]], [556, "B", 0.44140625, [1589, 1590]], [557, "such", 0.546875, [1590, 1595]], [558, "that", 0.38671875, [1595, 1600]], [559, "abs", 1.109375, [1600, 1604]], [560, "(", 0.5625, [1604, 1605]], [561, "sum", 0.3515625, [1605, 1608]], [562, "-", 0.4296875, [1608, 1609]], [563, "go", 1.265625, [1609, 1611]], [564, "al", 0.8828125, [1611, 1613]], [565, ")", 0.349609375, [1613, 1614]], [566, "is", 0.32421875, [1614, 1617]], [567, "minim", 0.76171875, [1617, 1623]], [568, "ized", 0.703125, [1623, 1627]], [573, "int", 0.341796875, [1644, 1648]], [574, "an", 0.5625, [1648, 1651]], [575, "s", 0.546875, [1651, 1652]], [576, "=", 0.306640625, [1652, 1653]], [577, "INT", 0.52734375, [1653, 1656]], [578, "_", 0.2890625, [1656, 1657]], [579, "MAX", 0.5390625, [1657, 1660]], [580, ";", 0.1591796875, [1660, 1661]], [585, "for", 0.39453125, [1678, 1682]], [586, "(", 0.353515625, [1682, 1683]], [587, "int", 0.3125, [1683, 1686]], [588, "i", 0.21875, [1686, 1688]], [589, "=", 0.2001953125, [1688, 1689]], [590, "0", 0.1591796875, [1689, 1690]], [591, ";", 0.1494140625, [1690, 1691]], [592, "i", 0.154296875, [1691, 1692]], [593, "<", 0.1064453125, [1692, 1693]], [594, "sum", 0.333984375, [1693, 1696]], [595, "A", 0.3984375, [1696, 1697]], [596, ".", 0.234375, [1697, 1698]], [597, "size", 0.21484375, [1698, 1702]], [598, "();", 0.1982421875, [1702, 1705]], [599, "i", 0.134765625, [1705, 1706]], [600, "++", 0.2275390625, [1706, 1708]], [601, "){", 0.27734375, [1708, 1710]], [604, "int", 0.2216796875, [1722, 1726]], [605, "s", 0.388671875, [1726, 1728]], [606, "=", 0.271484375, [1728, 1729]], [607, "sum", 0.296875, [1729, 1732]], [608, "A", 0.318359375, [1732, 1733]], [609, "[", 0.1748046875, [1733, 1734]], [610, "i", 0.1123046875, [1734, 1735]], [611, "];", 0.12109375, [1735, 1737]], [614, "int", 0.1611328125, [1749, 1753]], [615, "l", 0.279296875, [1753, 1755]], [616, "=", 0.1796875, [1755, 1756]], [617, "0", 0.14453125, [1756, 1757]], [618, ";", 0.107421875, [1757, 1758]], [621, "int", 0.1376953125, [1770, 1774]], [622, "r", 0.41796875, [1774, 1776]], [623, "=", 0.208984375, [1776, 1777]], [624, "sum", 0.263671875, [1777, 1780]], [625, "B", 0.404296875, [1780, 1781]], [626, ".", 0.2431640625, [1781, 1782]], [627, "size", 0.1748046875, [1782, 1786]], [628, "()-", 0.390625, [1786, 1789]], [629, "1", 0.33984375, [1789, 1790]], [630, ";", 0.1591796875, [1790, 1791]], [633, "while", 0.466796875, [1803, 1809]], [634, "(", 0.337890625, [1809, 1810]], [635, "l", 0.279296875, [1810, 1811]], [636, "<", 0.20703125, [1811, 1812]], [637, "=", 0.25390625, [1812, 1813]], [638, "r", 0.251953125, [1813, 1814]], [639, "){", 0.275390625, [1814, 1816]], [642, "int", 0.236328125, [1832, 1836]], [643, "mid", 0.5703125, [1836, 1840]], [644, "=", 0.2138671875, [1840, 1841]], [645, "l", 0.1611328125, [1841, 1842]], [646, "+", 0.1513671875, [1842, 1843]], [647, "(", 0.23828125, [1843, 1844]], [648, "r", 0.173828125, [1844, 1845]], [649, "-", 0.16796875, [1845, 1846]], [650, "l", 0.19921875, [1846, 1847]], [651, ")/", 0.31640625, [1847, 1849]], [652, "2", 0.2001953125, [1849, 1850]], [653, ";", 0.14453125, [1850, 1851]], [656, "int", 0.21875, [1867, 1871]], [657, "sum", 0.43359375, [1871, 1875]], [658, "=", 0.310546875, [1875, 1876]], [659, "s", 0.26171875, [1876, 1877]], [660, "+", 0.259765625, [1877, 1878]], [661, "sum", 0.294921875, [1878, 1881]], [662, "B", 0.3828125, [1881, 1882]], [663, "[", 0.2197265625, [1882, 1883]], [664, "mid", 0.267578125, [1883, 1886]], [665, "];", 0.2177734375, [1886, 1888]], [668, "if", 0.3828125, [1904, 1907]], [669, "(", 0.345703125, [1907, 1908]], [670, "sum", 0.296875, [1908, 1911]], [671, "==", 0.49609375, [1911, 1913]], [672, "go", 0.8125, [1913, 1915]], [673, "al", 0.53515625, [1915, 1917]], [674, ")", 0.2578125, [1917, 1918]], [677, "return", 0.37890625, [1938, 1945]], [679, "0", 0.248046875, [1946, 1947]], [680, ";", 0.2099609375, [1947, 1948]], [683, "an", 0.453125, [1964, 1967]], [684, "s", 0.6015625, [1967, 1968]], [685, "=", 0.27734375, [1968, 1969]], [686, "min", 0.3984375, [1969, 1972]], [687, "(", 0.392578125, [1972, 1973]], [688, "ans", 0.4921875, [1973, 1976]], [689, ",", 0.2314453125, [1976, 1977]], [690, "abs", 0.78515625, [1977, 1980]], [691, "(", 0.435546875, [1980, 1981]], [692, "sum", 0.349609375, [1981, 1984]], [693, "-", 0.26953125, [1984, 1985]], [694, "go", 0.5078125, [1985, 1987]], [695, "al", 0.26953125, [1987, 1989]], [696, "));", 0.431640625, [1989, 1992]], [699, "if", 0.283203125, [2008, 2011]], [700, "(", 0.294921875, [2011, 2012]], [701, "sum", 0.31640625, [2012, 2015]], [702, ">", 0.4609375, [2015, 2016]], [703, "go", 0.419921875, [2016, 2018]], [704, "al", 0.34375, [2018, 2020]], [705, "){", 0.349609375, [2020, 2022]], [708, "r", 0.4765625, [2042, 2044]], [709, "=", 0.373046875, [2044, 2045]], [710, "mid", 0.4140625, [2045, 2048]], [711, "-", 0.2890625, [2048, 2049]], [712, "1", 0.37109375, [2049, 2050]], [713, ";", 0.23046875, [2050, 2051]], [716, "}", 0.3828125, [2067, 2069]], [719, "else", 0.5546875, [2085, 2090]], [720, "{", 0.328125, [2090, 2091]], [723, "l", 0.416015625, [2111, 2113]], [724, "=", 0.255859375, [2113, 2114]], [725, "mid", 0.25390625, [2114, 2117]], [726, "+", 0.275390625, [2117, 2118]], [727, "1", 0.298828125, [2118, 2119]], [728, ";", 0.2099609375, [2119, 2120]], [731, "}", 0.322265625, [2136, 2138]], [735, "}", 0.515625, [2154, 2156]], [738, "}", 0.5390625, [2164, 2166]], [743, "return", 0.6328125, [2183, 2190]], [744, "an", 0.55859375, [2190, 2193]], [745, "s", 0.64453125, [2193, 2194]], [746, ";", 0.390625, [2194, 2195]], [749, "}", 0.50390625, [2199, 2201]], [751, "};", 1.1171875, [2202, 2204]]]}, "clean_tokens": ["<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cbegin\u2581of\u2581sentence\uff5c>", "You", "are", "an", "exception", "ally", "intelligent", "coding", "assistant", "that", "consistently", "delivers", "accurate", "and", "reliable", "responses", "to", "user", "instructions", ".", "", "", "", "@", "@", "Inst", "ruction", "", "", "You", "are", "a", "program", "rep", "aire", "r", ".", "Please", "repair", "the", "following", "bug", "gy", "program", ".", "You", "are", "given", "an", "integer", "array", "num", "s", "and", "an", "integer", "goal", ".", "", "You", "want", "to", "choose", "a", "subsequ", "ence", "of", "num", "s", "such", "that", "the", "sum", "of", "its", "elements", "is", "the", "closest", "possible", "to", "goal", ".", "That", "is", ",", "if", "the", "sum", "of", "the", "subsequ", "ence", "'", "s", "elements", "is", "sum", ",", "then", "you", "want", "to", "minimize", "the", "absolute", "difference", "abs", "(", "sum", "-", "goal", ").", "", "Return", "the", "minimum", "possible", "value", "of", "abs", "(", "sum", "-", "goal", ").", "", "Note", "that", "a", "subsequ", "ence", "of", "an", "array", "is", "an", "array", "formed", "by", "removing", "some", "elements", "(", "poss", "ibly", "all", "or", "none", ")", "of", "the", "original", "array", ".", "B", "ug", "gy", "code", ":", "class", "S", "olution", "{", "", "public", ":", "", "", "void", "find", "(", "vector", "<", "int", ">", "&", "v", ",", "int", "i", ",", "int", "e", ",", "int", "sum", ",", "vector", "<", "int", ">", "&", "sum", "v", "){", "", "", "if", "(", "i", "==", "e", "){", "", "", "sum", "v", ".", "push", "_", "back", "(", "sum", ");", "", "", "return", ";", "", "", "}", "", "", "find", "(", "v", ",", "i", "+", "1", ",", "e", ",", "sum", "+", "v", "[", "i", "],", "sum", "v", ");", "", "", "find", "(", "v", ",", "i", "+", "1", ",", "e", ",", "sum", ",", "sum", "v", ");", "", "", "}", "", "", "", "", "", "", "int", "min", "Abs", "Diff", "erence", "(", "vector", "<", "int", ">", "&", "num", "s", ",", "int", "goal", ")", "{", "", "", "int", "n", "=", "num", "s", ".", "size", "();", "", "", "", "", "//", "Step", "", "1", ":", "Div", "ide", "num", "s", "into", "", "2", "sub", "arr", "ays", "of", "size", "n", "/", "2", "and", "n", "-", "n", "/", "2", "", "", "", "", "vector", "<", "int", ">", "A", ",", "B", ";", "", "", "for", "(", "int", "i", "=", "0", ";", "i", "<", "n", "/", "2", ";", "i", "++", ")", "", "", "A", ".", "push", "_", "back", "(", "num", "s", "[", "i", "]);", "", "", "for", "(", "int", "i", "=", "n", "/", "2", ";", "i", "<", "n", ";", "i", "++", ")", "", "", "B", ".", "push", "_", "back", "(", "num", "s", "[", "i", "]);", "", "", "", "", "//", "Step", "", "2", ":", "Find", "all", "possible", "subset", "sums", "of", "A", "and", "B", "", "", "", "", "vector", "<", "int", ">", "sum", "A", ",", "sum", "B", ";", "", "", "find", "(", "A", ",", "0", ",", "A", ".", "size", "(),", "0", ",", "sum", "A", ");", "", "", "find", "(", "B", ",", "0", ",", "B", ".", "size", "(),", "0", ",", "sum", "B", ");", "", "", "", "", "sort", "(", "sum", "A", ".", "begin", "(),", "sum", "A", ".", "end", "());", "", "", "", "", "//", "Step", "", "3", ":", "Find", "combinations", "from", "sum", "A", "&", "sum", "B", "such", "that", "abs", "(", "sum", "-", "go", "al", ")", "is", "minim", "ized", "", "", "", "", "int", "an", "s", "=", "INT", "_", "MAX", ";", "", "", "", "", "for", "(", "int", "i", "=", "0", ";", "i", "<", "sum", "A", ".", "size", "();", "i", "++", "){", "", "", "int", "s", "=", "sum", "A", "[", "i", "];", "", "", "int", "l", "=", "0", ";", "", "", "int", "r", "=", "sum", "B", ".", "size", "()-", "1", ";", "", "", "while", "(", "l", "<", "=", "r", "){", "", "", "int", "mid", "=", "l", "+", "(", "r", "-", "l", ")/", "2", ";", "", "", "int", "sum", "=", "s", "+", "sum", "B", "[", "mid", "];", "", "", "if", "(", "sum", "==", "go", "al", ")", "", "", "return", "", "0", ";", "", "", "an", "s", "=", "min", "(", "ans", ",", "abs", "(", "sum", "-", "go", "al", "));", "", "", "if", "(", "sum", ">", "go", "al", "){", "", "", "r", "=", "mid", "-", "1", ";", "", "", "}", "", "", "else", "{", "", "", "l", "=", "mid", "+", "1", ";", "", "", "}", "", "", "", "}", "", "", "}", "", "", "", "", "return", "an", "s", ";", "", "", "}", "", "};", "$", "Test", "case", "(", "Input", "with", "expected", "output", ")", ":", "Input", ":", "num", "s", "=", "[", "5", ",-", "7", ",", "3", ",", "5", "],", "goal", "=", "6", "", "Output", ":", "", "0", "", "F", "ault", "reasoning", ":", "sum", "B", "(", "variable", ")", "in", "min", "Abs", "Diff", "erence", "(", "function", ")", "is", "wrong", ".", "", "", "", "@", "@", "Response", "", ""], "fix": null}