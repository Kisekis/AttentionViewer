{"data": null, "prompt": "You are an exceptionally intelligent coding assistant that consistently delivers accurate and reliable responses to user instructions.\n\n    @@ Instruction\n    You are a program repairer. Please repair the following buggy program. You are given an integer array nums and an integer goal.\nYou want to choose a subsequence of nums such that the sum of its elements is the closest possible to goal. That is, if the sum of the subsequence's elements is sum, then you want to minimize the absolute difference abs(sum - goal).\nReturn the minimum possible value of abs(sum - goal).\nNote that a subsequence of an array is an array formed by removing some elements (possibly all or none) of the original array.Buggy code : class Solution {\npublic:\n    void find(vector<int>&v, int i, int e, int sum, vector<int>&sumv){\n        if(i==e){\n            sumv.push_back(sum);\n            return;\n        }\n        find(v,i+1,e,sum+v[i],sumv);\n        find(v,i+1,e,sum,sumv);\n    }\n        \n    \n    int minAbsDifference(vector<int>& nums, int goal) {\n        int n=nums.size();\n        \n        //Step 1: Divide nums into 2 subarrays of size n/2 and n-n/2\n        \n        vector<int>A,B;\n        for(int i=0;i<n/2;i++)\n            A.push_back(nums[i]);\n        for(int i=n/2;i<n;i++)\n            B.push_back(nums[i]);\n        \n        //Step 2: Find all possible subset sums of A and B\n        \n        vector<int>sumA,sumB;\n        find(A,0,A.size(),0,sumA);\n        find(B,0,B.size(),0,sumB);\n        \n        sort(sumA.begin(),sumA.end());\n         \n        //Step 3: Find combinations from sumA & sumB such that abs(sum-goal) is minimized\n        \n        int ans=INT_MAX;\n        \n        for(int i=0;i<sumA.size();i++){\n            int s=sumA[i];\n            int l=0;\n            int r=sumB.size()-1;\n            while(l<=r){\n                int mid=l+(r-l)/2;\n                int sum=s+sumB[mid];\n                if(sum==goal)\n                    return 0;\n                ans=min(ans,abs(sum-goal));\n                if(sum>goal){\n                    r=mid-1;\n                }\n                else{\n                    l=mid+1;\n                }    \n            }\n        }\n        \n        return ans;\n    }\n};$Testcase(Input with expected output) : Input: nums = [5,-7,3,5], goal = 6\nOutput: 0\nFault reasoning: sumB(variable) in minAbsDifference(function) is wrong.\n\n    @@ Response\n    ", "res": {"reading_first": [[1, "You", 0.010009765625, [0, 3]], [2, "are", 0.01177978515625, [3, 7]], [3, "an", 0.013916015625, [7, 10]], [4, "exception", 0.01409912109375, [10, 20]], [5, "ally", 0.01336669921875, [20, 24]], [6, "intelligent", 0.01171875, [24, 36]], [7, "coding", 0.0223388671875, [36, 43]], [8, "assistant", 0.009765625, [43, 53]], [9, "that", 0.015869140625, [53, 58]], [10, "consistently", 0.01611328125, [58, 71]], [11, "delivers", 0.01141357421875, [71, 80]], [12, "accurate", 0.01495361328125, [80, 89]], [13, "and", 0.0191650390625, [89, 93]], [14, "reliable", 0.0111083984375, [93, 102]], [15, "responses", 0.012939453125, [102, 112]], [16, "to", 0.017333984375, [112, 115]], [17, "user", 0.0093994140625, [115, 120]], [18, "instructions", 0.0115966796875, [120, 133]], [19, ".", 0.08203125, [133, 134]], [23, "@", 0.00860595703125, [139, 141]], [24, "@", 0.01043701171875, [141, 142]], [25, "Inst", 0.0091552734375, [142, 147]], [26, "ruction", 0.0086669921875, [147, 154]], [29, "You", 0.007720947265625, [158, 162]], [30, "are", 0.01263427734375, [162, 166]], [31, "a", 0.024658203125, [166, 168]], [32, "program", 0.01275634765625, [168, 176]], [33, "rep", 0.0115966796875, [176, 180]], [34, "aire", 0.00921630859375, [180, 184]], [35, "r", 0.0084228515625, [184, 185]], [36, ".", 0.08154296875, [185, 186]], [37, "Please", 0.016357421875, [186, 193]], [38, "repair", 0.01336669921875, [193, 200]], [39, "the", 0.0191650390625, [200, 204]], [40, "following", 0.0181884765625, [204, 214]], [41, "bug", 0.0142822265625, [214, 218]], [42, "gy", 0.00811767578125, [218, 220]], [43, "program", 0.01202392578125, [220, 228]], [44, ".", 0.0830078125, [228, 229]], [45, "You", 0.0084228515625, [229, 233]], [46, "are", 0.01177978515625, [233, 237]], [47, "given", 0.0196533203125, [237, 243]], [48, "an", 0.01422119140625, [243, 246]], [49, "integer", 0.01251220703125, [246, 254]], [50, "array", 0.01470947265625, [254, 260]], [51, "num", 0.01226806640625, [260, 264]], [52, "s", 0.01318359375, [264, 265]], [53, "and", 0.0201416015625, [265, 269]], [54, "an", 0.01385498046875, [269, 272]], [55, "integer", 0.0126953125, [272, 280]], [56, "goal", 0.0133056640625, [280, 285]], [57, ".", 0.08251953125, [285, 286]], [59, "You", 0.010009765625, [287, 290]], [60, "want", 0.013427734375, [290, 295]], [61, "to", 0.0184326171875, [295, 298]], [62, "choose", 0.0128173828125, [298, 305]], [63, "a", 0.0244140625, [305, 307]], [64, "subsequ", 0.016357421875, [307, 315]], [65, "ence", 0.0106201171875, [315, 319]], [66, "of", 0.0198974609375, [319, 322]], [67, "num", 0.0125732421875, [322, 326]], [68, "s", 0.0123291015625, [326, 327]], [69, "such", 0.01190185546875, [327, 332]], [70, "that", 0.015869140625, [332, 337]], [71, "the", 0.018798828125, [337, 341]], [72, "sum", 0.01092529296875, [341, 345]], [73, "of", 0.019775390625, [345, 348]], [74, "its", 0.00970458984375, [348, 352]], [75, "elements", 0.01318359375, [352, 361]], [76, "is", 0.012939453125, [361, 364]], [77, "the", 0.0191650390625, [364, 368]], [78, "closest", 0.01318359375, [368, 376]], [79, "possible", 0.01171875, [376, 385]], [80, "to", 0.0186767578125, [385, 388]], [81, "goal", 0.0133056640625, [388, 393]], [82, ".", 0.0810546875, [393, 394]], [83, "That", 0.01348876953125, [394, 399]], [84, "is", 0.01312255859375, [399, 402]], [85, ",", 0.0267333984375, [402, 403]], [86, "if", 0.02001953125, [403, 406]], [87, "the", 0.0196533203125, [406, 410]], [88, "sum", 0.0107421875, [410, 414]], [89, "of", 0.0198974609375, [414, 417]], [90, "the", 0.019775390625, [417, 421]], [91, "subsequ", 0.01611328125, [421, 429]], [92, "ence", 0.0107421875, [429, 433]], [93, "'", 0.011962890625, [433, 434]], [94, "s", 0.01251220703125, [434, 435]], [95, "elements", 0.0133056640625, [435, 444]], [96, "is", 0.0133056640625, [444, 447]], [97, "sum", 0.01116943359375, [447, 451]], [98, ",", 0.02783203125, [451, 452]], [99, "then", 0.0177001953125, [452, 457]], [100, "you", 0.0081787109375, [457, 461]], [101, "want", 0.0135498046875, [461, 466]], [102, "to", 0.0191650390625, [466, 469]], [103, "minimize", 0.0172119140625, [469, 478]], [104, "the", 0.0196533203125, [478, 482]], [105, "absolute", 0.0177001953125, [482, 491]], [106, "difference", 0.01373291015625, [491, 502]], [107, "abs", 0.01373291015625, [502, 506]], [108, "(", 0.046630859375, [506, 507]], [109, "sum", 0.0123291015625, [507, 510]], [110, "-", 0.01019287109375, [510, 512]], [111, "goal", 0.013671875, [512, 517]], [112, ").", 0.0172119140625, [517, 519]], [114, "Return", 0.01226806640625, [520, 526]], [115, "the", 0.019287109375, [526, 530]], [116, "minimum", 0.01177978515625, [530, 538]], [117, "possible", 0.0120849609375, [538, 547]], [118, "value", 0.0150146484375, [547, 553]], [119, "of", 0.0206298828125, [553, 556]], [120, "abs", 0.013671875, [556, 560]], [121, "(", 0.048095703125, [560, 561]], [122, "sum", 0.01275634765625, [561, 564]], [123, "-", 0.01068115234375, [564, 566]], [124, "goal", 0.0140380859375, [566, 571]], [125, ").", 0.01806640625, [571, 573]], [127, "Note", 0.01165771484375, [574, 578]], [128, "that", 0.016845703125, [578, 583]], [129, "a", 0.0260009765625, [583, 585]], [130, "subsequ", 0.015869140625, [585, 593]], [131, "ence", 0.011474609375, [593, 597]], [132, "of", 0.0211181640625, [597, 600]], [133, "an", 0.0142822265625, [600, 603]], [134, "array", 0.015869140625, [603, 609]], [135, "is", 0.01287841796875, [609, 612]], [136, "an", 0.0140380859375, [612, 615]], [137, "array", 0.0157470703125, [615, 621]], [138, "formed", 0.02001953125, [621, 628]], [139, "by", 0.0137939453125, [628, 631]], [140, "removing", 0.00921630859375, [631, 640]], [141, "some", 0.01153564453125, [640, 645]], [142, "elements", 0.0135498046875, [645, 654]], [143, "(", 0.022705078125, [654, 656]], [144, "poss", 0.0125732421875, [656, 660]], [145, "ibly", 0.01483154296875, [660, 664]], [146, "all", 0.01153564453125, [664, 668]], [147, "or", 0.0145263671875, [668, 671]], [148, "none", 0.01495361328125, [671, 676]], [149, ")", 0.0634765625, [676, 677]], [150, "of", 0.020263671875, [677, 680]], [151, "the", 0.0189208984375, [680, 684]], [152, "original", 0.01318359375, [684, 693]], [153, "array", 0.0157470703125, [693, 699]], [154, ".", 0.08642578125, [699, 700]], [155, "B", 0.005706787109375, [700, 701]], [156, "ug", 0.00946044921875, [701, 703]], [157, "gy", 0.00897216796875, [703, 705]], [158, "code", 0.01519775390625, [705, 710]], [159, ":", 0.0084228515625, [710, 712]], [160, "class", 0.01519775390625, [712, 718]], [161, "S", 0.00921630859375, [718, 720]], [162, "olution", 0.01544189453125, [720, 727]], [163, "{", 0.03662109375, [727, 729]], [165, "public", 0.011474609375, [730, 736]], [166, ":", 0.023193359375, [736, 737]], [169, "void", 0.01287841796875, [741, 746]], [170, "find", 0.014892578125, [746, 751]], [171, "(", 0.049072265625, [751, 752]], [172, "vector", 0.0145263671875, [752, 758]], [173, "<", 0.00933837890625, [758, 759]], [174, "int", 0.0135498046875, [759, 762]], [175, ">", 0.013916015625, [762, 763]], [176, "&", 0.0037841796875, [763, 764]], [177, "v", 0.00640869140625, [764, 765]], [178, ",", 0.0279541015625, [765, 766]], [179, "int", 0.013427734375, [766, 770]], [180, "i", 0.008544921875, [770, 772]], [181, ",", 0.0277099609375, [772, 773]], [182, "int", 0.0135498046875, [773, 777]], [183, "e", 0.0074462890625, [777, 779]], [184, ",", 0.02783203125, [779, 780]], [185, "int", 0.0133056640625, [780, 784]], [186, "sum", 0.011474609375, [784, 788]], [187, ",", 0.0277099609375, [788, 789]], [188, "vector", 0.01116943359375, [789, 796]], [189, "<", 0.009033203125, [796, 797]], [190, "int", 0.01348876953125, [797, 800]], [191, ">", 0.013671875, [800, 801]], [192, "&", 0.0037384033203125, [801, 802]], [193, "sum", 0.0126953125, [802, 805]], [194, "v", 0.00634765625, [805, 806]], [195, "){", 0.0203857421875, [806, 808]], [198, "if", 0.0208740234375, [816, 819]], [199, "(", 0.048095703125, [819, 820]], [200, "i", 0.01055908203125, [820, 821]], [201, "==", 0.0157470703125, [821, 823]], [202, "e", 0.00885009765625, [823, 824]], [203, "){", 0.02099609375, [824, 826]], [206, "sum", 0.01214599609375, [838, 842]], [207, "v", 0.006744384765625, [842, 843]], [208, ".", 0.08740234375, [843, 844]], [209, "push", 0.01409912109375, [844, 848]], [210, "_", 0.0245361328125, [848, 849]], [211, "back", 0.01239013671875, [849, 853]], [212, "(", 0.048095703125, [853, 854]], [213, "sum", 0.01336669921875, [854, 857]], [214, ");", 0.0245361328125, [857, 859]], [217, "return", 0.024169921875, [871, 878]], [218, ";", 0.019775390625, [878, 879]], [221, "}", 0.0289306640625, [887, 889]], [224, "find", 0.0162353515625, [897, 902]], [225, "(", 0.05078125, [902, 903]], [226, "v", 0.006988525390625, [903, 904]], [227, ",", 0.029296875, [904, 905]], [228, "i", 0.01116943359375, [905, 906]], [229, "+", 0.01263427734375, [906, 907]], [230, "1", 0.032470703125, [907, 908]], [231, ",", 0.0291748046875, [908, 909]], [232, "e", 0.0091552734375, [909, 910]], [233, ",", 0.029052734375, [910, 911]], [234, "sum", 0.0137939453125, [911, 914]], [235, "+", 0.012451171875, [914, 915]], [236, "v", 0.00701904296875, [915, 916]], [237, "[", 0.01458740234375, [916, 917]], [238, "i", 0.01104736328125, [917, 918]], [239, "],", 0.0120849609375, [918, 920]], [240, "sum", 0.013671875, [920, 923]], [241, "v", 0.006988525390625, [923, 924]], [242, ");", 0.025390625, [924, 926]], [245, "find", 0.01611328125, [934, 939]], [246, "(", 0.049560546875, [939, 940]], [247, "v", 0.007049560546875, [940, 941]], [248, ",", 0.0284423828125, [941, 942]], [249, "i", 0.01123046875, [942, 943]], [250, "+", 0.01190185546875, [943, 944]], [251, "1", 0.03369140625, [944, 945]], [252, ",", 0.028564453125, [945, 946]], [253, "e", 0.00921630859375, [946, 947]], [254, ",", 0.028564453125, [947, 948]], [255, "sum", 0.0130615234375, [948, 951]], [256, ",", 0.028564453125, [951, 952]], [257, "sum", 0.01263427734375, [952, 955]], [258, "v", 0.006622314453125, [955, 956]], [259, ");", 0.0245361328125, [956, 958]], [262, "}", 0.028564453125, [962, 964]], [269, "int", 0.01361083984375, [982, 986]], [270, "min", 0.01141357421875, [986, 990]], [271, "Abs", 0.01019287109375, [990, 993]], [272, "Diff", 0.008544921875, [993, 997]], [273, "erence", 0.01153564453125, [997, 1003]], [274, "(", 0.053955078125, [1003, 1004]], [275, "vector", 0.0159912109375, [1004, 1010]], [276, "<", 0.01068115234375, [1010, 1011]], [277, "int", 0.0155029296875, [1011, 1014]], [278, ">", 0.0155029296875, [1014, 1015]], [279, "&", 0.004547119140625, [1015, 1016]], [280, "num", 0.01483154296875, [1016, 1020]], [281, "s", 0.01434326171875, [1020, 1021]], [282, ",", 0.0308837890625, [1021, 1022]], [283, "int", 0.01458740234375, [1022, 1026]], [284, "goal", 0.0167236328125, [1026, 1031]], [285, ")", 0.07275390625, [1031, 1032]], [286, "{", 0.039794921875, [1032, 1034]], [289, "int", 0.013916015625, [1042, 1046]], [290, "n", 0.01275634765625, [1046, 1048]], [291, "=", 0.025634765625, [1048, 1049]], [292, "num", 0.01165771484375, [1049, 1052]], [293, "s", 0.01348876953125, [1052, 1053]], [294, ".", 0.0927734375, [1053, 1054]], [295, "size", 0.0164794921875, [1054, 1058]], [296, "();", 0.019287109375, [1058, 1061]], [301, "//", 0.013916015625, [1078, 1081]], [302, "Step", 0.0123291015625, [1081, 1085]], [304, "1", 0.03369140625, [1086, 1087]], [305, ":", 0.024658203125, [1087, 1088]], [306, "Div", 0.01043701171875, [1088, 1092]], [307, "ide", 0.01434326171875, [1092, 1095]], [308, "num", 0.01507568359375, [1095, 1099]], [309, "s", 0.013916015625, [1099, 1100]], [310, "into", 0.0179443359375, [1100, 1105]], [312, "2", 0.03955078125, [1106, 1107]], [313, "sub", 0.0111083984375, [1107, 1111]], [314, "arr", 0.0128173828125, [1111, 1114]], [315, "ays", 0.01220703125, [1114, 1117]], [316, "of", 0.023193359375, [1117, 1120]], [317, "size", 0.01519775390625, [1120, 1125]], [318, "n", 0.013427734375, [1125, 1127]], [319, "/", 0.0157470703125, [1127, 1128]], [320, "2", 0.03857421875, [1128, 1129]], [321, "and", 0.021728515625, [1129, 1133]], [322, "n", 0.01361083984375, [1133, 1135]], [323, "-", 0.032958984375, [1135, 1136]], [324, "n", 0.00885009765625, [1136, 1137]], [325, "/", 0.015380859375, [1137, 1138]], [326, "2", 0.0390625, [1138, 1139]], [331, "vector", 0.0133056640625, [1156, 1163]], [332, "<", 0.01092529296875, [1163, 1164]], [333, "int", 0.01531982421875, [1164, 1167]], [334, ">", 0.01544189453125, [1167, 1168]], [335, "A", 0.00970458984375, [1168, 1169]], [336, ",", 0.0296630859375, [1169, 1170]], [337, "B", 0.005828857421875, [1170, 1171]], [338, ";", 0.021484375, [1171, 1172]], [341, "for", 0.01708984375, [1180, 1184]], [342, "(", 0.053466796875, [1184, 1185]], [343, "int", 0.01434326171875, [1185, 1188]], [344, "i", 0.00897216796875, [1188, 1190]], [345, "=", 0.0267333984375, [1190, 1191]], [346, "0", 0.01129150390625, [1191, 1192]], [347, ";", 0.0220947265625, [1192, 1193]], [348, "i", 0.01104736328125, [1193, 1194]], [349, "<", 0.01055908203125, [1194, 1195]], [350, "n", 0.0084228515625, [1195, 1196]], [351, "/", 0.0164794921875, [1196, 1197]], [352, "2", 0.039794921875, [1197, 1198]], [353, ";", 0.0223388671875, [1198, 1199]], [354, "i", 0.01141357421875, [1199, 1200]], [355, "++", 0.0159912109375, [1200, 1202]], [356, ")", 0.07470703125, [1202, 1203]], [359, "A", 0.010986328125, [1215, 1217]], [360, ".", 0.09619140625, [1217, 1218]], [361, "push", 0.0157470703125, [1218, 1222]], [362, "_", 0.028564453125, [1222, 1223]], [363, "back", 0.0133056640625, [1223, 1227]], [364, "(", 0.05419921875, [1227, 1228]], [365, "num", 0.0123291015625, [1228, 1231]], [366, "s", 0.01385498046875, [1231, 1232]], [367, "[", 0.0157470703125, [1232, 1233]], [368, "i", 0.01141357421875, [1233, 1234]], [369, "]);", 0.022705078125, [1234, 1237]], [372, "for", 0.0189208984375, [1245, 1249]], [373, "(", 0.055419921875, [1249, 1250]], [374, "int", 0.01611328125, [1250, 1253]], [375, "i", 0.00970458984375, [1253, 1255]], [376, "=", 0.028564453125, [1255, 1256]], [377, "n", 0.0091552734375, [1256, 1257]], [378, "/", 0.01708984375, [1257, 1258]], [379, "2", 0.04150390625, [1258, 1259]], [380, ";", 0.0240478515625, [1259, 1260]], [381, "i", 0.01220703125, [1260, 1261]], [382, "<", 0.01190185546875, [1261, 1262]], [383, "n", 0.009521484375, [1262, 1263]], [384, ";", 0.024169921875, [1263, 1264]], [385, "i", 0.012451171875, [1264, 1265]], [386, "++", 0.0169677734375, [1265, 1267]], [387, ")", 0.07421875, [1267, 1268]], [390, "B", 0.0123291015625, [1280, 1282]], [391, ".", 0.1015625, [1282, 1283]], [392, "push", 0.016845703125, [1283, 1287]], [393, "_", 0.031982421875, [1287, 1288]], [394, "back", 0.01458740234375, [1288, 1292]], [395, "(", 0.057861328125, [1292, 1293]], [396, "num", 0.013671875, [1293, 1296]], [397, "s", 0.0155029296875, [1296, 1297]], [398, "[", 0.0177001953125, [1297, 1298]], [399, "i", 0.01361083984375, [1298, 1299]], [400, "]);", 0.024169921875, [1299, 1302]], [405, "//", 0.01507568359375, [1319, 1322]], [406, "Step", 0.0130615234375, [1322, 1326]], [408, "2", 0.04248046875, [1327, 1328]], [409, ":", 0.02685546875, [1328, 1329]], [410, "Find", 0.019287109375, [1329, 1334]], [411, "all", 0.0135498046875, [1334, 1338]], [412, "possible", 0.01495361328125, [1338, 1347]], [413, "subset", 0.01806640625, [1347, 1354]], [414, "sums", 0.0205078125, [1354, 1359]], [415, "of", 0.0244140625, [1359, 1362]], [416, "A", 0.011474609375, [1362, 1364]], [417, "and", 0.022705078125, [1364, 1368]], [418, "B", 0.01165771484375, [1368, 1370]], [423, "vector", 0.0155029296875, [1387, 1394]], [424, "<", 0.0123291015625, [1394, 1395]], [425, "int", 0.01708984375, [1395, 1398]], [426, ">", 0.0174560546875, [1398, 1399]], [427, "sum", 0.01611328125, [1399, 1402]], [428, "A", 0.01031494140625, [1402, 1403]], [429, ",", 0.033447265625, [1403, 1404]], [430, "sum", 0.0162353515625, [1404, 1407]], [431, "B", 0.006622314453125, [1407, 1408]], [432, ";", 0.02490234375, [1408, 1409]], [435, "find", 0.01904296875, [1417, 1422]], [436, "(", 0.058349609375, [1422, 1423]], [437, "A", 0.00982666015625, [1423, 1424]], [438, ",", 0.03271484375, [1424, 1425]], [439, "0", 0.012939453125, [1425, 1426]], [440, ",", 0.03271484375, [1426, 1427]], [441, "A", 0.0093994140625, [1427, 1428]], [442, ".", 0.103515625, [1428, 1429]], [443, "size", 0.0185546875, [1429, 1433]], [444, "(),", 0.015625, [1433, 1436]], [445, "0", 0.0133056640625, [1436, 1437]], [446, ",", 0.033203125, [1437, 1438]], [447, "sum", 0.0159912109375, [1438, 1441]], [448, "A", 0.010009765625, [1441, 1442]], [449, ");", 0.031494140625, [1442, 1444]], [452, "find", 0.0198974609375, [1452, 1457]], [453, "(", 0.058837890625, [1457, 1458]], [454, "B", 0.00732421875, [1458, 1459]], [455, ",", 0.033203125, [1459, 1460]], [456, "0", 0.0145263671875, [1460, 1461]], [457, ",", 0.032958984375, [1461, 1462]], [458, "B", 0.007293701171875, [1462, 1463]], [459, ".", 0.1025390625, [1463, 1464]], [460, "size", 0.0191650390625, [1464, 1468]], [461, "(),", 0.0157470703125, [1468, 1471]], [462, "0", 0.01361083984375, [1471, 1472]], [463, ",", 0.031982421875, [1472, 1473]], [464, "sum", 0.01531982421875, [1473, 1476]], [465, "B", 0.006378173828125, [1476, 1477]], [466, ");", 0.0283203125, [1477, 1479]], [471, "sort", 0.01556396484375, [1496, 1501]], [472, "(", 0.057861328125, [1501, 1502]], [473, "sum", 0.015625, [1502, 1505]], [474, "A", 0.00994873046875, [1505, 1506]], [475, ".", 0.107421875, [1506, 1507]], [476, "begin", 0.025146484375, [1507, 1512]], [477, "(),", 0.016357421875, [1512, 1515]], [478, "sum", 0.0162353515625, [1515, 1518]], [479, "A", 0.01080322265625, [1518, 1519]], [480, ".", 0.11279296875, [1519, 1520]], [481, "end", 0.0166015625, [1520, 1523]], [482, "());", 0.023193359375, [1523, 1527]], [487, "//", 0.0169677734375, [1545, 1548]], [488, "Step", 0.01422119140625, [1548, 1552]], [490, "3", 0.0279541015625, [1553, 1554]], [491, ":", 0.0303955078125, [1554, 1555]], [492, "Find", 0.0225830078125, [1555, 1560]], [493, "combinations", 0.0308837890625, [1560, 1573]], [494, "from", 0.0235595703125, [1573, 1578]], [495, "sum", 0.0174560546875, [1578, 1582]], [496, "A", 0.01129150390625, [1582, 1583]], [497, "&", 0.00537109375, [1583, 1585]], [498, "sum", 0.017333984375, [1585, 1589]], [499, "B", 0.007232666015625, [1589, 1590]], [500, "such", 0.0206298828125, [1590, 1595]], [501, "that", 0.0230712890625, [1595, 1600]], [502, "abs", 0.021484375, [1600, 1604]], [503, "(", 0.06298828125, [1604, 1605]], [504, "sum", 0.0177001953125, [1605, 1608]], [505, "-", 0.04052734375, [1608, 1609]], [506, "go", 0.017822265625, [1609, 1611]], [507, "al", 0.014404296875, [1611, 1613]], [508, ")", 0.08056640625, [1613, 1614]], [509, "is", 0.0174560546875, [1614, 1617]], [510, "minim", 0.0196533203125, [1617, 1623]], [511, "ized", 0.01708984375, [1623, 1627]], [516, "int", 0.01806640625, [1644, 1648]], [517, "an", 0.0186767578125, [1648, 1651]], [518, "s", 0.015625, [1651, 1652]], [519, "=", 0.03173828125, [1652, 1653]], [520, "INT", 0.013427734375, [1653, 1656]], [521, "_", 0.033447265625, [1656, 1657]], [522, "MAX", 0.0155029296875, [1657, 1660]], [523, ";", 0.0272216796875, [1660, 1661]], [528, "for", 0.02197265625, [1678, 1682]], [529, "(", 0.06640625, [1682, 1683]], [530, "int", 0.0196533203125, [1683, 1686]], [531, "i", 0.011962890625, [1686, 1688]], [532, "=", 0.034423828125, [1688, 1689]], [533, "0", 0.01483154296875, [1689, 1690]], [534, ";", 0.0291748046875, [1690, 1691]], [535, "i", 0.0146484375, [1691, 1692]], [536, "<", 0.01416015625, [1692, 1693]], [537, "sum", 0.019287109375, [1693, 1696]], [538, "A", 0.0118408203125, [1696, 1697]], [539, ".", 0.1162109375, [1697, 1698]], [540, "size", 0.02197265625, [1698, 1702]], [541, "();", 0.0281982421875, [1702, 1705]], [542, "i", 0.01470947265625, [1705, 1706]], [543, "++", 0.02001953125, [1706, 1708]], [544, "){", 0.033447265625, [1708, 1710]], [547, "int", 0.019775390625, [1722, 1726]], [548, "s", 0.0146484375, [1726, 1728]], [549, "=", 0.033203125, [1728, 1729]], [550, "sum", 0.0184326171875, [1729, 1732]], [551, "A", 0.012939453125, [1732, 1733]], [552, "[", 0.0196533203125, [1733, 1734]], [553, "i", 0.01434326171875, [1734, 1735]], [554, "];", 0.0257568359375, [1735, 1737]], [557, "int", 0.0185546875, [1749, 1753]], [558, "l", 0.0125732421875, [1753, 1755]], [559, "=", 0.033203125, [1755, 1756]], [560, "0", 0.01385498046875, [1756, 1757]], [561, ";", 0.02783203125, [1757, 1758]], [564, "int", 0.01953125, [1770, 1774]], [565, "r", 0.01446533203125, [1774, 1776]], [566, "=", 0.034423828125, [1776, 1777]], [567, "sum", 0.01904296875, [1777, 1780]], [568, "B", 0.00750732421875, [1780, 1781]], [569, ".", 0.12109375, [1781, 1782]], [570, "size", 0.022705078125, [1782, 1786]], [571, "()-", 0.0233154296875, [1786, 1789]], [572, "1", 0.04150390625, [1789, 1790]], [573, ";", 0.03125, [1790, 1791]], [576, "while", 0.034912109375, [1803, 1809]], [577, "(", 0.072265625, [1809, 1810]], [578, "l", 0.01104736328125, [1810, 1811]], [579, "<", 0.0162353515625, [1811, 1812]], [580, "=", 0.036376953125, [1812, 1813]], [581, "r", 0.014404296875, [1813, 1814]], [582, "){", 0.038330078125, [1814, 1816]], [585, "int", 0.0213623046875, [1832, 1836]], [586, "mid", 0.0218505859375, [1836, 1840]], [587, "=", 0.03515625, [1840, 1841]], [588, "l", 0.0086669921875, [1841, 1842]], [589, "+", 0.016845703125, [1842, 1843]], [590, "(", 0.072265625, [1843, 1844]], [591, "r", 0.01165771484375, [1844, 1845]], [592, "-", 0.0478515625, [1845, 1846]], [593, "l", 0.00830078125, [1846, 1847]], [594, ")/", 0.0250244140625, [1847, 1849]], [595, "2", 0.047607421875, [1849, 1850]], [596, ";", 0.03173828125, [1850, 1851]], [599, "int", 0.0228271484375, [1867, 1871]], [600, "sum", 0.0218505859375, [1871, 1875]], [601, "=", 0.039794921875, [1875, 1876]], [602, "s", 0.019287109375, [1876, 1877]], [603, "+", 0.0185546875, [1877, 1878]], [604, "sum", 0.023193359375, [1878, 1881]], [605, "B", 0.01031494140625, [1881, 1882]], [606, "[", 0.0247802734375, [1882, 1883]], [607, "mid", 0.018798828125, [1883, 1886]], [608, "];", 0.034912109375, [1886, 1888]], [611, "if", 0.0306396484375, [1904, 1907]], [612, "(", 0.07763671875, [1907, 1908]], [613, "sum", 0.0224609375, [1908, 1911]], [614, "==", 0.0341796875, [1911, 1913]], [615, "go", 0.020263671875, [1913, 1915]], [616, "al", 0.0146484375, [1915, 1917]], [617, ")", 0.09765625, [1917, 1918]], [620, "return", 0.034912109375, [1938, 1945]], [622, "0", 0.015380859375, [1946, 1947]], [623, ";", 0.036376953125, [1947, 1948]], [626, "an", 0.0262451171875, [1964, 1967]], [627, "s", 0.0194091796875, [1967, 1968]], [628, "=", 0.044677734375, [1968, 1969]], [629, "min", 0.021240234375, [1969, 1972]], [630, "(", 0.08154296875, [1972, 1973]], [631, "ans", 0.026123046875, [1973, 1976]], [632, ",", 0.046630859375, [1976, 1977]], [633, "abs", 0.0263671875, [1977, 1980]], [634, "(", 0.08251953125, [1980, 1981]], [635, "sum", 0.024658203125, [1981, 1984]], [636, "-", 0.052001953125, [1984, 1985]], [637, "go", 0.0230712890625, [1985, 1987]], [638, "al", 0.01708984375, [1987, 1989]], [639, "));", 0.043701171875, [1989, 1992]], [642, "if", 0.0308837890625, [2008, 2011]], [643, "(", 0.0830078125, [2011, 2012]], [644, "sum", 0.024169921875, [2012, 2015]], [645, ">", 0.0255126953125, [2015, 2016]], [646, "go", 0.022705078125, [2016, 2018]], [647, "al", 0.0162353515625, [2018, 2020]], [648, "){", 0.04541015625, [2020, 2022]], [651, "r", 0.0223388671875, [2042, 2044]], [652, "=", 0.048828125, [2044, 2045]], [653, "mid", 0.020263671875, [2045, 2048]], [654, "-", 0.05859375, [2048, 2049]], [655, "1", 0.05126953125, [2049, 2050]], [656, ";", 0.043701171875, [2050, 2051]], [659, "}", 0.05029296875, [2067, 2069]], [662, "else", 0.03515625, [2085, 2090]], [663, "{", 0.04345703125, [2090, 2091]], [666, "l", 0.020263671875, [2111, 2113]], [667, "=", 0.04833984375, [2113, 2114]], [668, "mid", 0.0213623046875, [2114, 2117]], [669, "+", 0.020751953125, [2117, 2118]], [670, "1", 0.049072265625, [2118, 2119]], [671, ";", 0.041748046875, [2119, 2120]], [674, "}", 0.05029296875, [2136, 2138]], [678, "}", 0.052490234375, [2154, 2156]], [681, "}", 0.054443359375, [2164, 2166]], [686, "return", 0.048095703125, [2183, 2190]], [687, "an", 0.034912109375, [2190, 2193]], [688, "s", 0.0247802734375, [2193, 2194]], [689, ";", 0.050537109375, [2194, 2195]], [692, "}", 0.055419921875, [2199, 2201]], [694, "};", 0.050048828125, [2202, 2204]]], "reading_last": [[1, "You", 0.046142578125, [0, 3]], [2, "are", 0.01434326171875, [3, 7]], [3, "an", 0.01104736328125, [7, 10]], [4, "exception", 0.011962890625, [10, 20]], [5, "ally", 0.004058837890625, [20, 24]], [6, "intelligent", 0.005584716796875, [24, 36]], [7, "coding", 0.01495361328125, [36, 43]], [8, "assistant", 0.01007080078125, [43, 53]], [9, "that", 0.00421142578125, [53, 58]], [10, "consistently", 0.006256103515625, [58, 71]], [11, "delivers", 0.006072998046875, [71, 80]], [12, "accurate", 0.004180908203125, [80, 89]], [13, "and", 0.0034027099609375, [89, 93]], [14, "reliable", 0.004638671875, [93, 102]], [15, "responses", 0.00347900390625, [102, 112]], [16, "to", 0.002166748046875, [112, 115]], [17, "user", 0.00131988525390625, [115, 120]], [18, "instructions", 0.0027313232421875, [120, 133]], [19, ".", 0.009765625, [133, 134]], [23, "@", 0.039306640625, [139, 141]], [24, "@", 0.0301513671875, [141, 142]], [25, "Inst", 0.051025390625, [142, 147]], [26, "ruction", 0.04248046875, [147, 154]], [29, "You", 0.0267333984375, [158, 162]], [30, "are", 0.02587890625, [162, 166]], [31, "a", 0.046630859375, [166, 168]], [32, "program", 0.03759765625, [168, 176]], [33, "rep", 0.0517578125, [176, 180]], [34, "aire", 0.09619140625, [180, 184]], [35, "r", 0.031494140625, [184, 185]], [36, ".", 0.015869140625, [185, 186]], [37, "Please", 0.01611328125, [186, 193]], [38, "repair", 0.0341796875, [193, 200]], [39, "the", 0.01397705078125, [200, 204]], [40, "following", 0.0167236328125, [204, 214]], [41, "bug", 0.12158203125, [214, 218]], [42, "gy", 0.056396484375, [218, 220]], [43, "program", 0.083984375, [220, 228]], [44, ".", 0.01177978515625, [228, 229]], [45, "You", 0.0067138671875, [229, 233]], [46, "are", 0.0027923583984375, [233, 237]], [47, "given", 0.006134033203125, [237, 243]], [48, "an", 0.005340576171875, [243, 246]], [49, "integer", 0.017822265625, [246, 254]], [50, "array", 0.0228271484375, [254, 260]], [51, "num", 0.06884765625, [260, 264]], [52, "s", 0.0289306640625, [264, 265]], [53, "and", 0.002288818359375, [265, 269]], [54, "an", 0.00170135498046875, [269, 272]], [55, "integer", 0.00335693359375, [272, 280]], [56, "goal", 0.0380859375, [280, 285]], [57, ".", 0.006683349609375, [285, 286]], [59, "You", 0.00579833984375, [287, 290]], [60, "want", 0.004638671875, [290, 295]], [61, "to", 0.006622314453125, [295, 298]], [62, "choose", 0.00762939453125, [298, 305]], [63, "a", 0.00372314453125, [305, 307]], [64, "subsequ", 0.07080078125, [307, 315]], [65, "ence", 0.0302734375, [315, 319]], [66, "of", 0.0029144287109375, [319, 322]], [67, "num", 0.0089111328125, [322, 326]], [68, "s", 0.00531005859375, [326, 327]], [69, "such", 0.0030517578125, [327, 332]], [70, "that", 0.0031585693359375, [332, 337]], [71, "the", 0.0037841796875, [337, 341]], [72, "sum", 0.0091552734375, [341, 345]], [73, "of", 0.0032958984375, [345, 348]], [74, "its", 0.0036163330078125, [348, 352]], [75, "elements", 0.00537109375, [352, 361]], [76, "is", 0.004669189453125, [361, 364]], [77, "the", 0.0021209716796875, [364, 368]], [78, "closest", 0.00970458984375, [368, 376]], [79, "possible", 0.0037078857421875, [376, 385]], [80, "to", 0.0031585693359375, [385, 388]], [81, "goal", 0.00860595703125, [388, 393]], [82, ".", 0.0059814453125, [393, 394]], [83, "That", 0.00323486328125, [394, 399]], [84, "is", 0.005645751953125, [399, 402]], [85, ",", 0.004364013671875, [402, 403]], [86, "if", 0.003021240234375, [403, 406]], [87, "the", 0.0013427734375, [406, 410]], [88, "sum", 0.0033416748046875, [410, 414]], [89, "of", 0.001617431640625, [414, 417]], [90, "the", 0.00116729736328125, [417, 421]], [91, "subsequ", 0.015380859375, [421, 429]], [92, "ence", 0.005401611328125, [429, 433]], [93, "'", 0.0031890869140625, [433, 434]], [94, "s", 0.001312255859375, [434, 435]], [95, "elements", 0.00096893310546875, [435, 444]], [96, "is", 0.00177001953125, [444, 447]], [97, "sum", 0.002471923828125, [447, 451]], [98, ",", 0.00176239013671875, [451, 452]], [99, "then", 0.0024871826171875, [452, 457]], [100, "you", 0.003997802734375, [457, 461]], [101, "want", 0.0040283203125, [461, 466]], [102, "to", 0.0026702880859375, [466, 469]], [103, "minimize", 0.007080078125, [469, 478]], [104, "the", 0.0016632080078125, [478, 482]], [105, "absolute", 0.00408935546875, [482, 491]], [106, "difference", 0.007110595703125, [491, 502]], [107, "abs", 0.005157470703125, [502, 506]], [108, "(", 0.0031585693359375, [506, 507]], [109, "sum", 0.00182342529296875, [507, 510]], [110, "-", 0.00124359130859375, [510, 512]], [111, "goal", 0.010009765625, [512, 517]], [112, ").", 0.004058837890625, [517, 519]], [114, "Return", 0.007415771484375, [520, 526]], [115, "the", 0.00421142578125, [526, 530]], [116, "minimum", 0.00439453125, [530, 538]], [117, "possible", 0.00799560546875, [538, 547]], [118, "value", 0.00738525390625, [547, 553]], [119, "of", 0.002838134765625, [553, 556]], [120, "abs", 0.0076904296875, [556, 560]], [121, "(", 0.005340576171875, [560, 561]], [122, "sum", 0.0081787109375, [561, 564]], [123, "-", 0.0019989013671875, [564, 566]], [124, "goal", 0.015869140625, [566, 571]], [125, ").", 0.005218505859375, [571, 573]], [127, "Note", 0.0036773681640625, [574, 578]], [128, "that", 0.005584716796875, [578, 583]], [129, "a", 0.005157470703125, [583, 585]], [130, "subsequ", 0.045166015625, [585, 593]], [131, "ence", 0.01080322265625, [593, 597]], [132, "of", 0.003326416015625, [597, 600]], [133, "an", 0.00125885009765625, [600, 603]], [134, "array", 0.0037841796875, [603, 609]], [135, "is", 0.002227783203125, [609, 612]], [136, "an", 0.00144195556640625, [612, 615]], [137, "array", 0.0023651123046875, [615, 621]], [138, "formed", 0.0036773681640625, [621, 628]], [139, "by", 0.00164794921875, [628, 631]], [140, "removing", 0.001708984375, [631, 640]], [141, "some", 0.00102996826171875, [640, 645]], [142, "elements", 0.0030975341796875, [645, 654]], [143, "(", 0.00099945068359375, [654, 656]], [144, "poss", 0.0031890869140625, [656, 660]], [145, "ibly", 0.00115203857421875, [660, 664]], [146, "all", 0.0032501220703125, [664, 668]], [147, "or", 0.00121307373046875, [668, 671]], [148, "none", 0.0020294189453125, [671, 676]], [149, ")", 0.000904083251953125, [676, 677]], [150, "of", 0.002166748046875, [677, 680]], [151, "the", 0.0029144287109375, [680, 684]], [152, "original", 0.0034027099609375, [684, 693]], [153, "array", 0.004913330078125, [693, 699]], [154, ".", 0.0057373046875, [699, 700]], [155, "B", 0.06982421875, [700, 701]], [156, "ug", 0.22265625, [701, 703]], [157, "gy", 0.1083984375, [703, 705]], [158, "code", 0.040771484375, [705, 710]], [159, ":", 0.0269775390625, [710, 712]], [160, "class", 0.049560546875, [712, 718]], [161, "S", 0.1630859375, [718, 720]], [162, "olution", 0.046875, [720, 727]], [163, "{", 0.00836181640625, [727, 729]], [165, "public", 0.00762939453125, [730, 736]], [166, ":", 0.0034332275390625, [736, 737]], [169, "void", 0.01513671875, [741, 746]], [170, "find", 0.0247802734375, [746, 751]], [171, "(", 0.01495361328125, [751, 752]], [172, "vector", 0.018310546875, [752, 758]], [173, "<", 0.007354736328125, [758, 759]], [174, "int", 0.007049560546875, [759, 762]], [175, ">", 0.006134033203125, [762, 763]], [176, "&", 0.00885009765625, [763, 764]], [177, "v", 0.0130615234375, [764, 765]], [178, ",", 0.0064697265625, [765, 766]], [179, "int", 0.005767822265625, [766, 770]], [180, "i", 0.008544921875, [770, 772]], [181, ",", 0.005828857421875, [772, 773]], [182, "int", 0.0054931640625, [773, 777]], [183, "e", 0.0125732421875, [777, 779]], [184, ",", 0.0068359375, [779, 780]], [185, "int", 0.004119873046875, [780, 784]], [186, "sum", 0.0145263671875, [784, 788]], [187, ",", 0.007720947265625, [788, 789]], [188, "vector", 0.00830078125, [789, 796]], [189, "<", 0.004547119140625, [796, 797]], [190, "int", 0.007476806640625, [797, 800]], [191, ">", 0.002227783203125, [800, 801]], [192, "&", 0.003143310546875, [801, 802]], [193, "sum", 0.02294921875, [802, 805]], [194, "v", 0.0164794921875, [805, 806]], [195, "){", 0.00469970703125, [806, 808]], [198, "if", 0.004486083984375, [816, 819]], [199, "(", 0.002288818359375, [819, 820]], [200, "i", 0.0025634765625, [820, 821]], [201, "==", 0.006317138671875, [821, 823]], [202, "e", 0.004486083984375, [823, 824]], [203, "){", 0.0031585693359375, [824, 826]], [206, "sum", 0.0048828125, [838, 842]], [207, "v", 0.00634765625, [842, 843]], [208, ".", 0.0106201171875, [843, 844]], [209, "push", 0.015869140625, [844, 848]], [210, "_", 0.01312255859375, [848, 849]], [211, "back", 0.00213623046875, [849, 853]], [212, "(", 0.0021820068359375, [853, 854]], [213, "sum", 0.0032501220703125, [854, 857]], [214, ");", 0.0025634765625, [857, 859]], [217, "return", 0.003875732421875, [871, 878]], [218, ";", 0.002044677734375, [878, 879]], [221, "}", 0.0020294189453125, [887, 889]], [224, "find", 0.01361083984375, [897, 902]], [225, "(", 0.004638671875, [902, 903]], [226, "v", 0.0029144287109375, [903, 904]], [227, ",", 0.0027618408203125, [904, 905]], [228, "i", 0.00140380859375, [905, 906]], [229, "+", 0.0014190673828125, [906, 907]], [230, "1", 0.00179290771484375, [907, 908]], [231, ",", 0.00244140625, [908, 909]], [232, "e", 0.00160980224609375, [909, 910]], [233, ",", 0.0022125244140625, [910, 911]], [234, "sum", 0.002044677734375, [911, 914]], [235, "+", 0.003692626953125, [914, 915]], [236, "v", 0.0020294189453125, [915, 916]], [237, "[", 0.00160980224609375, [916, 917]], [238, "i", 0.00160980224609375, [917, 918]], [239, "],", 0.004150390625, [918, 920]], [240, "sum", 0.00347900390625, [920, 923]], [241, "v", 0.003509521484375, [923, 924]], [242, ");", 0.004547119140625, [924, 926]], [245, "find", 0.00848388671875, [934, 939]], [246, "(", 0.004058837890625, [939, 940]], [247, "v", 0.0045166015625, [940, 941]], [248, ",", 0.001312255859375, [941, 942]], [249, "i", 0.0006103515625, [942, 943]], [250, "+", 0.000591278076171875, [943, 944]], [251, "1", 0.00104522705078125, [944, 945]], [252, ",", 0.00131988525390625, [945, 946]], [253, "e", 0.000888824462890625, [946, 947]], [254, ",", 0.0012664794921875, [947, 948]], [255, "sum", 0.0017547607421875, [948, 951]], [256, ",", 0.0020599365234375, [951, 952]], [257, "sum", 0.00396728515625, [952, 955]], [258, "v", 0.0017852783203125, [955, 956]], [259, ");", 0.00469970703125, [956, 958]], [262, "}", 0.007049560546875, [962, 964]], [269, "int", 0.01153564453125, [982, 986]], [270, "min", 0.0142822265625, [986, 990]], [271, "Abs", 0.01361083984375, [990, 993]], [272, "Diff", 0.1474609375, [993, 997]], [273, "erence", 0.01092529296875, [997, 1003]], [274, "(", 0.006195068359375, [1003, 1004]], [275, "vector", 0.00848388671875, [1004, 1010]], [276, "<", 0.0062255859375, [1010, 1011]], [277, "int", 0.00994873046875, [1011, 1014]], [278, ">", 0.00384521484375, [1014, 1015]], [279, "&", 0.00408935546875, [1015, 1016]], [280, "num", 0.029541015625, [1016, 1020]], [281, "s", 0.017333984375, [1020, 1021]], [282, ",", 0.002349853515625, [1021, 1022]], [283, "int", 0.0038299560546875, [1022, 1026]], [284, "goal", 0.01409912109375, [1026, 1031]], [285, ")", 0.005706787109375, [1031, 1032]], [286, "{", 0.0087890625, [1032, 1034]], [289, "int", 0.0038299560546875, [1042, 1046]], [290, "n", 0.005767822265625, [1046, 1048]], [291, "=", 0.005615234375, [1048, 1049]], [292, "num", 0.09130859375, [1049, 1052]], [293, "s", 0.004180908203125, [1052, 1053]], [294, ".", 0.004730224609375, [1053, 1054]], [295, "size", 0.0025634765625, [1054, 1058]], [296, "();", 0.00159454345703125, [1058, 1061]], [301, "//", 0.00970458984375, [1078, 1081]], [302, "Step", 0.0205078125, [1081, 1085]], [304, "1", 0.0054931640625, [1086, 1087]], [305, ":", 0.007080078125, [1087, 1088]], [306, "Div", 0.04150390625, [1088, 1092]], [307, "ide", 0.007232666015625, [1092, 1095]], [308, "num", 0.021484375, [1095, 1099]], [309, "s", 0.00811767578125, [1099, 1100]], [310, "into", 0.002838134765625, [1100, 1105]], [312, "2", 0.004302978515625, [1106, 1107]], [313, "sub", 0.00799560546875, [1107, 1111]], [314, "arr", 0.01373291015625, [1111, 1114]], [315, "ays", 0.00653076171875, [1114, 1117]], [316, "of", 0.002716064453125, [1117, 1120]], [317, "size", 0.0040283203125, [1120, 1125]], [318, "n", 0.0027923583984375, [1125, 1127]], [319, "/", 0.0029449462890625, [1127, 1128]], [320, "2", 0.0028533935546875, [1128, 1129]], [321, "and", 0.0025177001953125, [1129, 1133]], [322, "n", 0.0018310546875, [1133, 1135]], [323, "-", 0.0021514892578125, [1135, 1136]], [324, "n", 0.000728607177734375, [1136, 1137]], [325, "/", 0.00110626220703125, [1137, 1138]], [326, "2", 0.0035400390625, [1138, 1139]], [331, "vector", 0.00897216796875, [1156, 1163]], [332, "<", 0.004364013671875, [1163, 1164]], [333, "int", 0.00482177734375, [1164, 1167]], [334, ">", 0.012451171875, [1167, 1168]], [335, "A", 0.0230712890625, [1168, 1169]], [336, ",", 0.00543212890625, [1169, 1170]], [337, "B", 0.005859375, [1170, 1171]], [338, ";", 0.00238037109375, [1171, 1172]], [341, "for", 0.00177764892578125, [1180, 1184]], [342, "(", 0.0028076171875, [1184, 1185]], [343, "int", 0.0020294189453125, [1185, 1188]], [344, "i", 0.0009307861328125, [1188, 1190]], [345, "=", 0.000873565673828125, [1190, 1191]], [346, "0", 0.0031585693359375, [1191, 1192]], [347, ";", 0.00142669677734375, [1192, 1193]], [348, "i", 0.000751495361328125, [1193, 1194]], [349, "<", 0.00091552734375, [1194, 1195]], [350, "n", 0.000827789306640625, [1195, 1196]], [351, "/", 0.0018157958984375, [1196, 1197]], [352, "2", 0.00139617919921875, [1197, 1198]], [353, ";", 0.000690460205078125, [1198, 1199]], [354, "i", 0.000530242919921875, [1199, 1200]], [355, "++", 0.00136566162109375, [1200, 1202]], [356, ")", 0.000690460205078125, [1202, 1203]], [359, "A", 0.005035400390625, [1215, 1217]], [360, ".", 0.005279541015625, [1217, 1218]], [361, "push", 0.005767822265625, [1218, 1222]], [362, "_", 0.005401611328125, [1222, 1223]], [363, "back", 0.000782012939453125, [1223, 1227]], [364, "(", 0.001129150390625, [1227, 1228]], [365, "num", 0.004608154296875, [1228, 1231]], [366, "s", 0.0026092529296875, [1231, 1232]], [367, "[", 0.000904083251953125, [1232, 1233]], [368, "i", 0.000732421875, [1233, 1234]], [369, "]);", 0.0011749267578125, [1234, 1237]], [372, "for", 0.000530242919921875, [1245, 1249]], [373, "(", 0.000247955322265625, [1249, 1250]], [374, "int", 0.00055694580078125, [1250, 1253]], [375, "i", 0.000377655029296875, [1253, 1255]], [376, "=", 0.000518798828125, [1255, 1256]], [377, "n", 0.0003070831298828125, [1256, 1257]], [378, "/", 0.000339508056640625, [1257, 1258]], [379, "2", 0.0003833770751953125, [1258, 1259]], [380, ";", 0.000453948974609375, [1259, 1260]], [381, "i", 0.0002918243408203125, [1260, 1261]], [382, "<", 0.00049591064453125, [1261, 1262]], [383, "n", 0.0003032684326171875, [1262, 1263]], [384, ";", 0.0002536773681640625, [1263, 1264]], [385, "i", 0.000217437744140625, [1264, 1265]], [386, "++", 0.000423431396484375, [1265, 1267]], [387, ")", 0.00038909912109375, [1267, 1268]], [390, "B", 0.0037994384765625, [1280, 1282]], [391, ".", 0.00098419189453125, [1282, 1283]], [392, "push", 0.00128936767578125, [1283, 1287]], [393, "_", 0.08447265625, [1287, 1288]], [394, "back", 0.000507354736328125, [1288, 1292]], [395, "(", 0.01031494140625, [1292, 1293]], [396, "num", 0.004669189453125, [1293, 1296]], [397, "s", 0.0004730224609375, [1296, 1297]], [398, "[", 0.00032806396484375, [1297, 1298]], [399, "i", 0.00099945068359375, [1298, 1299]], [400, "]);", 0.0021514892578125, [1299, 1302]], [405, "//", 0.007080078125, [1319, 1322]], [406, "Step", 0.00457763671875, [1322, 1326]], [408, "2", 0.0030975341796875, [1327, 1328]], [409, ":", 0.0037994384765625, [1328, 1329]], [410, "Find", 0.00469970703125, [1329, 1334]], [411, "all", 0.005950927734375, [1334, 1338]], [412, "possible", 0.00628662109375, [1338, 1347]], [413, "subset", 0.0186767578125, [1347, 1354]], [414, "sums", 0.012939453125, [1354, 1359]], [415, "of", 0.00154876708984375, [1359, 1362]], [416, "A", 0.00180816650390625, [1362, 1364]], [417, "and", 0.001617431640625, [1364, 1368]], [418, "B", 0.00164794921875, [1368, 1370]], [423, "vector", 0.0029449462890625, [1387, 1394]], [424, "<", 0.00171661376953125, [1394, 1395]], [425, "int", 0.00159454345703125, [1395, 1398]], [426, ">", 0.006072998046875, [1398, 1399]], [427, "sum", 0.0140380859375, [1399, 1402]], [428, "A", 0.006866455078125, [1402, 1403]], [429, ",", 0.0037994384765625, [1403, 1404]], [430, "sum", 0.0059814453125, [1404, 1407]], [431, "B", 0.0032501220703125, [1407, 1408]], [432, ";", 0.0019989013671875, [1408, 1409]], [435, "find", 0.00689697265625, [1417, 1422]], [436, "(", 0.003997802734375, [1422, 1423]], [437, "A", 0.00144195556640625, [1423, 1424]], [438, ",", 0.00145721435546875, [1424, 1425]], [439, "0", 0.000827789306640625, [1425, 1426]], [440, ",", 0.0015106201171875, [1426, 1427]], [441, "A", 0.00185394287109375, [1427, 1428]], [442, ".", 0.0037078857421875, [1428, 1429]], [443, "size", 0.00109100341796875, [1429, 1433]], [444, "(),", 0.00095367431640625, [1433, 1436]], [445, "0", 0.0005340576171875, [1436, 1437]], [446, ",", 0.00107574462890625, [1437, 1438]], [447, "sum", 0.002227783203125, [1438, 1441]], [448, "A", 0.0013427734375, [1441, 1442]], [449, ");", 0.001312255859375, [1442, 1444]], [452, "find", 0.0023193359375, [1452, 1457]], [453, "(", 0.0013427734375, [1457, 1458]], [454, "B", 0.00078582763671875, [1458, 1459]], [455, ",", 0.000621795654296875, [1459, 1460]], [456, "0", 0.0005035400390625, [1460, 1461]], [457, ",", 0.00096893310546875, [1461, 1462]], [458, "B", 0.000896453857421875, [1462, 1463]], [459, ".", 0.001739501953125, [1463, 1464]], [460, "size", 0.00063323974609375, [1464, 1468]], [461, "(),", 0.0005645751953125, [1468, 1471]], [462, "0", 0.00067901611328125, [1471, 1472]], [463, ",", 0.000701904296875, [1472, 1473]], [464, "sum", 0.0029449462890625, [1473, 1476]], [465, "B", 0.00080108642578125, [1476, 1477]], [466, ");", 0.0015716552734375, [1477, 1479]], [471, "sort", 0.00567626953125, [1496, 1501]], [472, "(", 0.003173828125, [1501, 1502]], [473, "sum", 0.003570556640625, [1502, 1505]], [474, "A", 0.002716064453125, [1505, 1506]], [475, ".", 0.004364013671875, [1506, 1507]], [476, "begin", 0.00213623046875, [1507, 1512]], [477, "(),", 0.0034942626953125, [1512, 1515]], [478, "sum", 0.00115203857421875, [1515, 1518]], [479, "A", 0.00170135498046875, [1518, 1519]], [480, ".", 0.00164794921875, [1519, 1520]], [481, "end", 0.0018310546875, [1520, 1523]], [482, "());", 0.0017242431640625, [1523, 1527]], [487, "//", 0.004058837890625, [1545, 1548]], [488, "Step", 0.00194549560546875, [1548, 1552]], [490, "3", 0.00193023681640625, [1553, 1554]], [491, ":", 0.002532958984375, [1554, 1555]], [492, "Find", 0.003509521484375, [1555, 1560]], [493, "combinations", 0.0177001953125, [1560, 1573]], [494, "from", 0.0037078857421875, [1573, 1578]], [495, "sum", 0.0045166015625, [1578, 1582]], [496, "A", 0.0021514892578125, [1582, 1583]], [497, "&", 0.00714111328125, [1583, 1585]], [498, "sum", 0.00162506103515625, [1585, 1589]], [499, "B", 0.003173828125, [1589, 1590]], [500, "such", 0.00311279296875, [1590, 1595]], [501, "that", 0.004669189453125, [1595, 1600]], [502, "abs", 0.006927490234375, [1600, 1604]], [503, "(", 0.0078125, [1604, 1605]], [504, "sum", 0.0034942626953125, [1605, 1608]], [505, "-", 0.007537841796875, [1608, 1609]], [506, "go", 0.01513671875, [1609, 1611]], [507, "al", 0.004547119140625, [1611, 1613]], [508, ")", 0.006317138671875, [1613, 1614]], [509, "is", 0.00738525390625, [1614, 1617]], [510, "minim", 0.020263671875, [1617, 1623]], [511, "ized", 0.006988525390625, [1623, 1627]], [516, "int", 0.00677490234375, [1644, 1648]], [517, "an", 0.0189208984375, [1648, 1651]], [518, "s", 0.008056640625, [1651, 1652]], [519, "=", 0.00537109375, [1652, 1653]], [520, "INT", 0.0137939453125, [1653, 1656]], [521, "_", 0.003173828125, [1656, 1657]], [522, "MAX", 0.0027923583984375, [1657, 1660]], [523, ";", 0.0029144287109375, [1660, 1661]], [528, "for", 0.002349853515625, [1678, 1682]], [529, "(", 0.0032958984375, [1682, 1683]], [530, "int", 0.00433349609375, [1683, 1686]], [531, "i", 0.0020751953125, [1686, 1688]], [532, "=", 0.00136566162109375, [1688, 1689]], [533, "0", 0.0018157958984375, [1689, 1690]], [534, ";", 0.0018463134765625, [1690, 1691]], [535, "i", 0.00107574462890625, [1691, 1692]], [536, "<", 0.001739501953125, [1692, 1693]], [537, "sum", 0.004241943359375, [1693, 1696]], [538, "A", 0.0040283203125, [1696, 1697]], [539, ".", 0.004119873046875, [1697, 1698]], [540, "size", 0.00213623046875, [1698, 1702]], [541, "();", 0.000850677490234375, [1702, 1705]], [542, "i", 0.00225830078125, [1705, 1706]], [543, "++", 0.0045166015625, [1706, 1708]], [544, "){", 0.0018157958984375, [1708, 1710]], [547, "int", 0.00433349609375, [1722, 1726]], [548, "s", 0.007720947265625, [1726, 1728]], [549, "=", 0.003509521484375, [1728, 1729]], [550, "sum", 0.0036468505859375, [1729, 1732]], [551, "A", 0.0021514892578125, [1732, 1733]], [552, "[", 0.0020294189453125, [1733, 1734]], [553, "i", 0.0023345947265625, [1734, 1735]], [554, "];", 0.00238037109375, [1735, 1737]], [557, "int", 0.00335693359375, [1749, 1753]], [558, "l", 0.0096435546875, [1753, 1755]], [559, "=", 0.0029144287109375, [1755, 1756]], [560, "0", 0.0018310546875, [1756, 1757]], [561, ";", 0.00144195556640625, [1757, 1758]], [564, "int", 0.002838134765625, [1770, 1774]], [565, "r", 0.00189208984375, [1774, 1776]], [566, "=", 0.0017852783203125, [1776, 1777]], [567, "sum", 0.002960205078125, [1777, 1780]], [568, "B", 0.0023651123046875, [1780, 1781]], [569, ".", 0.0028839111328125, [1781, 1782]], [570, "size", 0.00213623046875, [1782, 1786]], [571, "()-", 0.0011444091796875, [1786, 1789]], [572, "1", 0.001068115234375, [1789, 1790]], [573, ";", 0.0014495849609375, [1790, 1791]], [576, "while", 0.003570556640625, [1803, 1809]], [577, "(", 0.004486083984375, [1809, 1810]], [578, "l", 0.00274658203125, [1810, 1811]], [579, "<", 0.005584716796875, [1811, 1812]], [580, "=", 0.0026702880859375, [1812, 1813]], [581, "r", 0.005523681640625, [1813, 1814]], [582, "){", 0.0030364990234375, [1814, 1816]], [585, "int", 0.0087890625, [1832, 1836]], [586, "mid", 0.00457763671875, [1836, 1840]], [587, "=", 0.0028533935546875, [1840, 1841]], [588, "l", 0.00177001953125, [1841, 1842]], [589, "+", 0.000888824462890625, [1842, 1843]], [590, "(", 0.000926971435546875, [1843, 1844]], [591, "r", 0.00171661376953125, [1844, 1845]], [592, "-", 0.001129150390625, [1845, 1846]], [593, "l", 0.00113677978515625, [1846, 1847]], [594, ")/", 0.00124359130859375, [1847, 1849]], [595, "2", 0.005462646484375, [1849, 1850]], [596, ";", 0.001617431640625, [1850, 1851]], [599, "int", 0.0036468505859375, [1867, 1871]], [600, "sum", 0.005401611328125, [1871, 1875]], [601, "=", 0.00225830078125, [1875, 1876]], [602, "s", 0.00127410888671875, [1876, 1877]], [603, "+", 0.0025482177734375, [1877, 1878]], [604, "sum", 0.0021209716796875, [1878, 1881]], [605, "B", 0.00164031982421875, [1881, 1882]], [606, "[", 0.00323486328125, [1882, 1883]], [607, "mid", 0.00170135498046875, [1883, 1886]], [608, "];", 0.002166748046875, [1886, 1888]], [611, "if", 0.0038909912109375, [1904, 1907]], [612, "(", 0.003265380859375, [1907, 1908]], [613, "sum", 0.002716064453125, [1908, 1911]], [614, "==", 0.00274658203125, [1911, 1913]], [615, "go", 0.0166015625, [1913, 1915]], [616, "al", 0.0025482177734375, [1915, 1917]], [617, ")", 0.00125885009765625, [1917, 1918]], [620, "return", 0.0023956298828125, [1938, 1945]], [622, "0", 0.00439453125, [1946, 1947]], [623, ";", 0.0016937255859375, [1947, 1948]], [626, "an", 0.009765625, [1964, 1967]], [627, "s", 0.003875732421875, [1967, 1968]], [628, "=", 0.003143310546875, [1968, 1969]], [629, "min", 0.003814697265625, [1969, 1972]], [630, "(", 0.0027313232421875, [1972, 1973]], [631, "ans", 0.001312255859375, [1973, 1976]], [632, ",", 0.003875732421875, [1976, 1977]], [633, "abs", 0.0026397705078125, [1977, 1980]], [634, "(", 0.0023345947265625, [1980, 1981]], [635, "sum", 0.00125885009765625, [1981, 1984]], [636, "-", 0.0024566650390625, [1984, 1985]], [637, "go", 0.007476806640625, [1985, 1987]], [638, "al", 0.0025787353515625, [1987, 1989]], [639, "));", 0.002227783203125, [1989, 1992]], [642, "if", 0.00162506103515625, [2008, 2011]], [643, "(", 0.0015716552734375, [2011, 2012]], [644, "sum", 0.00189971923828125, [2012, 2015]], [645, ">", 0.00164794921875, [2015, 2016]], [646, "go", 0.007080078125, [2016, 2018]], [647, "al", 0.00115966796875, [2018, 2020]], [648, "){", 0.00156402587890625, [2020, 2022]], [651, "r", 0.0028228759765625, [2042, 2044]], [652, "=", 0.002105712890625, [2044, 2045]], [653, "mid", 0.0011444091796875, [2045, 2048]], [654, "-", 0.00103759765625, [2048, 2049]], [655, "1", 0.0018768310546875, [2049, 2050]], [656, ";", 0.0023193359375, [2050, 2051]], [659, "}", 0.0019683837890625, [2067, 2069]], [662, "else", 0.00133514404296875, [2085, 2090]], [663, "{", 0.00099945068359375, [2090, 2091]], [666, "l", 0.0020904541015625, [2111, 2113]], [667, "=", 0.000885009765625, [2113, 2114]], [668, "mid", 0.0006561279296875, [2114, 2117]], [669, "+", 0.000583648681640625, [2117, 2118]], [670, "1", 0.000934600830078125, [2118, 2119]], [671, ";", 0.00124359130859375, [2119, 2120]], [674, "}", 0.0030975341796875, [2136, 2138]], [678, "}", 0.0032196044921875, [2154, 2156]], [681, "}", 0.00335693359375, [2164, 2166]], [686, "return", 0.00738525390625, [2183, 2190]], [687, "an", 0.0458984375, [2190, 2193]], [688, "s", 0.0048828125, [2193, 2194]], [689, ";", 0.0064697265625, [2194, 2195]], [692, "}", 0.02734375, [2199, 2201]], [694, "};", 0.033203125, [2202, 2204]]], "reading_all": [[1, "You", 1.6328125, [0, 3]], [2, "are", 0.47265625, [3, 7]], [3, "an", 0.263671875, [7, 10]], [4, "exception", 0.22265625, [10, 20]], [5, "ally", 0.09765625, [20, 24]], [6, "intelligent", 0.134765625, [24, 36]], [7, "coding", 0.2490234375, [36, 43]], [8, "assistant", 0.75, [43, 53]], [9, "that", 0.1767578125, [53, 58]], [10, "consistently", 0.1240234375, [58, 71]], [11, "delivers", 0.2099609375, [71, 80]], [12, "accurate", 0.1015625, [80, 89]], [13, "and", 0.06591796875, [89, 93]], [14, "reliable", 0.0810546875, [93, 102]], [15, "responses", 0.19140625, [102, 112]], [16, "to", 0.0712890625, [112, 115]], [17, "user", 0.08642578125, [115, 120]], [18, "instructions", 0.140625, [120, 133]], [19, ".", 1.015625, [133, 134]], [23, "@", 1.3125, [139, 141]], [24, "@", 1.4609375, [141, 142]], [25, "Inst", 0.82421875, [142, 147]], [26, "ruction", 1.296875, [147, 154]], [29, "You", 1.2421875, [158, 162]], [30, "are", 0.55859375, [162, 166]], [31, "a", 0.859375, [166, 168]], [32, "program", 0.9375, [168, 176]], [33, "rep", 3.484375, [176, 180]], [34, "aire", 12.625, [180, 184]], [35, "r", 5.375, [184, 185]], [36, ".", 5.0, [185, 186]], [37, "Please", 2.359375, [186, 193]], [38, "repair", 9.5625, [193, 200]], [39, "the", 1.5, [200, 204]], [40, "following", 1.3125, [204, 214]], [41, "bug", 2.625, [214, 218]], [42, "gy", 3.28125, [218, 220]], [43, "program", 2.5625, [220, 228]], [44, ".", 3.875, [228, 229]], [45, "You", 1.0703125, [229, 233]], [46, "are", 0.1943359375, [233, 237]], [47, "given", 0.8125, [237, 243]], [48, "an", 0.3203125, [243, 246]], [49, "integer", 0.380859375, [246, 254]], [50, "array", 0.53125, [254, 260]], [51, "num", 0.37109375, [260, 264]], [52, "s", 0.357421875, [264, 265]], [53, "and", 0.25, [265, 269]], [54, "an", 0.060546875, [269, 272]], [55, "integer", 0.0673828125, [272, 280]], [56, "goal", 0.494140625, [280, 285]], [57, ".", 0.357421875, [285, 286]], [59, "You", 0.6015625, [287, 290]], [60, "want", 0.37109375, [290, 295]], [61, "to", 0.12255859375, [295, 298]], [62, "choose", 0.306640625, [298, 305]], [63, "a", 0.09716796875, [305, 307]], [64, "subsequ", 0.6015625, [307, 315]], [65, "ence", 0.53515625, [315, 319]], [66, "of", 0.09912109375, [319, 322]], [67, "num", 0.107421875, [322, 326]], [68, "s", 0.162109375, [326, 327]], [69, "such", 0.11474609375, [327, 332]], [70, "that", 0.1181640625, [332, 337]], [71, "the", 0.06201171875, [337, 341]], [72, "sum", 0.134765625, [341, 345]], [73, "of", 0.05859375, [345, 348]], [74, "its", 0.057861328125, [348, 352]], [75, "elements", 0.09423828125, [352, 361]], [76, "is", 0.062255859375, [361, 364]], [77, "the", 0.060302734375, [364, 368]], [78, "closest", 0.3984375, [368, 376]], [79, "possible", 0.146484375, [376, 385]], [80, "to", 0.0712890625, [385, 388]], [81, "goal", 0.259765625, [388, 393]], [82, ".", 0.306640625, [393, 394]], [83, "That", 0.09375, [394, 399]], [84, "is", 0.07275390625, [399, 402]], [85, ",", 0.12060546875, [402, 403]], [86, "if", 0.072265625, [403, 406]], [87, "the", 0.048583984375, [406, 410]], [88, "sum", 0.06494140625, [410, 414]], [89, "of", 0.039794921875, [414, 417]], [90, "the", 0.036376953125, [417, 421]], [91, "subsequ", 0.1513671875, [421, 429]], [92, "ence", 0.11181640625, [429, 433]], [93, "'", 0.08447265625, [433, 434]], [94, "s", 0.04541015625, [434, 435]], [95, "elements", 0.050537109375, [435, 444]], [96, "is", 0.044677734375, [444, 447]], [97, "sum", 0.05615234375, [447, 451]], [98, ",", 0.15625, [451, 452]], [99, "then", 0.0703125, [452, 457]], [100, "you", 0.083984375, [457, 461]], [101, "want", 0.119140625, [461, 466]], [102, "to", 0.05712890625, [466, 469]], [103, "minimize", 0.2734375, [469, 478]], [104, "the", 0.055419921875, [478, 482]], [105, "absolute", 0.1298828125, [482, 491]], [106, "difference", 0.1865234375, [491, 502]], [107, "abs", 0.171875, [502, 506]], [108, "(", 0.11767578125, [506, 507]], [109, "sum", 0.0595703125, [507, 510]], [110, "-", 0.0732421875, [510, 512]], [111, "goal", 0.1123046875, [512, 517]], [112, ").", 0.1552734375, [517, 519]], [114, "Return", 0.828125, [520, 526]], [115, "the", 0.185546875, [526, 530]], [116, "minimum", 0.2177734375, [530, 538]], [117, "possible", 0.16796875, [538, 547]], [118, "value", 0.1484375, [547, 553]], [119, "of", 0.08056640625, [553, 556]], [120, "abs", 0.1923828125, [556, 560]], [121, "(", 0.107421875, [560, 561]], [122, "sum", 0.099609375, [561, 564]], [123, "-", 0.06787109375, [564, 566]], [124, "goal", 0.130859375, [566, 571]], [125, ").", 0.31640625, [571, 573]], [127, "Note", 0.328125, [574, 578]], [128, "that", 0.17578125, [578, 583]], [129, "a", 0.11474609375, [583, 585]], [130, "subsequ", 0.2392578125, [585, 593]], [131, "ence", 0.166015625, [593, 597]], [132, "of", 0.0830078125, [597, 600]], [133, "an", 0.0595703125, [600, 603]], [134, "array", 0.1259765625, [603, 609]], [135, "is", 0.06494140625, [609, 612]], [136, "an", 0.05224609375, [612, 615]], [137, "array", 0.0771484375, [615, 621]], [138, "formed", 0.12890625, [621, 628]], [139, "by", 0.06689453125, [628, 631]], [140, "removing", 0.10791015625, [631, 640]], [141, "some", 0.0546875, [640, 645]], [142, "elements", 0.062255859375, [645, 654]], [143, "(", 0.06494140625, [654, 656]], [144, "poss", 0.04541015625, [656, 660]], [145, "ibly", 0.072265625, [660, 664]], [146, "all", 0.0576171875, [664, 668]], [147, "or", 0.057373046875, [668, 671]], [148, "none", 0.09130859375, [671, 676]], [149, ")", 0.09765625, [676, 677]], [150, "of", 0.060546875, [677, 680]], [151, "the", 0.053466796875, [680, 684]], [152, "original", 0.07373046875, [684, 693]], [153, "array", 0.078125, [693, 699]], [154, ".", 0.25390625, [699, 700]], [155, "B", 0.6015625, [700, 701]], [156, "ug", 1.9296875, [701, 703]], [157, "gy", 2.890625, [703, 705]], [158, "code", 2.546875, [705, 710]], [159, ":", 3.234375, [710, 712]], [160, "class", 2.375, [712, 718]], [161, "S", 0.6640625, [718, 720]], [162, "olution", 1.8828125, [720, 727]], [163, "{", 1.5546875, [727, 729]], [165, "public", 0.74609375, [730, 736]], [166, ":", 0.6171875, [736, 737]], [169, "void", 0.54296875, [741, 746]], [170, "find", 0.51953125, [746, 751]], [171, "(", 0.72265625, [751, 752]], [172, "vector", 0.5625, [752, 758]], [173, "<", 0.08984375, [758, 759]], [174, "int", 0.130859375, [759, 762]], [175, ">", 0.08642578125, [762, 763]], [176, "&", 0.1728515625, [763, 764]], [177, "v", 0.25, [764, 765]], [178, ",", 0.1513671875, [765, 766]], [179, "int", 0.08447265625, [766, 770]], [180, "i", 0.130859375, [770, 772]], [181, ",", 0.1201171875, [772, 773]], [182, "int", 0.058837890625, [773, 777]], [183, "e", 0.1865234375, [777, 779]], [184, ",", 0.11962890625, [779, 780]], [185, "int", 0.053955078125, [780, 784]], [186, "sum", 0.13671875, [784, 788]], [187, ",", 0.1025390625, [788, 789]], [188, "vector", 0.095703125, [789, 796]], [189, "<", 0.0595703125, [796, 797]], [190, "int", 0.0947265625, [797, 800]], [191, ">", 0.045166015625, [800, 801]], [192, "&", 0.06787109375, [801, 802]], [193, "sum", 0.1201171875, [802, 805]], [194, "v", 0.271484375, [805, 806]], [195, "){", 0.1669921875, [806, 808]], [198, "if", 0.1611328125, [816, 819]], [199, "(", 0.134765625, [819, 820]], [200, "i", 0.060791015625, [820, 821]], [201, "==", 0.083984375, [821, 823]], [202, "e", 0.0791015625, [823, 824]], [203, "){", 0.09033203125, [824, 826]], [206, "sum", 0.060791015625, [838, 842]], [207, "v", 0.07421875, [842, 843]], [208, ".", 0.1708984375, [843, 844]], [209, "push", 0.201171875, [844, 848]], [210, "_", 0.2353515625, [848, 849]], [211, "back", 0.08251953125, [849, 853]], [212, "(", 0.08349609375, [853, 854]], [213, "sum", 0.046630859375, [854, 857]], [214, ");", 0.0859375, [857, 859]], [217, "return", 0.12255859375, [871, 878]], [218, ";", 0.10400390625, [878, 879]], [221, "}", 0.0830078125, [887, 889]], [224, "find", 0.265625, [897, 902]], [225, "(", 0.251953125, [902, 903]], [226, "v", 0.062255859375, [903, 904]], [227, ",", 0.064453125, [904, 905]], [228, "i", 0.044921875, [905, 906]], [229, "+", 0.04541015625, [906, 907]], [230, "1", 0.099609375, [907, 908]], [231, ",", 0.059814453125, [908, 909]], [232, "e", 0.049560546875, [909, 910]], [233, ",", 0.049560546875, [910, 911]], [234, "sum", 0.04052734375, [911, 914]], [235, "+", 0.060302734375, [914, 915]], [236, "v", 0.037109375, [915, 916]], [237, "[", 0.0458984375, [916, 917]], [238, "i", 0.0245361328125, [917, 918]], [239, "],", 0.053466796875, [918, 920]], [240, "sum", 0.0361328125, [920, 923]], [241, "v", 0.045654296875, [923, 924]], [242, ");", 0.09033203125, [924, 926]], [245, "find", 0.1943359375, [934, 939]], [246, "(", 0.12109375, [939, 940]], [247, "v", 0.08544921875, [940, 941]], [248, ",", 0.052490234375, [941, 942]], [249, "i", 0.02978515625, [942, 943]], [250, "+", 0.03369140625, [943, 944]], [251, "1", 0.06298828125, [944, 945]], [252, ",", 0.059814453125, [945, 946]], [253, "e", 0.0400390625, [946, 947]], [254, ",", 0.05419921875, [947, 948]], [255, "sum", 0.03662109375, [948, 951]], [256, ",", 0.05224609375, [951, 952]], [257, "sum", 0.054443359375, [952, 955]], [258, "v", 0.043212890625, [955, 956]], [259, ");", 0.07470703125, [956, 958]], [262, "}", 0.263671875, [962, 964]], [269, "int", 0.291015625, [982, 986]], [270, "min", 0.2578125, [986, 990]], [271, "Abs", 0.267578125, [990, 993]], [272, "Diff", 0.58984375, [993, 997]], [273, "erence", 0.44140625, [997, 1003]], [274, "(", 0.828125, [1003, 1004]], [275, "vector", 0.1875, [1004, 1010]], [276, "<", 0.3125, [1010, 1011]], [277, "int", 0.12451171875, [1011, 1014]], [278, ">", 0.07861328125, [1014, 1015]], [279, "&", 0.150390625, [1015, 1016]], [280, "num", 0.1806640625, [1016, 1020]], [281, "s", 0.1923828125, [1020, 1021]], [282, ",", 0.12353515625, [1021, 1022]], [283, "int", 0.07177734375, [1022, 1026]], [284, "goal", 0.373046875, [1026, 1031]], [285, ")", 0.25390625, [1031, 1032]], [286, "{", 0.404296875, [1032, 1034]], [289, "int", 0.14453125, [1042, 1046]], [290, "n", 0.1318359375, [1046, 1048]], [291, "=", 0.185546875, [1048, 1049]], [292, "num", 4.65625, [1049, 1052]], [293, "s", 0.05908203125, [1052, 1053]], [294, ".", 0.142578125, [1053, 1054]], [295, "size", 0.07958984375, [1054, 1058]], [296, "();", 0.0830078125, [1058, 1061]], [301, "//", 0.46875, [1078, 1081]], [302, "Step", 0.47265625, [1081, 1085]], [304, "1", 0.2734375, [1086, 1087]], [305, ":", 0.2333984375, [1087, 1088]], [306, "Div", 0.23828125, [1088, 1092]], [307, "ide", 0.2392578125, [1092, 1095]], [308, "num", 0.1181640625, [1095, 1099]], [309, "s", 0.1435546875, [1099, 1100]], [310, "into", 0.14453125, [1100, 1105]], [312, "2", 0.109375, [1106, 1107]], [313, "sub", 0.06396484375, [1107, 1111]], [314, "arr", 0.169921875, [1111, 1114]], [315, "ays", 0.140625, [1114, 1117]], [316, "of", 0.0595703125, [1117, 1120]], [317, "size", 0.064453125, [1120, 1125]], [318, "n", 0.05615234375, [1125, 1127]], [319, "/", 0.0771484375, [1127, 1128]], [320, "2", 0.125, [1128, 1129]], [321, "and", 0.060791015625, [1129, 1133]], [322, "n", 0.036865234375, [1133, 1135]], [323, "-", 0.058349609375, [1135, 1136]], [324, "n", 0.03857421875, [1136, 1137]], [325, "/", 0.052978515625, [1137, 1138]], [326, "2", 0.0849609375, [1138, 1139]], [331, "vector", 0.2314453125, [1156, 1163]], [332, "<", 0.09033203125, [1163, 1164]], [333, "int", 0.0947265625, [1164, 1167]], [334, ">", 0.16796875, [1167, 1168]], [335, "A", 0.251953125, [1168, 1169]], [336, ",", 0.1708984375, [1169, 1170]], [337, "B", 0.09375, [1170, 1171]], [338, ";", 0.09619140625, [1171, 1172]], [341, "for", 0.08349609375, [1180, 1184]], [342, "(", 0.130859375, [1184, 1185]], [343, "int", 0.044921875, [1185, 1188]], [344, "i", 0.0264892578125, [1188, 1190]], [345, "=", 0.047119140625, [1190, 1191]], [346, "0", 0.043212890625, [1191, 1192]], [347, ";", 0.0380859375, [1192, 1193]], [348, "i", 0.03173828125, [1193, 1194]], [349, "<", 0.0223388671875, [1194, 1195]], [350, "n", 0.040283203125, [1195, 1196]], [351, "/", 0.0458984375, [1196, 1197]], [352, "2", 0.0947265625, [1197, 1198]], [353, ";", 0.04150390625, [1198, 1199]], [354, "i", 0.02197265625, [1199, 1200]], [355, "++", 0.04150390625, [1200, 1202]], [356, ")", 0.09716796875, [1202, 1203]], [359, "A", 0.0625, [1215, 1217]], [360, ".", 0.130859375, [1217, 1218]], [361, "push", 0.10107421875, [1218, 1222]], [362, "_", 0.09228515625, [1222, 1223]], [363, "back", 0.0390625, [1223, 1227]], [364, "(", 0.083984375, [1227, 1228]], [365, "num", 0.06201171875, [1228, 1231]], [366, "s", 0.06005859375, [1231, 1232]], [367, "[", 0.037841796875, [1232, 1233]], [368, "i", 0.0211181640625, [1233, 1234]], [369, "]);", 0.055419921875, [1234, 1237]], [372, "for", 0.0498046875, [1245, 1249]], [373, "(", 0.08642578125, [1249, 1250]], [374, "int", 0.028564453125, [1250, 1253]], [375, "i", 0.019775390625, [1253, 1255]], [376, "=", 0.039306640625, [1255, 1256]], [377, "n", 0.0189208984375, [1256, 1257]], [378, "/", 0.029052734375, [1257, 1258]], [379, "2", 0.059326171875, [1258, 1259]], [380, ";", 0.033447265625, [1259, 1260]], [381, "i", 0.01953125, [1260, 1261]], [382, "<", 0.0216064453125, [1261, 1262]], [383, "n", 0.0167236328125, [1262, 1263]], [384, ";", 0.035888671875, [1263, 1264]], [385, "i", 0.017578125, [1264, 1265]], [386, "++", 0.0284423828125, [1265, 1267]], [387, ")", 0.08740234375, [1267, 1268]], [390, "B", 0.0693359375, [1280, 1282]], [391, ".", 0.126953125, [1282, 1283]], [392, "push", 0.04541015625, [1283, 1287]], [393, "_", 4.0625, [1287, 1288]], [394, "back", 0.031494140625, [1288, 1292]], [395, "(", 1.1953125, [1292, 1293]], [396, "num", 0.1044921875, [1293, 1296]], [397, "s", 0.0478515625, [1296, 1297]], [398, "[", 0.0302734375, [1297, 1298]], [399, "i", 0.03662109375, [1298, 1299]], [400, "]);", 0.0625, [1299, 1302]], [405, "//", 0.16796875, [1319, 1322]], [406, "Step", 0.2275390625, [1322, 1326]], [408, "2", 0.138671875, [1327, 1328]], [409, ":", 0.11083984375, [1328, 1329]], [410, "Find", 0.1162109375, [1329, 1334]], [411, "all", 0.06982421875, [1334, 1338]], [412, "possible", 0.087890625, [1338, 1347]], [413, "subset", 0.162109375, [1347, 1354]], [414, "sums", 0.1796875, [1354, 1359]], [415, "of", 0.05419921875, [1359, 1362]], [416, "A", 0.05810546875, [1362, 1364]], [417, "and", 0.045654296875, [1364, 1368]], [418, "B", 0.042236328125, [1368, 1370]], [423, "vector", 0.08544921875, [1387, 1394]], [424, "<", 0.047607421875, [1394, 1395]], [425, "int", 0.04541015625, [1395, 1398]], [426, ">", 0.059326171875, [1398, 1399]], [427, "sum", 0.1103515625, [1399, 1402]], [428, "A", 0.103515625, [1402, 1403]], [429, ",", 0.0810546875, [1403, 1404]], [430, "sum", 0.056884765625, [1404, 1407]], [431, "B", 0.051513671875, [1407, 1408]], [432, ";", 0.06689453125, [1408, 1409]], [435, "find", 0.236328125, [1417, 1422]], [436, "(", 0.216796875, [1422, 1423]], [437, "A", 0.046142578125, [1423, 1424]], [438, ",", 0.0546875, [1424, 1425]], [439, "0", 0.044189453125, [1425, 1426]], [440, ",", 0.05029296875, [1426, 1427]], [441, "A", 0.022705078125, [1427, 1428]], [442, ".", 0.12060546875, [1428, 1429]], [443, "size", 0.044677734375, [1429, 1433]], [444, "(),", 0.04638671875, [1433, 1436]], [445, "0", 0.03466796875, [1436, 1437]], [446, ",", 0.05078125, [1437, 1438]], [447, "sum", 0.04150390625, [1438, 1441]], [448, "A", 0.03857421875, [1441, 1442]], [449, ");", 0.09033203125, [1442, 1444]], [452, "find", 0.09326171875, [1452, 1457]], [453, "(", 0.1064453125, [1457, 1458]], [454, "B", 0.040771484375, [1458, 1459]], [455, ",", 0.058837890625, [1459, 1460]], [456, "0", 0.038330078125, [1460, 1461]], [457, ",", 0.051513671875, [1461, 1462]], [458, "B", 0.027587890625, [1462, 1463]], [459, ".", 0.1455078125, [1463, 1464]], [460, "size", 0.03662109375, [1464, 1468]], [461, "(),", 0.0277099609375, [1468, 1471]], [462, "0", 0.026123046875, [1471, 1472]], [463, ",", 0.04150390625, [1472, 1473]], [464, "sum", 0.038818359375, [1473, 1476]], [465, "B", 0.0272216796875, [1476, 1477]], [466, ");", 0.06494140625, [1477, 1479]], [471, "sort", 0.1748046875, [1496, 1501]], [472, "(", 0.15234375, [1501, 1502]], [473, "sum", 0.050048828125, [1502, 1505]], [474, "A", 0.03955078125, [1505, 1506]], [475, ".", 0.134765625, [1506, 1507]], [476, "begin", 0.07080078125, [1507, 1512]], [477, "(),", 0.038330078125, [1512, 1515]], [478, "sum", 0.06494140625, [1515, 1518]], [479, "A", 0.041259765625, [1518, 1519]], [480, ".", 0.123046875, [1519, 1520]], [481, "end", 0.036865234375, [1520, 1523]], [482, "());", 0.08203125, [1523, 1527]], [487, "//", 0.1455078125, [1545, 1548]], [488, "Step", 0.134765625, [1548, 1552]], [490, "3", 0.11328125, [1553, 1554]], [491, ":", 0.1044921875, [1554, 1555]], [492, "Find", 0.0771484375, [1555, 1560]], [493, "combinations", 0.291015625, [1560, 1573]], [494, "from", 0.0869140625, [1573, 1578]], [495, "sum", 0.05419921875, [1578, 1582]], [496, "A", 0.061279296875, [1582, 1583]], [497, "&", 0.103515625, [1583, 1585]], [498, "sum", 0.03515625, [1585, 1589]], [499, "B", 0.050537109375, [1589, 1590]], [500, "such", 0.083984375, [1590, 1595]], [501, "that", 0.091796875, [1595, 1600]], [502, "abs", 0.11181640625, [1600, 1604]], [503, "(", 0.12890625, [1604, 1605]], [504, "sum", 0.04736328125, [1605, 1608]], [505, "-", 0.08984375, [1608, 1609]], [506, "go", 0.12890625, [1609, 1611]], [507, "al", 0.0810546875, [1611, 1613]], [508, ")", 0.1328125, [1613, 1614]], [509, "is", 0.068359375, [1614, 1617]], [510, "minim", 0.1416015625, [1617, 1623]], [511, "ized", 0.158203125, [1623, 1627]], [516, "int", 0.1259765625, [1644, 1648]], [517, "an", 0.1552734375, [1648, 1651]], [518, "s", 0.1943359375, [1651, 1652]], [519, "=", 0.134765625, [1652, 1653]], [520, "INT", 0.1689453125, [1653, 1656]], [521, "_", 0.09521484375, [1656, 1657]], [522, "MAX", 0.12109375, [1657, 1660]], [523, ";", 0.10595703125, [1660, 1661]], [528, "for", 0.099609375, [1678, 1682]], [529, "(", 0.11865234375, [1682, 1683]], [530, "int", 0.061767578125, [1683, 1686]], [531, "i", 0.03759765625, [1686, 1688]], [532, "=", 0.0595703125, [1688, 1689]], [533, "0", 0.034423828125, [1689, 1690]], [534, ";", 0.051513671875, [1690, 1691]], [535, "i", 0.03466796875, [1691, 1692]], [536, "<", 0.031494140625, [1692, 1693]], [537, "sum", 0.056640625, [1693, 1696]], [538, "A", 0.052001953125, [1696, 1697]], [539, ".", 0.142578125, [1697, 1698]], [540, "size", 0.05224609375, [1698, 1702]], [541, "();", 0.057861328125, [1702, 1705]], [542, "i", 0.0419921875, [1705, 1706]], [543, "++", 0.06298828125, [1706, 1708]], [544, "){", 0.08447265625, [1708, 1710]], [547, "int", 0.07666015625, [1722, 1726]], [548, "s", 0.0732421875, [1726, 1728]], [549, "=", 0.09521484375, [1728, 1729]], [550, "sum", 0.04443359375, [1729, 1732]], [551, "A", 0.037841796875, [1732, 1733]], [552, "[", 0.05126953125, [1733, 1734]], [553, "i", 0.03466796875, [1734, 1735]], [554, "];", 0.0673828125, [1735, 1737]], [557, "int", 0.05615234375, [1749, 1753]], [558, "l", 0.07275390625, [1753, 1755]], [559, "=", 0.0712890625, [1755, 1756]], [560, "0", 0.03955078125, [1756, 1757]], [561, ";", 0.045654296875, [1757, 1758]], [564, "int", 0.04736328125, [1770, 1774]], [565, "r", 0.068359375, [1774, 1776]], [566, "=", 0.05419921875, [1776, 1777]], [567, "sum", 0.04296875, [1777, 1780]], [568, "B", 0.038330078125, [1780, 1781]], [569, ".", 0.1396484375, [1781, 1782]], [570, "size", 0.044677734375, [1782, 1786]], [571, "()-", 0.049560546875, [1786, 1789]], [572, "1", 0.068359375, [1789, 1790]], [573, ";", 0.0517578125, [1790, 1791]], [576, "while", 0.11279296875, [1803, 1809]], [577, "(", 0.1259765625, [1809, 1810]], [578, "l", 0.057861328125, [1810, 1811]], [579, "<", 0.05810546875, [1811, 1812]], [580, "=", 0.07666015625, [1812, 1813]], [581, "r", 0.06396484375, [1813, 1814]], [582, "){", 0.103515625, [1814, 1816]], [585, "int", 0.07763671875, [1832, 1836]], [586, "mid", 0.10205078125, [1836, 1840]], [587, "=", 0.0693359375, [1840, 1841]], [588, "l", 0.0284423828125, [1841, 1842]], [589, "+", 0.032470703125, [1842, 1843]], [590, "(", 0.0927734375, [1843, 1844]], [591, "r", 0.024658203125, [1844, 1845]], [592, "-", 0.0595703125, [1845, 1846]], [593, "l", 0.0211181640625, [1846, 1847]], [594, ")/", 0.058349609375, [1847, 1849]], [595, "2", 0.1474609375, [1849, 1850]], [596, ";", 0.04833984375, [1850, 1851]], [599, "int", 0.056640625, [1867, 1871]], [600, "sum", 0.060546875, [1871, 1875]], [601, "=", 0.07177734375, [1875, 1876]], [602, "s", 0.04443359375, [1876, 1877]], [603, "+", 0.043701171875, [1877, 1878]], [604, "sum", 0.047119140625, [1878, 1881]], [605, "B", 0.036865234375, [1881, 1882]], [606, "[", 0.056884765625, [1882, 1883]], [607, "mid", 0.04248046875, [1883, 1886]], [608, "];", 0.072265625, [1886, 1888]], [611, "if", 0.083984375, [1904, 1907]], [612, "(", 0.123046875, [1907, 1908]], [613, "sum", 0.05517578125, [1908, 1911]], [614, "==", 0.0703125, [1911, 1913]], [615, "go", 0.10888671875, [1913, 1915]], [616, "al", 0.0830078125, [1915, 1917]], [617, ")", 0.1376953125, [1917, 1918]], [620, "return", 0.1826171875, [1938, 1945]], [622, "0", 0.173828125, [1946, 1947]], [623, ";", 0.07177734375, [1947, 1948]], [626, "an", 0.1064453125, [1964, 1967]], [627, "s", 0.095703125, [1967, 1968]], [628, "=", 0.1044921875, [1968, 1969]], [629, "min", 0.11376953125, [1969, 1972]], [630, "(", 0.1318359375, [1972, 1973]], [631, "ans", 0.07470703125, [1973, 1976]], [632, ",", 0.1005859375, [1976, 1977]], [633, "abs", 0.10400390625, [1977, 1980]], [634, "(", 0.12109375, [1980, 1981]], [635, "sum", 0.045166015625, [1981, 1984]], [636, "-", 0.076171875, [1984, 1985]], [637, "go", 0.4375, [1985, 1987]], [638, "al", 0.041015625, [1987, 1989]], [639, "));", 0.09619140625, [1989, 1992]], [642, "if", 0.06103515625, [2008, 2011]], [643, "(", 0.10986328125, [2011, 2012]], [644, "sum", 0.041015625, [2012, 2015]], [645, ">", 0.05419921875, [2015, 2016]], [646, "go", 0.05126953125, [2016, 2018]], [647, "al", 0.036865234375, [2018, 2020]], [648, "){", 0.09033203125, [2020, 2022]], [651, "r", 0.050048828125, [2042, 2044]], [652, "=", 0.078125, [2044, 2045]], [653, "mid", 0.04443359375, [2045, 2048]], [654, "-", 0.07470703125, [2048, 2049]], [655, "1", 0.078125, [2049, 2050]], [656, ";", 0.0634765625, [2050, 2051]], [659, "}", 0.091796875, [2067, 2069]], [662, "else", 0.0703125, [2085, 2090]], [663, "{", 0.08203125, [2090, 2091]], [666, "l", 0.045654296875, [2111, 2113]], [667, "=", 0.06787109375, [2113, 2114]], [668, "mid", 0.03662109375, [2114, 2117]], [669, "+", 0.03369140625, [2117, 2118]], [670, "1", 0.064453125, [2118, 2119]], [671, ";", 0.05712890625, [2119, 2120]], [674, "}", 0.095703125, [2136, 2138]], [678, "}", 0.1123046875, [2154, 2156]], [681, "}", 0.15234375, [2164, 2166]], [686, "return", 0.21875, [2183, 2190]], [687, "an", 1.9140625, [2190, 2193]], [688, "s", 0.1357421875, [2193, 2194]], [689, ";", 0.400390625, [2194, 2195]], [692, "}", 0.8046875, [2199, 2201]], [694, "};", 3.578125, [2202, 2204]]]}, "clean_tokens": ["<\uff5cbegin\u2581of\u2581sentence\uff5c>", "You", "are", "an", "exception", "ally", "intelligent", "coding", "assistant", "that", "consistently", "delivers", "accurate", "and", "reliable", "responses", "to", "user", "instructions", ".", "", "", "", "@", "@", "Inst", "ruction", "", "", "You", "are", "a", "program", "rep", "aire", "r", ".", "Please", "repair", "the", "following", "bug", "gy", "program", ".", "You", "are", "given", "an", "integer", "array", "num", "s", "and", "an", "integer", "goal", ".", "", "You", "want", "to", "choose", "a", "subsequ", "ence", "of", "num", "s", "such", "that", "the", "sum", "of", "its", "elements", "is", "the", "closest", "possible", "to", "goal", ".", "That", "is", ",", "if", "the", "sum", "of", "the", "subsequ", "ence", "'", "s", "elements", "is", "sum", ",", "then", "you", "want", "to", "minimize", "the", "absolute", "difference", "abs", "(", "sum", "-", "goal", ").", "", "Return", "the", "minimum", "possible", "value", "of", "abs", "(", "sum", "-", "goal", ").", "", "Note", "that", "a", "subsequ", "ence", "of", "an", "array", "is", "an", "array", "formed", "by", "removing", "some", "elements", "(", "poss", "ibly", "all", "or", "none", ")", "of", "the", "original", "array", ".", "B", "ug", "gy", "code", ":", "class", "S", "olution", "{", "", "public", ":", "", "", "void", "find", "(", "vector", "<", "int", ">", "&", "v", ",", "int", "i", ",", "int", "e", ",", "int", "sum", ",", "vector", "<", "int", ">", "&", "sum", "v", "){", "", "", "if", "(", "i", "==", "e", "){", "", "", "sum", "v", ".", "push", "_", "back", "(", "sum", ");", "", "", "return", ";", "", "", "}", "", "", "find", "(", "v", ",", "i", "+", "1", ",", "e", ",", "sum", "+", "v", "[", "i", "],", "sum", "v", ");", "", "", "find", "(", "v", ",", "i", "+", "1", ",", "e", ",", "sum", ",", "sum", "v", ");", "", "", "}", "", "", "", "", "", "", "int", "min", "Abs", "Diff", "erence", "(", "vector", "<", "int", ">", "&", "num", "s", ",", "int", "goal", ")", "{", "", "", "int", "n", "=", "num", "s", ".", "size", "();", "", "", "", "", "//", "Step", "", "1", ":", "Div", "ide", "num", "s", "into", "", "2", "sub", "arr", "ays", "of", "size", "n", "/", "2", "and", "n", "-", "n", "/", "2", "", "", "", "", "vector", "<", "int", ">", "A", ",", "B", ";", "", "", "for", "(", "int", "i", "=", "0", ";", "i", "<", "n", "/", "2", ";", "i", "++", ")", "", "", "A", ".", "push", "_", "back", "(", "num", "s", "[", "i", "]);", "", "", "for", "(", "int", "i", "=", "n", "/", "2", ";", "i", "<", "n", ";", "i", "++", ")", "", "", "B", ".", "push", "_", "back", "(", "num", "s", "[", "i", "]);", "", "", "", "", "//", "Step", "", "2", ":", "Find", "all", "possible", "subset", "sums", "of", "A", "and", "B", "", "", "", "", "vector", "<", "int", ">", "sum", "A", ",", "sum", "B", ";", "", "", "find", "(", "A", ",", "0", ",", "A", ".", "size", "(),", "0", ",", "sum", "A", ");", "", "", "find", "(", "B", ",", "0", ",", "B", ".", "size", "(),", "0", ",", "sum", "B", ");", "", "", "", "", "sort", "(", "sum", "A", ".", "begin", "(),", "sum", "A", ".", "end", "());", "", "", "", "", "//", "Step", "", "3", ":", "Find", "combinations", "from", "sum", "A", "&", "sum", "B", "such", "that", "abs", "(", "sum", "-", "go", "al", ")", "is", "minim", "ized", "", "", "", "", "int", "an", "s", "=", "INT", "_", "MAX", ";", "", "", "", "", "for", "(", "int", "i", "=", "0", ";", "i", "<", "sum", "A", ".", "size", "();", "i", "++", "){", "", "", "int", "s", "=", "sum", "A", "[", "i", "];", "", "", "int", "l", "=", "0", ";", "", "", "int", "r", "=", "sum", "B", ".", "size", "()-", "1", ";", "", "", "while", "(", "l", "<", "=", "r", "){", "", "", "int", "mid", "=", "l", "+", "(", "r", "-", "l", ")/", "2", ";", "", "", "int", "sum", "=", "s", "+", "sum", "B", "[", "mid", "];", "", "", "if", "(", "sum", "==", "go", "al", ")", "", "", "return", "", "0", ";", "", "", "an", "s", "=", "min", "(", "ans", ",", "abs", "(", "sum", "-", "go", "al", "));", "", "", "if", "(", "sum", ">", "go", "al", "){", "", "", "r", "=", "mid", "-", "1", ";", "", "", "}", "", "", "else", "{", "", "", "l", "=", "mid", "+", "1", ";", "", "", "}", "", "", "", "}", "", "", "}", "", "", "", "", "return", "an", "s", ";", "", "", "}", "", "};", "$", "Test", "case", "(", "Input", "with", "expected", "output", ")", ":", "Input", ":", "num", "s", "=", "[", "5", ",-", "7", ",", "3", ",", "5", "],", "goal", "=", "6", "", "Output", ":", "", "0", "", "F", "ault", "reasoning", ":", "sum", "B", "(", "variable", ")", "in", "min", "Abs", "Diff", "erence", "(", "function", ")", "is", "wrong", ".", "", "", "", "@", "@", "Response", "", ""], "fix": null}