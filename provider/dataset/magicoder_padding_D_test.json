{"data": null, "prompt": "You are an exceptionally intelligent coding assistant that consistently delivers accurate and reliable responses to user instructions.\n\n    @@ Instruction\n    You are a program repairer. Please repair the following buggy program. You are given an integer array nums and an integer goal.\nYou want to choose a subsequence of nums such that the sum of its elements is the closest possible to goal. That is, if the sum of the subsequence's elements is sum, then you want to minimize the absolute difference abs(sum - goal).\nReturn the minimum possible value of abs(sum - goal).\nNote that a subsequence of an array is an array formed by removing some elements (possibly all or none) of the original array.Buggy code : class Solution {\npublic:\n    void find(vector<int>&v, int i, int e, int sum, vector<int>&sumv){\n        if(i==e){\n            sumv.push_back(sum);\n            return;\n        }\n        find(v,i+1,e,sum+v[i],sumv);\n        find(v,i+1,e,sum,sumv);\n    }\n        \n    \n    int minAbsDifference(vector<int>& nums, int goal) {\n        int n=nums.size();\n        \n        //Step 1: Divide nums into 2 subarrays of size n/2 and n-n/2\n        \n        vector<int>A,B;\n        for(int i=0;i<n/2;i++)\n            A.push_back(nums[i]);\n        for(int i=n/2;i<n;i++)\n            B.push_back(nums[i]);\n        \n        //Step 2: Find all possible subset sums of A and B\n        \n        vector<int>sumA,sumB;\n        find(A,0,A.size(),0,sumA);\n        find(B,0,B.size(),0,sumB);\n        \n        sort(sumA.begin(),sumA.end());\n         \n        //Step 3: Find combinations from sumA & sumB such that abs(sum-goal) is minimized\n        \n        int ans=INT_MAX;\n        \n        for(int i=0;i<sumA.size();i++){\n            int s=sumA[i];\n            int l=0;\n            int r=sumB.size()-1;\n            while(l<=r){\n                int mid=l+(r-l)/2;\n                int sum=s+sumB[mid];\n                if(sum==goal)\n                    return 0;\n                ans=min(ans,abs(sum-goal));\n                if(sum>goal){\n                    r=mid-1;\n                }\n                else{\n                    l=mid+1;\n                }    \n            }\n        }\n        \n        return ans;\n    }\n};$Testcase(Input with expected output) : Input: nums = [5,-7,3,5], goal = 6\nOutput: 0\n\n    @@ Response\n    ", "res": {"reading_first": [[79, "You", 0.00836181640625, [0, 3]], [80, "are", 0.010009765625, [3, 7]], [81, "an", 0.01202392578125, [7, 10]], [82, "exception", 0.01190185546875, [10, 20]], [83, "ally", 0.01116943359375, [20, 24]], [84, "intelligent", 0.009765625, [24, 36]], [85, "coding", 0.0181884765625, [36, 43]], [86, "assistant", 0.00830078125, [43, 53]], [87, "that", 0.0133056640625, [53, 58]], [88, "consistently", 0.01416015625, [58, 71]], [89, "delivers", 0.01007080078125, [71, 80]], [90, "accurate", 0.01336669921875, [80, 89]], [91, "and", 0.016357421875, [89, 93]], [92, "reliable", 0.0101318359375, [93, 102]], [93, "responses", 0.01092529296875, [102, 112]], [94, "to", 0.01513671875, [112, 115]], [95, "user", 0.00787353515625, [115, 120]], [96, "instructions", 0.009765625, [120, 133]], [97, ".", 0.0673828125, [133, 134]], [101, "@", 0.00689697265625, [139, 141]], [102, "@", 0.0087890625, [141, 142]], [103, "Inst", 0.007476806640625, [142, 147]], [104, "ruction", 0.006317138671875, [147, 154]], [107, "You", 0.00726318359375, [158, 162]], [108, "are", 0.0096435546875, [162, 166]], [109, "a", 0.0201416015625, [166, 168]], [110, "program", 0.01068115234375, [168, 176]], [111, "rep", 0.00958251953125, [176, 180]], [112, "aire", 0.0074462890625, [180, 184]], [113, "r", 0.0067138671875, [184, 185]], [114, ".", 0.06640625, [185, 186]], [115, "Please", 0.016357421875, [186, 193]], [116, "repair", 0.01165771484375, [193, 200]], [117, "the", 0.01531982421875, [200, 204]], [118, "following", 0.0167236328125, [204, 214]], [119, "bug", 0.01300048828125, [214, 218]], [120, "gy", 0.007659912109375, [218, 220]], [121, "program", 0.01080322265625, [220, 228]], [122, ".", 0.06591796875, [228, 229]], [123, "You", 0.006805419921875, [229, 233]], [124, "are", 0.00933837890625, [233, 237]], [125, "given", 0.017333984375, [237, 243]], [126, "an", 0.01129150390625, [243, 246]], [127, "integer", 0.01141357421875, [246, 254]], [128, "array", 0.01263427734375, [254, 260]], [129, "num", 0.01068115234375, [260, 264]], [130, "s", 0.01007080078125, [264, 265]], [131, "and", 0.01708984375, [265, 269]], [132, "an", 0.0113525390625, [269, 272]], [133, "integer", 0.0113525390625, [272, 280]], [134, "goal", 0.01177978515625, [280, 285]], [135, ".", 0.06640625, [285, 286]], [137, "You", 0.00848388671875, [287, 290]], [138, "want", 0.01177978515625, [290, 295]], [139, "to", 0.0155029296875, [295, 298]], [140, "choose", 0.01116943359375, [298, 305]], [141, "a", 0.0198974609375, [305, 307]], [142, "subsequ", 0.014892578125, [307, 315]], [143, "ence", 0.00872802734375, [315, 319]], [144, "of", 0.0162353515625, [319, 322]], [145, "num", 0.0107421875, [322, 326]], [146, "s", 0.0101318359375, [326, 327]], [147, "such", 0.01116943359375, [327, 332]], [148, "that", 0.01275634765625, [332, 337]], [149, "the", 0.0159912109375, [337, 341]], [150, "sum", 0.0093994140625, [341, 345]], [151, "of", 0.016845703125, [345, 348]], [152, "its", 0.0086669921875, [348, 352]], [153, "elements", 0.01129150390625, [352, 361]], [154, "is", 0.01116943359375, [361, 364]], [155, "the", 0.0159912109375, [364, 368]], [156, "closest", 0.0115966796875, [368, 376]], [157, "possible", 0.01043701171875, [376, 385]], [158, "to", 0.015869140625, [385, 388]], [159, "goal", 0.011962890625, [388, 393]], [160, ".", 0.06982421875, [393, 394]], [161, "That", 0.012451171875, [394, 399]], [162, "is", 0.01104736328125, [399, 402]], [163, ",", 0.022705078125, [402, 403]], [164, "if", 0.0169677734375, [403, 406]], [165, "the", 0.0159912109375, [406, 410]], [166, "sum", 0.00946044921875, [410, 414]], [167, "of", 0.0166015625, [414, 417]], [168, "the", 0.015869140625, [417, 421]], [169, "subsequ", 0.01531982421875, [421, 429]], [170, "ence", 0.0086669921875, [429, 433]], [171, "'", 0.00946044921875, [433, 434]], [172, "s", 0.010009765625, [434, 435]], [173, "elements", 0.01123046875, [435, 444]], [174, "is", 0.0107421875, [444, 447]], [175, "sum", 0.00958251953125, [447, 451]], [176, ",", 0.0230712890625, [451, 452]], [177, "then", 0.0147705078125, [452, 457]], [178, "you", 0.00701904296875, [457, 461]], [179, "want", 0.01202392578125, [461, 466]], [180, "to", 0.015869140625, [466, 469]], [181, "minimize", 0.015869140625, [469, 478]], [182, "the", 0.0162353515625, [478, 482]], [183, "absolute", 0.0155029296875, [482, 491]], [184, "difference", 0.0120849609375, [491, 502]], [185, "abs", 0.011962890625, [502, 506]], [186, "(", 0.03955078125, [506, 507]], [187, "sum", 0.0108642578125, [507, 510]], [188, "-", 0.0087890625, [510, 512]], [189, "goal", 0.01214599609375, [512, 517]], [190, ").", 0.0147705078125, [517, 519]], [192, "Return", 0.01068115234375, [520, 526]], [193, "the", 0.01611328125, [526, 530]], [194, "minimum", 0.01031494140625, [530, 538]], [195, "possible", 0.010498046875, [538, 547]], [196, "value", 0.01275634765625, [547, 553]], [197, "of", 0.0167236328125, [553, 556]], [198, "abs", 0.01123046875, [556, 560]], [199, "(", 0.037841796875, [560, 561]], [200, "sum", 0.01055908203125, [561, 564]], [201, "-", 0.00830078125, [564, 566]], [202, "goal", 0.01116943359375, [566, 571]], [203, ").", 0.01422119140625, [571, 573]], [205, "Note", 0.00946044921875, [574, 578]], [206, "that", 0.01300048828125, [578, 583]], [207, "a", 0.0201416015625, [583, 585]], [208, "subsequ", 0.01483154296875, [585, 593]], [209, "ence", 0.00927734375, [593, 597]], [210, "of", 0.0167236328125, [597, 600]], [211, "an", 0.0115966796875, [600, 603]], [212, "array", 0.01251220703125, [603, 609]], [213, "is", 0.010986328125, [609, 612]], [214, "an", 0.01129150390625, [612, 615]], [215, "array", 0.01214599609375, [615, 621]], [216, "formed", 0.0186767578125, [621, 628]], [217, "by", 0.0115966796875, [628, 631]], [218, "removing", 0.00787353515625, [631, 640]], [219, "some", 0.0108642578125, [640, 645]], [220, "elements", 0.0107421875, [645, 654]], [221, "(", 0.019287109375, [654, 656]], [222, "poss", 0.0106201171875, [656, 660]], [223, "ibly", 0.0120849609375, [660, 664]], [224, "all", 0.00927734375, [664, 668]], [225, "or", 0.011962890625, [668, 671]], [226, "none", 0.01336669921875, [671, 676]], [227, ")", 0.05712890625, [676, 677]], [228, "of", 0.0172119140625, [677, 680]], [229, "the", 0.015625, [680, 684]], [230, "original", 0.010986328125, [684, 693]], [231, "array", 0.0128173828125, [693, 699]], [232, ".", 0.0732421875, [699, 700]], [233, "B", 0.004364013671875, [700, 701]], [234, "ug", 0.0079345703125, [701, 703]], [235, "gy", 0.00836181640625, [703, 705]], [236, "code", 0.0135498046875, [705, 710]], [237, ":", 0.00750732421875, [710, 712]], [238, "class", 0.013916015625, [712, 718]], [239, "S", 0.00848388671875, [718, 720]], [240, "olution", 0.0152587890625, [720, 727]], [241, "{", 0.0299072265625, [727, 729]], [243, "public", 0.01080322265625, [730, 736]], [244, ":", 0.0184326171875, [736, 737]], [247, "void", 0.011474609375, [741, 746]], [248, "find", 0.0133056640625, [746, 751]], [249, "(", 0.039306640625, [751, 752]], [250, "vector", 0.01275634765625, [752, 758]], [251, "<", 0.007415771484375, [758, 759]], [252, "int", 0.01153564453125, [759, 762]], [253, ">", 0.010986328125, [762, 763]], [254, "&", 0.0031585693359375, [763, 764]], [255, "v", 0.0052490234375, [764, 765]], [256, ",", 0.02294921875, [765, 766]], [257, "int", 0.01141357421875, [766, 770]], [258, "i", 0.007110595703125, [770, 772]], [259, ",", 0.0228271484375, [772, 773]], [260, "int", 0.0115966796875, [773, 777]], [261, "e", 0.006378173828125, [777, 779]], [262, ",", 0.022705078125, [779, 780]], [263, "int", 0.01177978515625, [780, 784]], [264, "sum", 0.010498046875, [784, 788]], [265, ",", 0.0228271484375, [788, 789]], [266, "vector", 0.01055908203125, [789, 796]], [267, "<", 0.0076904296875, [796, 797]], [268, "int", 0.01214599609375, [797, 800]], [269, ">", 0.01092529296875, [800, 801]], [270, "&", 0.003265380859375, [801, 802]], [271, "sum", 0.011474609375, [802, 805]], [272, "v", 0.005523681640625, [805, 806]], [273, "){", 0.0177001953125, [806, 808]], [276, "if", 0.0174560546875, [816, 819]], [277, "(", 0.0400390625, [819, 820]], [278, "i", 0.0087890625, [820, 821]], [279, "==", 0.01446533203125, [821, 823]], [280, "e", 0.007354736328125, [823, 824]], [281, "){", 0.0181884765625, [824, 826]], [284, "sum", 0.0107421875, [838, 842]], [285, "v", 0.0057373046875, [842, 843]], [286, ".", 0.07470703125, [843, 844]], [287, "push", 0.01202392578125, [844, 848]], [288, "_", 0.021728515625, [848, 849]], [289, "back", 0.01055908203125, [849, 853]], [290, "(", 0.041015625, [853, 854]], [291, "sum", 0.01165771484375, [854, 857]], [292, ");", 0.0208740234375, [857, 859]], [295, "return", 0.0208740234375, [871, 878]], [296, ";", 0.016357421875, [878, 879]], [299, "}", 0.0235595703125, [887, 889]], [302, "find", 0.01361083984375, [897, 902]], [303, "(", 0.0400390625, [902, 903]], [304, "v", 0.0057373046875, [903, 904]], [305, ",", 0.0235595703125, [904, 905]], [306, "i", 0.00909423828125, [905, 906]], [307, "+", 0.00933837890625, [906, 907]], [308, "1", 0.0272216796875, [907, 908]], [309, ",", 0.023681640625, [908, 909]], [310, "e", 0.00762939453125, [909, 910]], [311, ",", 0.0238037109375, [910, 911]], [312, "sum", 0.0111083984375, [911, 914]], [313, "+", 0.009765625, [914, 915]], [314, "v", 0.005462646484375, [915, 916]], [315, "[", 0.0115966796875, [916, 917]], [316, "i", 0.00848388671875, [917, 918]], [317, "],", 0.009521484375, [918, 920]], [318, "sum", 0.010498046875, [920, 923]], [319, "v", 0.00543212890625, [923, 924]], [320, ");", 0.02001953125, [924, 926]], [323, "find", 0.01361083984375, [934, 939]], [324, "(", 0.0419921875, [939, 940]], [325, "v", 0.0054931640625, [940, 941]], [326, ",", 0.0247802734375, [941, 942]], [327, "i", 0.0087890625, [942, 943]], [328, "+", 0.01092529296875, [943, 944]], [329, "1", 0.0274658203125, [944, 945]], [330, ",", 0.025146484375, [945, 946]], [331, "e", 0.008056640625, [946, 947]], [332, ",", 0.0252685546875, [947, 948]], [333, "sum", 0.01177978515625, [948, 951]], [334, ",", 0.0252685546875, [951, 952]], [335, "sum", 0.01202392578125, [952, 955]], [336, "v", 0.006195068359375, [955, 956]], [337, ");", 0.021728515625, [956, 958]], [340, "}", 0.0245361328125, [962, 964]], [347, "int", 0.0115966796875, [982, 986]], [348, "min", 0.0101318359375, [986, 990]], [349, "Abs", 0.0093994140625, [990, 993]], [350, "Diff", 0.007781982421875, [993, 997]], [351, "erence", 0.00982666015625, [997, 1003]], [352, "(", 0.041259765625, [1003, 1004]], [353, "vector", 0.01385498046875, [1004, 1010]], [354, "<", 0.00848388671875, [1010, 1011]], [355, "int", 0.01251220703125, [1011, 1014]], [356, ">", 0.011962890625, [1014, 1015]], [357, "&", 0.0034637451171875, [1015, 1016]], [358, "num", 0.0126953125, [1016, 1020]], [359, "s", 0.0113525390625, [1020, 1021]], [360, ",", 0.025390625, [1021, 1022]], [361, "int", 0.01263427734375, [1022, 1026]], [362, "goal", 0.01458740234375, [1026, 1031]], [363, ")", 0.056396484375, [1031, 1032]], [364, "{", 0.031494140625, [1032, 1034]], [367, "int", 0.01263427734375, [1042, 1046]], [368, "n", 0.01141357421875, [1046, 1048]], [369, "=", 0.021240234375, [1048, 1049]], [370, "num", 0.0106201171875, [1049, 1052]], [371, "s", 0.01092529296875, [1052, 1053]], [372, ".", 0.0732421875, [1053, 1054]], [373, "size", 0.014404296875, [1054, 1058]], [374, "();", 0.0164794921875, [1058, 1061]], [379, "//", 0.01092529296875, [1078, 1081]], [380, "Step", 0.010498046875, [1081, 1085]], [382, "1", 0.0260009765625, [1086, 1087]], [383, ":", 0.0194091796875, [1087, 1088]], [384, "Div", 0.009033203125, [1088, 1092]], [385, "ide", 0.012451171875, [1092, 1095]], [386, "num", 0.01263427734375, [1095, 1099]], [387, "s", 0.01153564453125, [1099, 1100]], [388, "into", 0.01611328125, [1100, 1105]], [390, "2", 0.031982421875, [1106, 1107]], [391, "sub", 0.0093994140625, [1107, 1111]], [392, "arr", 0.01080322265625, [1111, 1114]], [393, "ays", 0.01007080078125, [1114, 1117]], [394, "of", 0.018798828125, [1117, 1120]], [395, "size", 0.01202392578125, [1120, 1125]], [396, "n", 0.0107421875, [1125, 1127]], [397, "/", 0.01275634765625, [1127, 1128]], [398, "2", 0.0322265625, [1128, 1129]], [399, "and", 0.0174560546875, [1129, 1133]], [400, "n", 0.01092529296875, [1133, 1135]], [401, "-", 0.027099609375, [1135, 1136]], [402, "n", 0.006805419921875, [1136, 1137]], [403, "/", 0.01300048828125, [1137, 1138]], [404, "2", 0.0322265625, [1138, 1139]], [409, "vector", 0.01153564453125, [1156, 1163]], [410, "<", 0.0087890625, [1163, 1164]], [411, "int", 0.0130615234375, [1164, 1167]], [412, ">", 0.01239013671875, [1167, 1168]], [413, "A", 0.007537841796875, [1168, 1169]], [414, ",", 0.025146484375, [1169, 1170]], [415, "B", 0.004974365234375, [1170, 1171]], [416, ";", 0.01806640625, [1171, 1172]], [419, "for", 0.015625, [1180, 1184]], [420, "(", 0.0439453125, [1184, 1185]], [421, "int", 0.013427734375, [1185, 1188]], [422, "i", 0.008056640625, [1188, 1190]], [423, "=", 0.0225830078125, [1190, 1191]], [424, "0", 0.00958251953125, [1191, 1192]], [425, ";", 0.0181884765625, [1192, 1193]], [426, "i", 0.00921630859375, [1193, 1194]], [427, "<", 0.00909423828125, [1194, 1195]], [428, "n", 0.007293701171875, [1195, 1196]], [429, "/", 0.01336669921875, [1196, 1197]], [430, "2", 0.032470703125, [1197, 1198]], [431, ";", 0.018798828125, [1198, 1199]], [432, "i", 0.00946044921875, [1199, 1200]], [433, "++", 0.01397705078125, [1200, 1202]], [434, ")", 0.059814453125, [1202, 1203]], [437, "A", 0.00994873046875, [1215, 1217]], [438, ".", 0.08056640625, [1217, 1218]], [439, "push", 0.0140380859375, [1218, 1222]], [440, "_", 0.02490234375, [1222, 1223]], [441, "back", 0.01165771484375, [1223, 1227]], [442, "(", 0.046142578125, [1227, 1228]], [443, "num", 0.0113525390625, [1228, 1231]], [444, "s", 0.0118408203125, [1231, 1232]], [445, "[", 0.0142822265625, [1232, 1233]], [446, "i", 0.01031494140625, [1233, 1234]], [447, "]);", 0.0201416015625, [1234, 1237]], [450, "for", 0.0167236328125, [1245, 1249]], [451, "(", 0.046630859375, [1249, 1250]], [452, "int", 0.0147705078125, [1250, 1253]], [453, "i", 0.009033203125, [1253, 1255]], [454, "=", 0.023681640625, [1255, 1256]], [455, "n", 0.0084228515625, [1256, 1257]], [456, "/", 0.01416015625, [1257, 1258]], [457, "2", 0.03466796875, [1258, 1259]], [458, ";", 0.0203857421875, [1259, 1260]], [459, "i", 0.0108642578125, [1260, 1261]], [460, "<", 0.010009765625, [1261, 1262]], [461, "n", 0.0081787109375, [1262, 1263]], [462, ";", 0.0198974609375, [1263, 1264]], [463, "i", 0.01025390625, [1264, 1265]], [464, "++", 0.01373291015625, [1265, 1267]], [465, ")", 0.0615234375, [1267, 1268]], [468, "B", 0.01007080078125, [1280, 1282]], [469, ".", 0.08154296875, [1282, 1283]], [470, "push", 0.01348876953125, [1283, 1287]], [471, "_", 0.0233154296875, [1287, 1288]], [472, "back", 0.0107421875, [1288, 1292]], [473, "(", 0.046142578125, [1292, 1293]], [474, "num", 0.010986328125, [1293, 1296]], [475, "s", 0.01171875, [1296, 1297]], [476, "[", 0.01361083984375, [1297, 1298]], [477, "i", 0.00970458984375, [1298, 1299]], [478, "]);", 0.0194091796875, [1299, 1302]], [483, "//", 0.01275634765625, [1319, 1322]], [484, "Step", 0.0115966796875, [1322, 1326]], [486, "2", 0.03466796875, [1327, 1328]], [487, ":", 0.02294921875, [1328, 1329]], [488, "Find", 0.0179443359375, [1329, 1334]], [489, "all", 0.01251220703125, [1334, 1338]], [490, "possible", 0.01446533203125, [1338, 1347]], [491, "subset", 0.0179443359375, [1347, 1354]], [492, "sums", 0.0208740234375, [1354, 1359]], [493, "of", 0.0211181640625, [1359, 1362]], [494, "A", 0.01031494140625, [1362, 1364]], [495, "and", 0.02001953125, [1364, 1368]], [496, "B", 0.01025390625, [1368, 1370]], [501, "vector", 0.0135498046875, [1387, 1394]], [502, "<", 0.0098876953125, [1394, 1395]], [503, "int", 0.0146484375, [1395, 1398]], [504, ">", 0.01348876953125, [1398, 1399]], [505, "sum", 0.013671875, [1399, 1402]], [506, "A", 0.0084228515625, [1402, 1403]], [507, ",", 0.027587890625, [1403, 1404]], [508, "sum", 0.013916015625, [1404, 1407]], [509, "B", 0.00592041015625, [1407, 1408]], [510, ";", 0.0203857421875, [1408, 1409]], [513, "find", 0.016845703125, [1417, 1422]], [514, "(", 0.047119140625, [1422, 1423]], [515, "A", 0.009521484375, [1423, 1424]], [516, ",", 0.0272216796875, [1424, 1425]], [517, "0", 0.01123046875, [1425, 1426]], [518, ",", 0.0269775390625, [1426, 1427]], [519, "A", 0.00897216796875, [1427, 1428]], [520, ".", 0.0810546875, [1428, 1429]], [521, "size", 0.015380859375, [1429, 1433]], [522, "(),", 0.0130615234375, [1433, 1436]], [523, "0", 0.01055908203125, [1436, 1437]], [524, ",", 0.026611328125, [1437, 1438]], [525, "sum", 0.0130615234375, [1438, 1441]], [526, "A", 0.008056640625, [1441, 1442]], [527, ");", 0.0234375, [1442, 1444]], [530, "find", 0.016845703125, [1452, 1457]], [531, "(", 0.047607421875, [1457, 1458]], [532, "B", 0.005401611328125, [1458, 1459]], [533, ",", 0.0283203125, [1459, 1460]], [534, "0", 0.0108642578125, [1460, 1461]], [535, ",", 0.0289306640625, [1461, 1462]], [536, "B", 0.005859375, [1462, 1463]], [537, ".", 0.08984375, [1463, 1464]], [538, "size", 0.0167236328125, [1464, 1468]], [539, "(),", 0.01495361328125, [1468, 1471]], [540, "0", 0.01141357421875, [1471, 1472]], [541, ",", 0.030517578125, [1472, 1473]], [542, "sum", 0.01483154296875, [1473, 1476]], [543, "B", 0.00634765625, [1476, 1477]], [544, ");", 0.027099609375, [1477, 1479]], [549, "sort", 0.015380859375, [1496, 1501]], [550, "(", 0.05126953125, [1501, 1502]], [551, "sum", 0.01507568359375, [1502, 1505]], [552, "A", 0.00927734375, [1505, 1506]], [553, ".", 0.091796875, [1506, 1507]], [554, "begin", 0.0255126953125, [1507, 1512]], [555, "(),", 0.0155029296875, [1512, 1515]], [556, "sum", 0.01513671875, [1515, 1518]], [557, "A", 0.009765625, [1518, 1519]], [558, ".", 0.09130859375, [1519, 1520]], [559, "end", 0.01495361328125, [1520, 1523]], [560, "());", 0.02099609375, [1523, 1527]], [565, "//", 0.01507568359375, [1545, 1548]], [566, "Step", 0.01251220703125, [1548, 1552]], [568, "3", 0.022216796875, [1553, 1554]], [569, ":", 0.02392578125, [1554, 1555]], [570, "Find", 0.0196533203125, [1555, 1560]], [571, "combinations", 0.02880859375, [1560, 1573]], [572, "from", 0.0198974609375, [1573, 1578]], [573, "sum", 0.0142822265625, [1578, 1582]], [574, "A", 0.00927734375, [1582, 1583]], [575, "&", 0.00421142578125, [1583, 1585]], [576, "sum", 0.01458740234375, [1585, 1589]], [577, "B", 0.005706787109375, [1589, 1590]], [578, "such", 0.0208740234375, [1590, 1595]], [579, "that", 0.0172119140625, [1595, 1600]], [580, "abs", 0.020751953125, [1600, 1604]], [581, "(", 0.05224609375, [1604, 1605]], [582, "sum", 0.01507568359375, [1605, 1608]], [583, "-", 0.03369140625, [1608, 1609]], [584, "go", 0.01507568359375, [1609, 1611]], [585, "al", 0.01043701171875, [1611, 1613]], [586, ")", 0.06689453125, [1613, 1614]], [587, "is", 0.014404296875, [1614, 1617]], [588, "minim", 0.019287109375, [1617, 1623]], [589, "ized", 0.01513671875, [1623, 1627]], [594, "int", 0.017578125, [1644, 1648]], [595, "an", 0.018310546875, [1648, 1651]], [596, "s", 0.01373291015625, [1651, 1652]], [597, "=", 0.0277099609375, [1652, 1653]], [598, "INT", 0.0135498046875, [1653, 1656]], [599, "_", 0.030029296875, [1656, 1657]], [600, "MAX", 0.0145263671875, [1657, 1660]], [601, ";", 0.0234375, [1660, 1661]], [606, "for", 0.0189208984375, [1678, 1682]], [607, "(", 0.053955078125, [1682, 1683]], [608, "int", 0.016357421875, [1683, 1686]], [609, "i", 0.0101318359375, [1686, 1688]], [610, "=", 0.02734375, [1688, 1689]], [611, "0", 0.0113525390625, [1689, 1690]], [612, ";", 0.023681640625, [1690, 1691]], [613, "i", 0.01141357421875, [1691, 1692]], [614, "<", 0.0111083984375, [1692, 1693]], [615, "sum", 0.0157470703125, [1693, 1696]], [616, "A", 0.01025390625, [1696, 1697]], [617, ".", 0.0947265625, [1697, 1698]], [618, "size", 0.017822265625, [1698, 1702]], [619, "();", 0.0224609375, [1702, 1705]], [620, "i", 0.01104736328125, [1705, 1706]], [621, "++", 0.016845703125, [1706, 1708]], [622, "){", 0.0277099609375, [1708, 1710]], [625, "int", 0.018310546875, [1722, 1726]], [626, "s", 0.01312255859375, [1726, 1728]], [627, "=", 0.029052734375, [1728, 1729]], [628, "sum", 0.0172119140625, [1729, 1732]], [629, "A", 0.01043701171875, [1732, 1733]], [630, "[", 0.0185546875, [1733, 1734]], [631, "i", 0.013671875, [1734, 1735]], [632, "];", 0.026611328125, [1735, 1737]], [635, "int", 0.0198974609375, [1749, 1753]], [636, "l", 0.01434326171875, [1753, 1755]], [637, "=", 0.0303955078125, [1755, 1756]], [638, "0", 0.0137939453125, [1756, 1757]], [639, ";", 0.0264892578125, [1757, 1758]], [642, "int", 0.018310546875, [1770, 1774]], [643, "r", 0.01458740234375, [1774, 1776]], [644, "=", 0.029296875, [1776, 1777]], [645, "sum", 0.017333984375, [1777, 1780]], [646, "B", 0.006591796875, [1780, 1781]], [647, ".", 0.10205078125, [1781, 1782]], [648, "size", 0.0191650390625, [1782, 1786]], [649, "()-", 0.0205078125, [1786, 1789]], [650, "1", 0.032958984375, [1789, 1790]], [651, ";", 0.025390625, [1790, 1791]], [654, "while", 0.033203125, [1803, 1809]], [655, "(", 0.06103515625, [1809, 1810]], [656, "l", 0.0078125, [1810, 1811]], [657, "<", 0.01373291015625, [1811, 1812]], [658, "=", 0.03271484375, [1812, 1813]], [659, "r", 0.0115966796875, [1813, 1814]], [660, "){", 0.03466796875, [1814, 1816]], [663, "int", 0.021240234375, [1832, 1836]], [664, "mid", 0.0216064453125, [1836, 1840]], [665, "=", 0.0341796875, [1840, 1841]], [666, "l", 0.01019287109375, [1841, 1842]], [667, "+", 0.0157470703125, [1842, 1843]], [668, "(", 0.064453125, [1843, 1844]], [669, "r", 0.01190185546875, [1844, 1845]], [670, "-", 0.03955078125, [1845, 1846]], [671, "l", 0.0084228515625, [1846, 1847]], [672, ")/", 0.0247802734375, [1847, 1849]], [673, "2", 0.038818359375, [1849, 1850]], [674, ";", 0.028564453125, [1850, 1851]], [677, "int", 0.020263671875, [1867, 1871]], [678, "sum", 0.020263671875, [1871, 1875]], [679, "=", 0.0361328125, [1875, 1876]], [680, "s", 0.0147705078125, [1876, 1877]], [681, "+", 0.01495361328125, [1877, 1878]], [682, "sum", 0.0194091796875, [1878, 1881]], [683, "B", 0.00732421875, [1881, 1882]], [684, "[", 0.021484375, [1882, 1883]], [685, "mid", 0.01531982421875, [1883, 1886]], [686, "];", 0.0322265625, [1886, 1888]], [689, "if", 0.0277099609375, [1904, 1907]], [690, "(", 0.0673828125, [1907, 1908]], [691, "sum", 0.0216064453125, [1908, 1911]], [692, "==", 0.03759765625, [1911, 1913]], [693, "go", 0.0198974609375, [1913, 1915]], [694, "al", 0.01446533203125, [1915, 1917]], [695, ")", 0.08154296875, [1917, 1918]], [698, "return", 0.033203125, [1938, 1945]], [700, "0", 0.013671875, [1946, 1947]], [701, ";", 0.031494140625, [1947, 1948]], [704, "an", 0.0247802734375, [1964, 1967]], [705, "s", 0.0164794921875, [1967, 1968]], [706, "=", 0.0400390625, [1968, 1969]], [707, "min", 0.01904296875, [1969, 1972]], [708, "(", 0.0712890625, [1972, 1973]], [709, "ans", 0.0240478515625, [1973, 1976]], [710, ",", 0.044921875, [1976, 1977]], [711, "abs", 0.0247802734375, [1977, 1980]], [712, "(", 0.07373046875, [1980, 1981]], [713, "sum", 0.02392578125, [1981, 1984]], [714, "-", 0.047607421875, [1984, 1985]], [715, "go", 0.023193359375, [1985, 1987]], [716, "al", 0.016357421875, [1987, 1989]], [717, "));", 0.04345703125, [1989, 1992]], [720, "if", 0.02880859375, [2008, 2011]], [721, "(", 0.07373046875, [2011, 2012]], [722, "sum", 0.0245361328125, [2012, 2015]], [723, ">", 0.0230712890625, [2015, 2016]], [724, "go", 0.021728515625, [2016, 2018]], [725, "al", 0.0146484375, [2018, 2020]], [726, "){", 0.043701171875, [2020, 2022]], [729, "r", 0.0211181640625, [2042, 2044]], [730, "=", 0.042236328125, [2044, 2045]], [731, "mid", 0.0196533203125, [2045, 2048]], [732, "-", 0.047607421875, [2048, 2049]], [733, "1", 0.04052734375, [2049, 2050]], [734, ";", 0.038818359375, [2050, 2051]], [737, "}", 0.04345703125, [2067, 2069]], [740, "else", 0.033447265625, [2085, 2090]], [741, "{", 0.042724609375, [2090, 2091]], [744, "l", 0.023193359375, [2111, 2113]], [745, "=", 0.050537109375, [2113, 2114]], [746, "mid", 0.021728515625, [2114, 2117]], [747, "+", 0.0203857421875, [2117, 2118]], [748, "1", 0.043212890625, [2118, 2119]], [749, ";", 0.0439453125, [2119, 2120]], [752, "}", 0.046142578125, [2136, 2138]], [756, "}", 0.048583984375, [2154, 2156]], [759, "}", 0.05029296875, [2164, 2166]], [764, "return", 0.0498046875, [2183, 2190]], [765, "an", 0.03662109375, [2190, 2193]], [766, "s", 0.024658203125, [2193, 2194]], [767, ";", 0.05517578125, [2194, 2195]], [770, "}", 0.052978515625, [2199, 2201]], [772, "};", 0.052001953125, [2202, 2204]]], "reading_last": [[79, "You", 0.130859375, [0, 3]], [80, "are", 0.12890625, [3, 7]], [81, "an", 0.251953125, [7, 10]], [82, "exception", 0.228515625, [10, 20]], [83, "ally", 0.2265625, [20, 24]], [84, "intelligent", 0.2041015625, [24, 36]], [85, "coding", 0.224609375, [36, 43]], [86, "assistant", 0.275390625, [43, 53]], [87, "that", 0.390625, [53, 58]], [88, "consistently", 0.26171875, [58, 71]], [89, "delivers", 0.28125, [71, 80]], [90, "accurate", 0.2294921875, [80, 89]], [91, "and", 0.251953125, [89, 93]], [92, "reliable", 0.26953125, [93, 102]], [93, "responses", 0.3046875, [102, 112]], [94, "to", 0.2294921875, [112, 115]], [95, "user", 0.1875, [115, 120]], [96, "instructions", 0.2041015625, [120, 133]], [97, ".", 0.11328125, [133, 134]], [101, "@", 0.00885009765625, [139, 141]], [102, "@", 0.00634765625, [141, 142]], [103, "Inst", 0.00787353515625, [142, 147]], [104, "ruction", 0.0150146484375, [147, 154]], [107, "You", 0.033447265625, [158, 162]], [108, "are", 0.005096435546875, [162, 166]], [109, "a", 0.003570556640625, [166, 168]], [110, "program", 0.0167236328125, [168, 176]], [111, "rep", 0.06494140625, [176, 180]], [112, "aire", 0.01385498046875, [180, 184]], [113, "r", 0.0093994140625, [184, 185]], [114, ".", 0.01177978515625, [185, 186]], [115, "Please", 0.00848388671875, [186, 193]], [116, "repair", 0.01483154296875, [193, 200]], [117, "the", 0.00653076171875, [200, 204]], [118, "following", 0.003143310546875, [204, 214]], [119, "bug", 0.007781982421875, [214, 218]], [120, "gy", 0.0028533935546875, [218, 220]], [121, "program", 0.00799560546875, [220, 228]], [122, ".", 0.007537841796875, [228, 229]], [123, "You", 0.013427734375, [229, 233]], [124, "are", 0.001556396484375, [233, 237]], [125, "given", 0.00347900390625, [237, 243]], [126, "an", 0.0033416748046875, [243, 246]], [127, "integer", 0.002838134765625, [246, 254]], [128, "array", 0.005096435546875, [254, 260]], [129, "num", 0.0111083984375, [260, 264]], [130, "s", 0.006195068359375, [264, 265]], [131, "and", 0.0027008056640625, [265, 269]], [132, "an", 0.0025787353515625, [269, 272]], [133, "integer", 0.00238037109375, [272, 280]], [134, "goal", 0.00738525390625, [280, 285]], [135, ".", 0.01287841796875, [285, 286]], [137, "You", 0.004547119140625, [287, 290]], [138, "want", 0.0025634765625, [290, 295]], [139, "to", 0.00286865234375, [295, 298]], [140, "choose", 0.0033416748046875, [298, 305]], [141, "a", 0.0014801025390625, [305, 307]], [142, "subsequ", 0.033203125, [307, 315]], [143, "ence", 0.00872802734375, [315, 319]], [144, "of", 0.00469970703125, [319, 322]], [145, "num", 0.0040283203125, [322, 326]], [146, "s", 0.00201416015625, [326, 327]], [147, "such", 0.002166748046875, [327, 332]], [148, "that", 0.001190185546875, [332, 337]], [149, "the", 0.0019989013671875, [337, 341]], [150, "sum", 0.004364013671875, [341, 345]], [151, "of", 0.0026702880859375, [345, 348]], [152, "its", 0.001220703125, [348, 352]], [153, "elements", 0.00433349609375, [352, 361]], [154, "is", 0.0006561279296875, [361, 364]], [155, "the", 0.00136566162109375, [364, 368]], [156, "closest", 0.0030517578125, [368, 376]], [157, "possible", 0.00193023681640625, [376, 385]], [158, "to", 0.00299072265625, [385, 388]], [159, "goal", 0.002716064453125, [388, 393]], [160, ".", 0.004119873046875, [393, 394]], [161, "That", 0.00133514404296875, [394, 399]], [162, "is", 0.00069427490234375, [399, 402]], [163, ",", 0.0017242431640625, [402, 403]], [164, "if", 0.00168609619140625, [403, 406]], [165, "the", 0.0029296875, [406, 410]], [166, "sum", 0.00341796875, [410, 414]], [167, "of", 0.00156402587890625, [414, 417]], [168, "the", 0.00194549560546875, [417, 421]], [169, "subsequ", 0.0115966796875, [421, 429]], [170, "ence", 0.0036468505859375, [429, 433]], [171, "'", 0.0020294189453125, [433, 434]], [172, "s", 0.00159454345703125, [434, 435]], [173, "elements", 0.0028533935546875, [435, 444]], [174, "is", 0.0002460479736328125, [444, 447]], [175, "sum", 0.002349853515625, [447, 451]], [176, ",", 0.00078582763671875, [451, 452]], [177, "then", 0.0009002685546875, [452, 457]], [178, "you", 0.0078125, [457, 461]], [179, "want", 0.0004673004150390625, [461, 466]], [180, "to", 0.00054931640625, [466, 469]], [181, "minimize", 0.0026702880859375, [469, 478]], [182, "the", 0.001861572265625, [478, 482]], [183, "absolute", 0.0068359375, [482, 491]], [184, "difference", 0.0185546875, [491, 502]], [185, "abs", 0.004913330078125, [502, 506]], [186, "(", 0.002716064453125, [506, 507]], [187, "sum", 0.00653076171875, [507, 510]], [188, "-", 0.00121307373046875, [510, 512]], [189, "goal", 0.007110595703125, [512, 517]], [190, ").", 0.0022735595703125, [517, 519]], [192, "Return", 0.0028533935546875, [520, 526]], [193, "the", 0.004974365234375, [526, 530]], [194, "minimum", 0.0014495849609375, [530, 538]], [195, "possible", 0.00201416015625, [538, 547]], [196, "value", 0.00433349609375, [547, 553]], [197, "of", 0.0025177001953125, [553, 556]], [198, "abs", 0.009521484375, [556, 560]], [199, "(", 0.0019073486328125, [560, 561]], [200, "sum", 0.001220703125, [561, 564]], [201, "-", 0.002105712890625, [564, 566]], [202, "goal", 0.00177764892578125, [566, 571]], [203, ").", 0.00103759765625, [571, 573]], [205, "Note", 0.0022125244140625, [574, 578]], [206, "that", 0.00174713134765625, [578, 583]], [207, "a", 0.0028533935546875, [583, 585]], [208, "subsequ", 0.02734375, [585, 593]], [209, "ence", 0.0086669921875, [593, 597]], [210, "of", 0.0045166015625, [597, 600]], [211, "an", 0.00262451171875, [600, 603]], [212, "array", 0.00604248046875, [603, 609]], [213, "is", 0.00144195556640625, [609, 612]], [214, "an", 0.00160980224609375, [612, 615]], [215, "array", 0.004241943359375, [615, 621]], [216, "formed", 0.006500244140625, [621, 628]], [217, "by", 0.001953125, [628, 631]], [218, "removing", 0.0031890869140625, [631, 640]], [219, "some", 0.00174713134765625, [640, 645]], [220, "elements", 0.00396728515625, [645, 654]], [221, "(", 0.0013275146484375, [654, 656]], [222, "poss", 0.0264892578125, [656, 660]], [223, "ibly", 0.0030517578125, [660, 664]], [224, "all", 0.002532958984375, [664, 668]], [225, "or", 0.002593994140625, [668, 671]], [226, "none", 0.002349853515625, [671, 676]], [227, ")", 0.0002956390380859375, [676, 677]], [228, "of", 0.00084686279296875, [677, 680]], [229, "the", 0.00160980224609375, [680, 684]], [230, "original", 0.004425048828125, [684, 693]], [231, "array", 0.0030670166015625, [693, 699]], [232, ".", 0.0023193359375, [699, 700]], [233, "B", 0.0020904541015625, [700, 701]], [234, "ug", 0.00714111328125, [701, 703]], [235, "gy", 0.0025787353515625, [703, 705]], [236, "code", 0.0081787109375, [705, 710]], [237, ":", 0.00159454345703125, [710, 712]], [238, "class", 0.00286865234375, [712, 718]], [239, "S", 0.0033721923828125, [718, 720]], [240, "olution", 0.0069580078125, [720, 727]], [241, "{", 0.003509521484375, [727, 729]], [243, "public", 0.006256103515625, [730, 736]], [244, ":", 0.002105712890625, [736, 737]], [247, "void", 0.01068115234375, [741, 746]], [248, "find", 0.003997802734375, [746, 751]], [249, "(", 0.0020599365234375, [751, 752]], [250, "vector", 0.004302978515625, [752, 758]], [251, "<", 0.0025482177734375, [758, 759]], [252, "int", 0.01171875, [759, 762]], [253, ">", 0.00083160400390625, [762, 763]], [254, "&", 0.00225830078125, [763, 764]], [255, "v", 0.010009765625, [764, 765]], [256, ",", 0.000873565673828125, [765, 766]], [257, "int", 0.0025787353515625, [766, 770]], [258, "i", 0.0024871826171875, [770, 772]], [259, ",", 0.00099945068359375, [772, 773]], [260, "int", 0.00238037109375, [773, 777]], [261, "e", 0.002593994140625, [777, 779]], [262, ",", 0.000934600830078125, [779, 780]], [263, "int", 0.0022430419921875, [780, 784]], [264, "sum", 0.0113525390625, [784, 788]], [265, ",", 0.00177001953125, [788, 789]], [266, "vector", 0.0059814453125, [789, 796]], [267, "<", 0.00457763671875, [796, 797]], [268, "int", 0.00173187255859375, [797, 800]], [269, ">", 0.0003566741943359375, [800, 801]], [270, "&", 0.0020751953125, [801, 802]], [271, "sum", 0.006927490234375, [802, 805]], [272, "v", 0.021728515625, [805, 806]], [273, "){", 0.00299072265625, [806, 808]], [276, "if", 0.006256103515625, [816, 819]], [277, "(", 0.003662109375, [819, 820]], [278, "i", 0.002838134765625, [820, 821]], [279, "==", 0.0021514892578125, [821, 823]], [280, "e", 0.0032196044921875, [823, 824]], [281, "){", 0.002410888671875, [824, 826]], [284, "sum", 0.00732421875, [838, 842]], [285, "v", 0.01239013671875, [842, 843]], [286, ".", 0.00726318359375, [843, 844]], [287, "push", 0.01458740234375, [844, 848]], [288, "_", 0.01141357421875, [848, 849]], [289, "back", 0.0281982421875, [849, 853]], [290, "(", 0.0011138916015625, [853, 854]], [291, "sum", 0.0028228759765625, [854, 857]], [292, ");", 0.00213623046875, [857, 859]], [295, "return", 0.003326416015625, [871, 878]], [296, ";", 0.0020599365234375, [878, 879]], [299, "}", 0.0026092529296875, [887, 889]], [302, "find", 0.0106201171875, [897, 902]], [303, "(", 0.002593994140625, [902, 903]], [304, "v", 0.0068359375, [903, 904]], [305, ",", 0.001495361328125, [904, 905]], [306, "i", 0.0023345947265625, [905, 906]], [307, "+", 0.00238037109375, [906, 907]], [308, "1", 0.003662109375, [907, 908]], [309, ",", 0.00128936767578125, [908, 909]], [310, "e", 0.0030517578125, [909, 910]], [311, ",", 0.000881195068359375, [910, 911]], [312, "sum", 0.0032806396484375, [911, 914]], [313, "+", 0.0021209716796875, [914, 915]], [314, "v", 0.005950927734375, [915, 916]], [315, "[", 0.00102996826171875, [916, 917]], [316, "i", 0.00164031982421875, [917, 918]], [317, "],", 0.00156402587890625, [918, 920]], [318, "sum", 0.00116729736328125, [920, 923]], [319, "v", 0.0037078857421875, [923, 924]], [320, ");", 0.000545501708984375, [924, 926]], [323, "find", 0.00157928466796875, [934, 939]], [324, "(", 0.000396728515625, [939, 940]], [325, "v", 0.000926971435546875, [940, 941]], [326, ",", 0.000286102294921875, [941, 942]], [327, "i", 0.000568389892578125, [942, 943]], [328, "+", 0.00025177001953125, [943, 944]], [329, "1", 0.0002384185791015625, [944, 945]], [330, ",", 0.0003070831298828125, [945, 946]], [331, "e", 0.0005645751953125, [946, 947]], [332, ",", 0.0004062652587890625, [947, 948]], [333, "sum", 0.0015106201171875, [948, 951]], [334, ",", 0.000896453857421875, [951, 952]], [335, "sum", 0.0019378662109375, [952, 955]], [336, "v", 0.0045166015625, [955, 956]], [337, ");", 0.0003643035888671875, [956, 958]], [340, "}", 0.0019683837890625, [962, 964]], [347, "int", 0.01141357421875, [982, 986]], [348, "min", 0.0098876953125, [986, 990]], [349, "Abs", 0.041015625, [990, 993]], [350, "Diff", 0.02978515625, [993, 997]], [351, "erence", 0.00921630859375, [997, 1003]], [352, "(", 0.0021820068359375, [1003, 1004]], [353, "vector", 0.00970458984375, [1004, 1010]], [354, "<", 0.00186920166015625, [1010, 1011]], [355, "int", 0.00127410888671875, [1011, 1014]], [356, ">", 0.0003414154052734375, [1014, 1015]], [357, "&", 0.0025787353515625, [1015, 1016]], [358, "num", 0.008056640625, [1016, 1020]], [359, "s", 0.006317138671875, [1020, 1021]], [360, ",", 0.002105712890625, [1021, 1022]], [361, "int", 0.0029449462890625, [1022, 1026]], [362, "goal", 0.032470703125, [1026, 1031]], [363, ")", 0.0026702880859375, [1031, 1032]], [364, "{", 0.00165557861328125, [1032, 1034]], [367, "int", 0.005584716796875, [1042, 1046]], [368, "n", 0.00537109375, [1046, 1048]], [369, "=", 0.002197265625, [1048, 1049]], [370, "num", 0.00543212890625, [1049, 1052]], [371, "s", 0.003570556640625, [1052, 1053]], [372, ".", 0.019287109375, [1053, 1054]], [373, "size", 0.00157928466796875, [1054, 1058]], [374, "();", 0.001983642578125, [1058, 1061]], [379, "//", 0.002593994140625, [1078, 1081]], [380, "Step", 0.004852294921875, [1081, 1085]], [382, "1", 0.0034332275390625, [1086, 1087]], [383, ":", 0.004791259765625, [1087, 1088]], [384, "Div", 0.0235595703125, [1088, 1092]], [385, "ide", 0.05419921875, [1092, 1095]], [386, "num", 0.01007080078125, [1095, 1099]], [387, "s", 0.00860595703125, [1099, 1100]], [388, "into", 0.006683349609375, [1100, 1105]], [390, "2", 0.005218505859375, [1106, 1107]], [391, "sub", 0.10595703125, [1107, 1111]], [392, "arr", 0.2119140625, [1111, 1114]], [393, "ays", 0.0341796875, [1114, 1117]], [394, "of", 0.0048828125, [1117, 1120]], [395, "size", 0.00433349609375, [1120, 1125]], [396, "n", 0.00408935546875, [1125, 1127]], [397, "/", 0.006744384765625, [1127, 1128]], [398, "2", 0.002655029296875, [1128, 1129]], [399, "and", 0.00286865234375, [1129, 1133]], [400, "n", 0.0019683837890625, [1133, 1135]], [401, "-", 0.00408935546875, [1135, 1136]], [402, "n", 0.0020904541015625, [1136, 1137]], [403, "/", 0.00061798095703125, [1137, 1138]], [404, "2", 0.000518798828125, [1138, 1139]], [409, "vector", 0.01226806640625, [1156, 1163]], [410, "<", 0.0019989013671875, [1163, 1164]], [411, "int", 0.00147247314453125, [1164, 1167]], [412, ">", 0.000354766845703125, [1167, 1168]], [413, "A", 0.0079345703125, [1168, 1169]], [414, ",", 0.0052490234375, [1169, 1170]], [415, "B", 0.01141357421875, [1170, 1171]], [416, ";", 0.003814697265625, [1171, 1172]], [419, "for", 0.00732421875, [1180, 1184]], [420, "(", 0.003143310546875, [1184, 1185]], [421, "int", 0.0029144287109375, [1185, 1188]], [422, "i", 0.00372314453125, [1188, 1190]], [423, "=", 0.0021514892578125, [1190, 1191]], [424, "0", 0.00101470947265625, [1191, 1192]], [425, ";", 0.0019073486328125, [1192, 1193]], [426, "i", 0.0019683837890625, [1193, 1194]], [427, "<", 0.00154876708984375, [1194, 1195]], [428, "n", 0.0032806396484375, [1195, 1196]], [429, "/", 0.00101470947265625, [1196, 1197]], [430, "2", 0.0023193359375, [1197, 1198]], [431, ";", 0.00136566162109375, [1198, 1199]], [432, "i", 0.00133514404296875, [1199, 1200]], [433, "++", 0.00099945068359375, [1200, 1202]], [434, ")", 0.000759124755859375, [1202, 1203]], [437, "A", 0.0159912109375, [1215, 1217]], [438, ".", 0.007537841796875, [1217, 1218]], [439, "push", 0.0216064453125, [1218, 1222]], [440, "_", 0.01904296875, [1222, 1223]], [441, "back", 0.0311279296875, [1223, 1227]], [442, "(", 0.004364013671875, [1227, 1228]], [443, "num", 0.00823974609375, [1228, 1231]], [444, "s", 0.0079345703125, [1231, 1232]], [445, "[", 0.00177001953125, [1232, 1233]], [446, "i", 0.00109100341796875, [1233, 1234]], [447, "]);", 0.0028533935546875, [1234, 1237]], [450, "for", 0.003509521484375, [1245, 1249]], [451, "(", 0.0009918212890625, [1249, 1250]], [452, "int", 0.0030670166015625, [1250, 1253]], [453, "i", 0.0022430419921875, [1253, 1255]], [454, "=", 0.0003681182861328125, [1255, 1256]], [455, "n", 0.001953125, [1256, 1257]], [456, "/", 0.0004177093505859375, [1257, 1258]], [457, "2", 0.0011444091796875, [1258, 1259]], [458, ";", 0.0008544921875, [1259, 1260]], [459, "i", 0.0016021728515625, [1260, 1261]], [460, "<", 0.001983642578125, [1261, 1262]], [461, "n", 0.001007080078125, [1262, 1263]], [462, ";", 0.00173187255859375, [1263, 1264]], [463, "i", 0.00145721435546875, [1264, 1265]], [464, "++", 0.00116729736328125, [1265, 1267]], [465, ")", 0.000637054443359375, [1267, 1268]], [468, "B", 0.035888671875, [1280, 1282]], [469, ".", 0.0016326904296875, [1282, 1283]], [470, "push", 0.004364013671875, [1283, 1287]], [471, "_", 0.002288818359375, [1287, 1288]], [472, "back", 0.0108642578125, [1288, 1292]], [473, "(", 0.00139617919921875, [1292, 1293]], [474, "num", 0.0026092529296875, [1293, 1296]], [475, "s", 0.002288818359375, [1296, 1297]], [476, "[", 0.00051116943359375, [1297, 1298]], [477, "i", 0.0004425048828125, [1298, 1299]], [478, "]);", 0.0009765625, [1299, 1302]], [483, "//", 0.0029449462890625, [1319, 1322]], [484, "Step", 0.0027618408203125, [1322, 1326]], [486, "2", 0.00323486328125, [1327, 1328]], [487, ":", 0.00445556640625, [1328, 1329]], [488, "Find", 0.009765625, [1329, 1334]], [489, "all", 0.00994873046875, [1334, 1338]], [490, "possible", 0.01324462890625, [1338, 1347]], [491, "subset", 0.0159912109375, [1347, 1354]], [492, "sums", 0.013671875, [1354, 1359]], [493, "of", 0.001861572265625, [1359, 1362]], [494, "A", 0.014892578125, [1362, 1364]], [495, "and", 0.007720947265625, [1364, 1368]], [496, "B", 0.006072998046875, [1368, 1370]], [501, "vector", 0.00872802734375, [1387, 1394]], [502, "<", 0.001556396484375, [1394, 1395]], [503, "int", 0.0018768310546875, [1395, 1398]], [504, ">", 0.000782012939453125, [1398, 1399]], [505, "sum", 0.00640869140625, [1399, 1402]], [506, "A", 0.01312255859375, [1402, 1403]], [507, ",", 0.004791259765625, [1403, 1404]], [508, "sum", 0.00604248046875, [1404, 1407]], [509, "B", 0.033935546875, [1407, 1408]], [510, ";", 0.0028076171875, [1408, 1409]], [513, "find", 0.01251220703125, [1417, 1422]], [514, "(", 0.01129150390625, [1422, 1423]], [515, "A", 0.01287841796875, [1423, 1424]], [516, ",", 0.005126953125, [1424, 1425]], [517, "0", 0.00433349609375, [1425, 1426]], [518, ",", 0.00171661376953125, [1426, 1427]], [519, "A", 0.00726318359375, [1427, 1428]], [520, ".", 0.015380859375, [1428, 1429]], [521, "size", 0.0040283203125, [1429, 1433]], [522, "(),", 0.0032196044921875, [1433, 1436]], [523, "0", 0.0009307861328125, [1436, 1437]], [524, ",", 0.000759124755859375, [1437, 1438]], [525, "sum", 0.00555419921875, [1438, 1441]], [526, "A", 0.00836181640625, [1441, 1442]], [527, ");", 0.0023956298828125, [1442, 1444]], [530, "find", 0.003936767578125, [1452, 1457]], [531, "(", 0.0007476806640625, [1457, 1458]], [532, "B", 0.006439208984375, [1458, 1459]], [533, ",", 0.0009918212890625, [1459, 1460]], [534, "0", 0.00051116943359375, [1460, 1461]], [535, ",", 0.00069427490234375, [1461, 1462]], [536, "B", 0.004486083984375, [1462, 1463]], [537, ".", 0.002960205078125, [1463, 1464]], [538, "size", 0.0018463134765625, [1464, 1468]], [539, "(),", 0.000904083251953125, [1468, 1471]], [540, "0", 0.000835418701171875, [1471, 1472]], [541, ",", 0.000621795654296875, [1472, 1473]], [542, "sum", 0.004058837890625, [1473, 1476]], [543, "B", 0.007354736328125, [1476, 1477]], [544, ");", 0.00177764892578125, [1477, 1479]], [549, "sort", 0.01123046875, [1496, 1501]], [550, "(", 0.003021240234375, [1501, 1502]], [551, "sum", 0.010498046875, [1502, 1505]], [552, "A", 0.01806640625, [1505, 1506]], [553, ".", 0.01177978515625, [1506, 1507]], [554, "begin", 0.00628662109375, [1507, 1512]], [555, "(),", 0.0045166015625, [1512, 1515]], [556, "sum", 0.005615234375, [1515, 1518]], [557, "A", 0.005767822265625, [1518, 1519]], [558, ".", 0.003753662109375, [1519, 1520]], [559, "end", 0.0042724609375, [1520, 1523]], [560, "());", 0.00518798828125, [1523, 1527]], [565, "//", 0.00830078125, [1545, 1548]], [566, "Step", 0.00909423828125, [1548, 1552]], [568, "3", 0.006988525390625, [1553, 1554]], [569, ":", 0.0074462890625, [1554, 1555]], [570, "Find", 0.01275634765625, [1555, 1560]], [571, "combinations", 0.06005859375, [1560, 1573]], [572, "from", 0.0157470703125, [1573, 1578]], [573, "sum", 0.0238037109375, [1578, 1582]], [574, "A", 0.0250244140625, [1582, 1583]], [575, "&", 0.0115966796875, [1583, 1585]], [576, "sum", 0.02978515625, [1585, 1589]], [577, "B", 0.029052734375, [1589, 1590]], [578, "such", 0.01806640625, [1590, 1595]], [579, "that", 0.006317138671875, [1595, 1600]], [580, "abs", 0.064453125, [1600, 1604]], [581, "(", 0.01214599609375, [1604, 1605]], [582, "sum", 0.0072021484375, [1605, 1608]], [583, "-", 0.01953125, [1608, 1609]], [584, "go", 0.01324462890625, [1609, 1611]], [585, "al", 0.026123046875, [1611, 1613]], [586, ")", 0.006439208984375, [1613, 1614]], [587, "is", 0.0050048828125, [1614, 1617]], [588, "minim", 0.0238037109375, [1617, 1623]], [589, "ized", 0.004608154296875, [1623, 1627]], [594, "int", 0.018798828125, [1644, 1648]], [595, "an", 0.03564453125, [1648, 1651]], [596, "s", 0.03369140625, [1651, 1652]], [597, "=", 0.00933837890625, [1652, 1653]], [598, "INT", 0.017822265625, [1653, 1656]], [599, "_", 0.0260009765625, [1656, 1657]], [600, "MAX", 0.02587890625, [1657, 1660]], [601, ";", 0.0052490234375, [1660, 1661]], [606, "for", 0.013671875, [1678, 1682]], [607, "(", 0.003326416015625, [1682, 1683]], [608, "int", 0.0126953125, [1683, 1686]], [609, "i", 0.0142822265625, [1686, 1688]], [610, "=", 0.00335693359375, [1688, 1689]], [611, "0", 0.003326416015625, [1689, 1690]], [612, ";", 0.002838134765625, [1690, 1691]], [613, "i", 0.0074462890625, [1691, 1692]], [614, "<", 0.003662109375, [1692, 1693]], [615, "sum", 0.01165771484375, [1693, 1696]], [616, "A", 0.062255859375, [1696, 1697]], [617, ".", 0.00616455078125, [1697, 1698]], [618, "size", 0.00262451171875, [1698, 1702]], [619, "();", 0.0024871826171875, [1702, 1705]], [620, "i", 0.002685546875, [1705, 1706]], [621, "++", 0.0042724609375, [1706, 1708]], [622, "){", 0.0050048828125, [1708, 1710]], [625, "int", 0.013427734375, [1722, 1726]], [626, "s", 0.016357421875, [1726, 1728]], [627, "=", 0.0040283203125, [1728, 1729]], [628, "sum", 0.0125732421875, [1729, 1732]], [629, "A", 0.03173828125, [1732, 1733]], [630, "[", 0.007659912109375, [1733, 1734]], [631, "i", 0.0040283203125, [1734, 1735]], [632, "];", 0.0036163330078125, [1735, 1737]], [635, "int", 0.01953125, [1749, 1753]], [636, "l", 0.035400390625, [1753, 1755]], [637, "=", 0.00994873046875, [1755, 1756]], [638, "0", 0.01123046875, [1756, 1757]], [639, ";", 0.00421142578125, [1757, 1758]], [642, "int", 0.0146484375, [1770, 1774]], [643, "r", 0.032470703125, [1774, 1776]], [644, "=", 0.00238037109375, [1776, 1777]], [645, "sum", 0.00982666015625, [1777, 1780]], [646, "B", 0.059326171875, [1780, 1781]], [647, ".", 0.01043701171875, [1781, 1782]], [648, "size", 0.00384521484375, [1782, 1786]], [649, "()-", 0.006378173828125, [1786, 1789]], [650, "1", 0.005645751953125, [1789, 1790]], [651, ";", 0.0035247802734375, [1790, 1791]], [654, "while", 0.0130615234375, [1803, 1809]], [655, "(", 0.005126953125, [1809, 1810]], [656, "l", 0.00408935546875, [1810, 1811]], [657, "<", 0.00201416015625, [1811, 1812]], [658, "=", 0.00115966796875, [1812, 1813]], [659, "r", 0.0091552734375, [1813, 1814]], [660, "){", 0.00604248046875, [1814, 1816]], [663, "int", 0.01434326171875, [1832, 1836]], [664, "mid", 0.07177734375, [1836, 1840]], [665, "=", 0.005889892578125, [1840, 1841]], [666, "l", 0.0091552734375, [1841, 1842]], [667, "+", 0.00738525390625, [1842, 1843]], [668, "(", 0.00628662109375, [1843, 1844]], [669, "r", 0.0106201171875, [1844, 1845]], [670, "-", 0.004364013671875, [1845, 1846]], [671, "l", 0.004730224609375, [1846, 1847]], [672, ")/", 0.005035400390625, [1847, 1849]], [673, "2", 0.0024566650390625, [1849, 1850]], [674, ";", 0.002044677734375, [1850, 1851]], [677, "int", 0.00628662109375, [1867, 1871]], [678, "sum", 0.03564453125, [1871, 1875]], [679, "=", 0.00151824951171875, [1875, 1876]], [680, "s", 0.005462646484375, [1876, 1877]], [681, "+", 0.00390625, [1877, 1878]], [682, "sum", 0.01416015625, [1878, 1881]], [683, "B", 0.0294189453125, [1881, 1882]], [684, "[", 0.00390625, [1882, 1883]], [685, "mid", 0.00994873046875, [1883, 1886]], [686, "];", 0.0026397705078125, [1886, 1888]], [689, "if", 0.01031494140625, [1904, 1907]], [690, "(", 0.004180908203125, [1907, 1908]], [691, "sum", 0.006317138671875, [1908, 1911]], [692, "==", 0.005462646484375, [1911, 1913]], [693, "go", 0.022705078125, [1913, 1915]], [694, "al", 0.025146484375, [1915, 1917]], [695, ")", 0.00689697265625, [1917, 1918]], [698, "return", 0.01953125, [1938, 1945]], [700, "0", 0.004150390625, [1946, 1947]], [701, ";", 0.003631591796875, [1947, 1948]], [704, "an", 0.039306640625, [1964, 1967]], [705, "s", 0.034423828125, [1967, 1968]], [706, "=", 0.0020599365234375, [1968, 1969]], [707, "min", 0.0130615234375, [1969, 1972]], [708, "(", 0.0091552734375, [1972, 1973]], [709, "ans", 0.01953125, [1973, 1976]], [710, ",", 0.00421142578125, [1976, 1977]], [711, "abs", 0.032470703125, [1977, 1980]], [712, "(", 0.00421142578125, [1980, 1981]], [713, "sum", 0.006103515625, [1981, 1984]], [714, "-", 0.005157470703125, [1984, 1985]], [715, "go", 0.0093994140625, [1985, 1987]], [716, "al", 0.008544921875, [1987, 1989]], [717, "));", 0.012939453125, [1989, 1992]], [720, "if", 0.0111083984375, [2008, 2011]], [721, "(", 0.003814697265625, [2011, 2012]], [722, "sum", 0.0078125, [2012, 2015]], [723, ">", 0.00518798828125, [2015, 2016]], [724, "go", 0.0205078125, [2016, 2018]], [725, "al", 0.01226806640625, [2018, 2020]], [726, "){", 0.01025390625, [2020, 2022]], [729, "r", 0.016357421875, [2042, 2044]], [730, "=", 0.0028839111328125, [2044, 2045]], [731, "mid", 0.0177001953125, [2045, 2048]], [732, "-", 0.0186767578125, [2048, 2049]], [733, "1", 0.01446533203125, [2049, 2050]], [734, ";", 0.0035400390625, [2050, 2051]], [737, "}", 0.0120849609375, [2067, 2069]], [740, "else", 0.0213623046875, [2085, 2090]], [741, "{", 0.00665283203125, [2090, 2091]], [744, "l", 0.0166015625, [2111, 2113]], [745, "=", 0.00323486328125, [2113, 2114]], [746, "mid", 0.00982666015625, [2114, 2117]], [747, "+", 0.004547119140625, [2117, 2118]], [748, "1", 0.0081787109375, [2118, 2119]], [749, ";", 0.0023345947265625, [2119, 2120]], [752, "}", 0.01116943359375, [2136, 2138]], [756, "}", 0.0771484375, [2154, 2156]], [759, "}", 0.03759765625, [2164, 2166]], [764, "return", 0.0303955078125, [2183, 2190]], [765, "an", 0.057861328125, [2190, 2193]], [766, "s", 0.03369140625, [2193, 2194]], [767, ";", 0.01141357421875, [2194, 2195]], [770, "}", 0.03515625, [2199, 2201]], [772, "};", 0.0257568359375, [2202, 2204]]], "reading_all": [[79, "You", 0.48046875, [0, 3]], [80, "are", 0.455078125, [3, 7]], [81, "an", 0.56640625, [7, 10]], [82, "exception", 0.73828125, [10, 20]], [83, "ally", 0.640625, [20, 24]], [84, "intelligent", 0.64453125, [24, 36]], [85, "coding", 0.7265625, [36, 43]], [86, "assistant", 0.77734375, [43, 53]], [87, "that", 0.86328125, [53, 58]], [88, "consistently", 0.75390625, [58, 71]], [89, "delivers", 0.7578125, [71, 80]], [90, "accurate", 0.61328125, [80, 89]], [91, "and", 0.515625, [89, 93]], [92, "reliable", 0.5625, [93, 102]], [93, "responses", 0.6484375, [102, 112]], [94, "to", 0.416015625, [112, 115]], [95, "user", 0.427734375, [115, 120]], [96, "instructions", 0.4921875, [120, 133]], [97, ".", 0.32421875, [133, 134]], [101, "@", 0.1884765625, [139, 141]], [102, "@", 0.16796875, [141, 142]], [103, "Inst", 0.50390625, [142, 147]], [104, "ruction", 1.6640625, [147, 154]], [107, "You", 0.345703125, [158, 162]], [108, "are", 0.298828125, [162, 166]], [109, "a", 0.2412109375, [166, 168]], [110, "program", 0.5234375, [168, 176]], [111, "rep", 3.71875, [176, 180]], [112, "aire", 2.109375, [180, 184]], [113, "r", 0.4296875, [184, 185]], [114, ".", 0.2109375, [185, 186]], [115, "Please", 0.318359375, [186, 193]], [116, "repair", 0.74609375, [193, 200]], [117, "the", 0.1904296875, [200, 204]], [118, "following", 0.181640625, [204, 214]], [119, "bug", 0.263671875, [214, 218]], [120, "gy", 0.1435546875, [218, 220]], [121, "program", 0.2890625, [220, 228]], [122, ".", 0.15625, [228, 229]], [123, "You", 0.142578125, [229, 233]], [124, "are", 0.1259765625, [233, 237]], [125, "given", 0.177734375, [237, 243]], [126, "an", 0.12353515625, [243, 246]], [127, "integer", 0.1962890625, [246, 254]], [128, "array", 0.1943359375, [254, 260]], [129, "num", 0.166015625, [260, 264]], [130, "s", 0.1591796875, [264, 265]], [131, "and", 0.11181640625, [265, 269]], [132, "an", 0.08642578125, [269, 272]], [133, "integer", 0.12353515625, [272, 280]], [134, "goal", 0.1435546875, [280, 285]], [135, ".", 0.1376953125, [285, 286]], [137, "You", 0.0986328125, [287, 290]], [138, "want", 0.10400390625, [290, 295]], [139, "to", 0.08544921875, [295, 298]], [140, "choose", 0.10009765625, [298, 305]], [141, "a", 0.0830078125, [305, 307]], [142, "subsequ", 0.349609375, [307, 315]], [143, "ence", 0.28515625, [315, 319]], [144, "of", 0.1513671875, [319, 322]], [145, "num", 0.13671875, [322, 326]], [146, "s", 0.10498046875, [326, 327]], [147, "such", 0.0830078125, [327, 332]], [148, "that", 0.0673828125, [332, 337]], [149, "the", 0.05712890625, [337, 341]], [150, "sum", 0.13671875, [341, 345]], [151, "of", 0.1171875, [345, 348]], [152, "its", 0.12255859375, [348, 352]], [153, "elements", 0.1689453125, [352, 361]], [154, "is", 0.08251953125, [361, 364]], [155, "the", 0.0771484375, [364, 368]], [156, "closest", 0.16015625, [368, 376]], [157, "possible", 0.171875, [376, 385]], [158, "to", 0.09326171875, [385, 388]], [159, "goal", 0.130859375, [388, 393]], [160, ".", 0.1396484375, [393, 394]], [161, "That", 0.10595703125, [394, 399]], [162, "is", 0.0908203125, [399, 402]], [163, ",", 0.09375, [402, 403]], [164, "if", 0.12451171875, [403, 406]], [165, "the", 0.07861328125, [406, 410]], [166, "sum", 0.146484375, [410, 414]], [167, "of", 0.10791015625, [414, 417]], [168, "the", 0.07275390625, [417, 421]], [169, "subsequ", 0.17578125, [421, 429]], [170, "ence", 0.1875, [429, 433]], [171, "'", 0.07470703125, [433, 434]], [172, "s", 0.0830078125, [434, 435]], [173, "elements", 0.12451171875, [435, 444]], [174, "is", 0.058837890625, [444, 447]], [175, "sum", 0.115234375, [447, 451]], [176, ",", 0.07861328125, [451, 452]], [177, "then", 0.08251953125, [452, 457]], [178, "you", 0.08984375, [457, 461]], [179, "want", 0.09912109375, [461, 466]], [180, "to", 0.07470703125, [466, 469]], [181, "minimize", 0.1650390625, [469, 478]], [182, "the", 0.0888671875, [478, 482]], [183, "absolute", 0.1708984375, [482, 491]], [184, "difference", 0.19140625, [491, 502]], [185, "abs", 0.279296875, [502, 506]], [186, "(", 0.150390625, [506, 507]], [187, "sum", 0.16796875, [507, 510]], [188, "-", 0.142578125, [510, 512]], [189, "goal", 0.1591796875, [512, 517]], [190, ").", 0.11669921875, [517, 519]], [192, "Return", 0.2470703125, [520, 526]], [193, "the", 0.1103515625, [526, 530]], [194, "minimum", 0.142578125, [530, 538]], [195, "possible", 0.126953125, [538, 547]], [196, "value", 0.10498046875, [547, 553]], [197, "of", 0.07666015625, [553, 556]], [198, "abs", 0.1845703125, [556, 560]], [199, "(", 0.107421875, [560, 561]], [200, "sum", 0.12890625, [561, 564]], [201, "-", 0.10986328125, [564, 566]], [202, "goal", 0.12060546875, [566, 571]], [203, ").", 0.109375, [571, 573]], [205, "Note", 0.1640625, [574, 578]], [206, "that", 0.1591796875, [578, 583]], [207, "a", 0.1748046875, [583, 585]], [208, "subsequ", 0.328125, [585, 593]], [209, "ence", 0.291015625, [593, 597]], [210, "of", 0.1591796875, [597, 600]], [211, "an", 0.1494140625, [600, 603]], [212, "array", 0.185546875, [603, 609]], [213, "is", 0.0859375, [609, 612]], [214, "an", 0.08251953125, [612, 615]], [215, "array", 0.11083984375, [615, 621]], [216, "formed", 0.12060546875, [621, 628]], [217, "by", 0.0888671875, [628, 631]], [218, "removing", 0.1298828125, [631, 640]], [219, "some", 0.09912109375, [640, 645]], [220, "elements", 0.1328125, [645, 654]], [221, "(", 0.080078125, [654, 656]], [222, "poss", 0.35546875, [656, 660]], [223, "ibly", 0.53515625, [660, 664]], [224, "all", 0.1982421875, [664, 668]], [225, "or", 0.15625, [668, 671]], [226, "none", 0.1787109375, [671, 676]], [227, ")", 0.099609375, [676, 677]], [228, "of", 0.0830078125, [677, 680]], [229, "the", 0.0634765625, [680, 684]], [230, "original", 0.09423828125, [684, 693]], [231, "array", 0.1201171875, [693, 699]], [232, ".", 0.11865234375, [699, 700]], [233, "B", 0.142578125, [700, 701]], [234, "ug", 0.263671875, [701, 703]], [235, "gy", 0.1982421875, [703, 705]], [236, "code", 0.345703125, [705, 710]], [237, ":", 0.13671875, [710, 712]], [238, "class", 0.232421875, [712, 718]], [239, "S", 0.349609375, [718, 720]], [240, "olution", 0.57421875, [720, 727]], [241, "{", 0.1630859375, [727, 729]], [243, "public", 0.359375, [730, 736]], [244, ":", 0.095703125, [736, 737]], [247, "void", 0.302734375, [741, 746]], [248, "find", 0.353515625, [746, 751]], [249, "(", 0.169921875, [751, 752]], [250, "vector", 0.259765625, [752, 758]], [251, "<", 0.140625, [758, 759]], [252, "int", 0.15234375, [759, 762]], [253, ">", 0.06103515625, [762, 763]], [254, "&", 0.1162109375, [763, 764]], [255, "v", 0.16796875, [764, 765]], [256, ",", 0.07861328125, [765, 766]], [257, "int", 0.10107421875, [766, 770]], [258, "i", 0.1376953125, [770, 772]], [259, ",", 0.07080078125, [772, 773]], [260, "int", 0.0791015625, [773, 777]], [261, "e", 0.169921875, [777, 779]], [262, ",", 0.076171875, [779, 780]], [263, "int", 0.0830078125, [780, 784]], [264, "sum", 0.2431640625, [784, 788]], [265, ",", 0.08203125, [788, 789]], [266, "vector", 0.1572265625, [789, 796]], [267, "<", 0.0966796875, [796, 797]], [268, "int", 0.091796875, [797, 800]], [269, ">", 0.0458984375, [800, 801]], [270, "&", 0.09716796875, [801, 802]], [271, "sum", 0.2021484375, [802, 805]], [272, "v", 0.228515625, [805, 806]], [273, "){", 0.1552734375, [806, 808]], [276, "if", 0.27734375, [816, 819]], [277, "(", 0.1455078125, [819, 820]], [278, "i", 0.119140625, [820, 821]], [279, "==", 0.1640625, [821, 823]], [280, "e", 0.138671875, [823, 824]], [281, "){", 0.1240234375, [824, 826]], [284, "sum", 0.234375, [838, 842]], [285, "v", 0.279296875, [842, 843]], [286, ".", 0.1474609375, [843, 844]], [287, "push", 0.359375, [844, 848]], [288, "_", 0.1689453125, [848, 849]], [289, "back", 0.78125, [849, 853]], [290, "(", 0.12109375, [853, 854]], [291, "sum", 0.208984375, [854, 857]], [292, ");", 0.11767578125, [857, 859]], [295, "return", 0.1689453125, [871, 878]], [296, ";", 0.1025390625, [878, 879]], [299, "}", 0.1435546875, [887, 889]], [302, "find", 0.3359375, [897, 902]], [303, "(", 0.169921875, [902, 903]], [304, "v", 0.21484375, [903, 904]], [305, ",", 0.12353515625, [904, 905]], [306, "i", 0.1640625, [905, 906]], [307, "+", 0.130859375, [906, 907]], [308, "1", 0.1611328125, [907, 908]], [309, ",", 0.0986328125, [908, 909]], [310, "e", 0.138671875, [909, 910]], [311, ",", 0.08642578125, [910, 911]], [312, "sum", 0.1630859375, [911, 914]], [313, "+", 0.146484375, [914, 915]], [314, "v", 0.1162109375, [915, 916]], [315, "[", 0.080078125, [916, 917]], [316, "i", 0.0732421875, [917, 918]], [317, "],", 0.0810546875, [918, 920]], [318, "sum", 0.10498046875, [920, 923]], [319, "v", 0.12890625, [923, 924]], [320, ");", 0.07958984375, [924, 926]], [323, "find", 0.2041015625, [934, 939]], [324, "(", 0.1279296875, [939, 940]], [325, "v", 0.1201171875, [940, 941]], [326, ",", 0.06494140625, [941, 942]], [327, "i", 0.0830078125, [942, 943]], [328, "+", 0.06689453125, [943, 944]], [329, "1", 0.0849609375, [944, 945]], [330, ",", 0.0615234375, [945, 946]], [331, "e", 0.0849609375, [946, 947]], [332, ",", 0.06787109375, [947, 948]], [333, "sum", 0.1416015625, [948, 951]], [334, ",", 0.0869140625, [951, 952]], [335, "sum", 0.125, [952, 955]], [336, "v", 0.12060546875, [955, 956]], [337, ");", 0.09130859375, [956, 958]], [340, "}", 0.1318359375, [962, 964]], [347, "int", 0.1796875, [982, 986]], [348, "min", 0.2490234375, [986, 990]], [349, "Abs", 0.75390625, [990, 993]], [350, "Diff", 0.55859375, [993, 997]], [351, "erence", 0.46875, [997, 1003]], [352, "(", 0.17578125, [1003, 1004]], [353, "vector", 0.294921875, [1004, 1010]], [354, "<", 0.1240234375, [1010, 1011]], [355, "int", 0.142578125, [1011, 1014]], [356, ">", 0.07080078125, [1014, 1015]], [357, "&", 0.150390625, [1015, 1016]], [358, "num", 0.2490234375, [1016, 1020]], [359, "s", 0.2080078125, [1020, 1021]], [360, ",", 0.1083984375, [1021, 1022]], [361, "int", 0.1181640625, [1022, 1026]], [362, "goal", 0.578125, [1026, 1031]], [363, ")", 0.140625, [1031, 1032]], [364, "{", 0.11376953125, [1032, 1034]], [367, "int", 0.14453125, [1042, 1046]], [368, "n", 0.177734375, [1046, 1048]], [369, "=", 0.12255859375, [1048, 1049]], [370, "num", 0.126953125, [1049, 1052]], [371, "s", 0.1201171875, [1052, 1053]], [372, ".", 0.140625, [1053, 1054]], [373, "size", 0.142578125, [1054, 1058]], [374, "();", 0.11767578125, [1058, 1061]], [379, "//", 0.1533203125, [1078, 1081]], [380, "Step", 0.48046875, [1081, 1085]], [382, "1", 0.35546875, [1086, 1087]], [383, ":", 0.181640625, [1087, 1088]], [384, "Div", 0.72265625, [1088, 1092]], [385, "ide", 1.015625, [1092, 1095]], [386, "num", 0.546875, [1095, 1099]], [387, "s", 0.39453125, [1099, 1100]], [388, "into", 0.447265625, [1100, 1105]], [390, "2", 0.275390625, [1106, 1107]], [391, "sub", 0.48046875, [1107, 1111]], [392, "arr", 0.82421875, [1111, 1114]], [393, "ays", 0.66015625, [1114, 1117]], [394, "of", 0.234375, [1117, 1120]], [395, "size", 0.267578125, [1120, 1125]], [396, "n", 0.1865234375, [1125, 1127]], [397, "/", 0.1669921875, [1127, 1128]], [398, "2", 0.1708984375, [1128, 1129]], [399, "and", 0.1826171875, [1129, 1133]], [400, "n", 0.13671875, [1133, 1135]], [401, "-", 0.10400390625, [1135, 1136]], [402, "n", 0.123046875, [1136, 1137]], [403, "/", 0.0859375, [1137, 1138]], [404, "2", 0.1123046875, [1138, 1139]], [409, "vector", 0.37109375, [1156, 1163]], [410, "<", 0.1552734375, [1163, 1164]], [411, "int", 0.169921875, [1164, 1167]], [412, ">", 0.08447265625, [1167, 1168]], [413, "A", 0.390625, [1168, 1169]], [414, ",", 0.15234375, [1169, 1170]], [415, "B", 0.259765625, [1170, 1171]], [416, ";", 0.1484375, [1171, 1172]], [419, "for", 0.30078125, [1180, 1184]], [420, "(", 0.2216796875, [1184, 1185]], [421, "int", 0.1728515625, [1185, 1188]], [422, "i", 0.189453125, [1188, 1190]], [423, "=", 0.11962890625, [1190, 1191]], [424, "0", 0.12060546875, [1191, 1192]], [425, ";", 0.083984375, [1192, 1193]], [426, "i", 0.11181640625, [1193, 1194]], [427, "<", 0.07568359375, [1194, 1195]], [428, "n", 0.111328125, [1195, 1196]], [429, "/", 0.0791015625, [1196, 1197]], [430, "2", 0.123046875, [1197, 1198]], [431, ";", 0.07275390625, [1198, 1199]], [432, "i", 0.08984375, [1199, 1200]], [433, "++", 0.1845703125, [1200, 1202]], [434, ")", 0.130859375, [1202, 1203]], [437, "A", 0.427734375, [1215, 1217]], [438, ".", 0.1953125, [1217, 1218]], [439, "push", 0.578125, [1218, 1222]], [440, "_", 0.25, [1222, 1223]], [441, "back", 0.8671875, [1223, 1227]], [442, "(", 0.1474609375, [1227, 1228]], [443, "num", 0.310546875, [1228, 1231]], [444, "s", 0.263671875, [1231, 1232]], [445, "[", 0.11279296875, [1232, 1233]], [446, "i", 0.09375, [1233, 1234]], [447, "]);", 0.181640625, [1234, 1237]], [450, "for", 0.27734375, [1245, 1249]], [451, "(", 0.173828125, [1249, 1250]], [452, "int", 0.177734375, [1250, 1253]], [453, "i", 0.1337890625, [1253, 1255]], [454, "=", 0.10888671875, [1255, 1256]], [455, "n", 0.1259765625, [1256, 1257]], [456, "/", 0.1083984375, [1257, 1258]], [457, "2", 0.134765625, [1258, 1259]], [458, ";", 0.08935546875, [1259, 1260]], [459, "i", 0.1025390625, [1260, 1261]], [460, "<", 0.07666015625, [1261, 1262]], [461, "n", 0.0947265625, [1262, 1263]], [462, ";", 0.0771484375, [1263, 1264]], [463, "i", 0.06982421875, [1264, 1265]], [464, "++", 0.12451171875, [1265, 1267]], [465, ")", 0.11474609375, [1267, 1268]], [468, "B", 0.2890625, [1280, 1282]], [469, ".", 0.171875, [1282, 1283]], [470, "push", 0.2080078125, [1283, 1287]], [471, "_", 0.1328125, [1287, 1288]], [472, "back", 0.431640625, [1288, 1292]], [473, "(", 0.11669921875, [1292, 1293]], [474, "num", 0.1494140625, [1293, 1296]], [475, "s", 0.1396484375, [1296, 1297]], [476, "[", 0.0732421875, [1297, 1298]], [477, "i", 0.06787109375, [1298, 1299]], [478, "]);", 0.1220703125, [1299, 1302]], [483, "//", 0.1806640625, [1319, 1322]], [484, "Step", 0.4453125, [1322, 1326]], [486, "2", 0.51171875, [1327, 1328]], [487, ":", 0.2314453125, [1328, 1329]], [488, "Find", 0.6015625, [1329, 1334]], [489, "all", 0.51171875, [1334, 1338]], [490, "possible", 0.63671875, [1338, 1347]], [491, "subset", 0.84375, [1347, 1354]], [492, "sums", 0.95703125, [1354, 1359]], [493, "of", 0.318359375, [1359, 1362]], [494, "A", 0.63671875, [1362, 1364]], [495, "and", 0.4140625, [1364, 1368]], [496, "B", 0.3671875, [1368, 1370]], [501, "vector", 0.5234375, [1387, 1394]], [502, "<", 0.201171875, [1394, 1395]], [503, "int", 0.259765625, [1395, 1398]], [504, ">", 0.16015625, [1398, 1399]], [505, "sum", 0.59765625, [1399, 1402]], [506, "A", 0.921875, [1402, 1403]], [507, ",", 0.232421875, [1403, 1404]], [508, "sum", 0.419921875, [1404, 1407]], [509, "B", 0.81640625, [1407, 1408]], [510, ";", 0.2578125, [1408, 1409]], [513, "find", 0.75, [1417, 1422]], [514, "(", 0.412109375, [1422, 1423]], [515, "A", 0.63671875, [1423, 1424]], [516, ",", 0.2001953125, [1424, 1425]], [517, "0", 0.26171875, [1425, 1426]], [518, ",", 0.13671875, [1426, 1427]], [519, "A", 0.236328125, [1427, 1428]], [520, ".", 0.22265625, [1428, 1429]], [521, "size", 0.283203125, [1429, 1433]], [522, "(),", 0.2109375, [1433, 1436]], [523, "0", 0.1513671875, [1436, 1437]], [524, ",", 0.10498046875, [1437, 1438]], [525, "sum", 0.318359375, [1438, 1441]], [526, "A", 0.3671875, [1441, 1442]], [527, ");", 0.173828125, [1442, 1444]], [530, "find", 0.4140625, [1452, 1457]], [531, "(", 0.267578125, [1457, 1458]], [532, "B", 0.32421875, [1458, 1459]], [533, ",", 0.1455078125, [1459, 1460]], [534, "0", 0.1962890625, [1460, 1461]], [535, ",", 0.125, [1461, 1462]], [536, "B", 0.1796875, [1462, 1463]], [537, ".", 0.2119140625, [1463, 1464]], [538, "size", 0.255859375, [1464, 1468]], [539, "(),", 0.158203125, [1468, 1471]], [540, "0", 0.1572265625, [1471, 1472]], [541, ",", 0.10986328125, [1472, 1473]], [542, "sum", 0.296875, [1473, 1476]], [543, "B", 0.357421875, [1476, 1477]], [544, ");", 0.1865234375, [1477, 1479]], [549, "sort", 0.63671875, [1496, 1501]], [550, "(", 0.306640625, [1501, 1502]], [551, "sum", 0.400390625, [1502, 1505]], [552, "A", 0.412109375, [1505, 1506]], [553, ".", 0.2421875, [1506, 1507]], [554, "begin", 0.5234375, [1507, 1512]], [555, "(),", 0.291015625, [1512, 1515]], [556, "sum", 0.3671875, [1515, 1518]], [557, "A", 0.373046875, [1518, 1519]], [558, ".", 0.2333984375, [1519, 1520]], [559, "end", 0.27734375, [1520, 1523]], [560, "());", 0.380859375, [1523, 1527]], [565, "//", 0.353515625, [1545, 1548]], [566, "Step", 0.58203125, [1548, 1552]], [568, "3", 0.490234375, [1553, 1554]], [569, ":", 0.32421875, [1554, 1555]], [570, "Find", 0.57421875, [1555, 1560]], [571, "combinations", 3.140625, [1560, 1573]], [572, "from", 0.76953125, [1573, 1578]], [573, "sum", 1.1796875, [1578, 1582]], [574, "A", 0.8515625, [1582, 1583]], [575, "&", 0.8046875, [1583, 1585]], [576, "sum", 0.953125, [1585, 1589]], [577, "B", 0.8125, [1589, 1590]], [578, "such", 1.0859375, [1590, 1595]], [579, "that", 0.5390625, [1595, 1600]], [580, "abs", 1.7421875, [1600, 1604]], [581, "(", 0.62890625, [1604, 1605]], [582, "sum", 0.5859375, [1605, 1608]], [583, "-", 0.50390625, [1608, 1609]], [584, "go", 2.046875, [1609, 1611]], [585, "al", 1.6484375, [1611, 1613]], [586, ")", 0.44140625, [1613, 1614]], [587, "is", 0.400390625, [1614, 1617]], [588, "minim", 0.91796875, [1617, 1623]], [589, "ized", 0.88671875, [1623, 1627]], [594, "int", 0.490234375, [1644, 1648]], [595, "an", 0.73828125, [1648, 1651]], [596, "s", 0.640625, [1651, 1652]], [597, "=", 0.376953125, [1652, 1653]], [598, "INT", 0.77734375, [1653, 1656]], [599, "_", 0.375, [1656, 1657]], [600, "MAX", 0.7734375, [1657, 1660]], [601, ";", 0.2216796875, [1660, 1661]], [606, "for", 0.498046875, [1678, 1682]], [607, "(", 0.4140625, [1682, 1683]], [608, "int", 0.3828125, [1683, 1686]], [609, "i", 0.310546875, [1686, 1688]], [610, "=", 0.2421875, [1688, 1689]], [611, "0", 0.22265625, [1689, 1690]], [612, ";", 0.18359375, [1690, 1691]], [613, "i", 0.1982421875, [1691, 1692]], [614, "<", 0.1318359375, [1692, 1693]], [615, "sum", 0.369140625, [1693, 1696]], [616, "A", 0.66796875, [1696, 1697]], [617, ".", 0.25, [1697, 1698]], [618, "size", 0.275390625, [1698, 1702]], [619, "();", 0.236328125, [1702, 1705]], [620, "i", 0.1689453125, [1705, 1706]], [621, "++", 0.296875, [1706, 1708]], [622, "){", 0.359375, [1708, 1710]], [625, "int", 0.25, [1722, 1726]], [626, "s", 0.61328125, [1726, 1728]], [627, "=", 0.314453125, [1728, 1729]], [628, "sum", 0.412109375, [1729, 1732]], [629, "A", 0.58203125, [1732, 1733]], [630, "[", 0.255859375, [1733, 1734]], [631, "i", 0.171875, [1734, 1735]], [632, "];", 0.208984375, [1735, 1737]], [635, "int", 0.31640625, [1749, 1753]], [636, "l", 0.54296875, [1753, 1755]], [637, "=", 0.345703125, [1755, 1756]], [638, "0", 0.310546875, [1756, 1757]], [639, ";", 0.1982421875, [1757, 1758]], [642, "int", 0.2138671875, [1770, 1774]], [643, "r", 0.451171875, [1774, 1776]], [644, "=", 0.2470703125, [1776, 1777]], [645, "sum", 0.333984375, [1777, 1780]], [646, "B", 0.75390625, [1780, 1781]], [647, ".", 0.29296875, [1781, 1782]], [648, "size", 0.25390625, [1782, 1786]], [649, "()-", 0.498046875, [1786, 1789]], [650, "1", 0.40625, [1789, 1790]], [651, ";", 0.1796875, [1790, 1791]], [654, "while", 0.5625, [1803, 1809]], [655, "(", 0.365234375, [1809, 1810]], [656, "l", 0.275390625, [1810, 1811]], [657, "<", 0.2392578125, [1811, 1812]], [658, "=", 0.2890625, [1812, 1813]], [659, "r", 0.353515625, [1813, 1814]], [660, "){", 0.458984375, [1814, 1816]], [663, "int", 0.37890625, [1832, 1836]], [664, "mid", 1.0234375, [1836, 1840]], [665, "=", 0.341796875, [1840, 1841]], [666, "l", 0.296875, [1841, 1842]], [667, "+", 0.302734375, [1842, 1843]], [668, "(", 0.33984375, [1843, 1844]], [669, "r", 0.271484375, [1844, 1845]], [670, "-", 0.2080078125, [1845, 1846]], [671, "l", 0.2421875, [1846, 1847]], [672, ")/", 0.365234375, [1847, 1849]], [673, "2", 0.26171875, [1849, 1850]], [674, ";", 0.1669921875, [1850, 1851]], [677, "int", 0.2421875, [1867, 1871]], [678, "sum", 0.5859375, [1871, 1875]], [679, "=", 0.3125, [1875, 1876]], [680, "s", 0.3125, [1876, 1877]], [681, "+", 0.322265625, [1877, 1878]], [682, "sum", 0.431640625, [1878, 1881]], [683, "B", 0.62109375, [1881, 1882]], [684, "[", 0.27734375, [1882, 1883]], [685, "mid", 0.341796875, [1883, 1886]], [686, "];", 0.263671875, [1886, 1888]], [689, "if", 0.55859375, [1904, 1907]], [690, "(", 0.4296875, [1907, 1908]], [691, "sum", 0.416015625, [1908, 1911]], [692, "==", 0.69921875, [1911, 1913]], [693, "go", 1.3125, [1913, 1915]], [694, "al", 1.15625, [1915, 1917]], [695, ")", 0.34375, [1917, 1918]], [698, "return", 0.5625, [1938, 1945]], [700, "0", 0.375, [1946, 1947]], [701, ";", 0.255859375, [1947, 1948]], [704, "an", 0.67578125, [1964, 1967]], [705, "s", 0.671875, [1967, 1968]], [706, "=", 0.298828125, [1968, 1969]], [707, "min", 0.435546875, [1969, 1972]], [708, "(", 0.380859375, [1972, 1973]], [709, "ans", 0.68359375, [1973, 1976]], [710, ",", 0.240234375, [1976, 1977]], [711, "abs", 1.0703125, [1977, 1980]], [712, "(", 0.51171875, [1980, 1981]], [713, "sum", 0.54296875, [1981, 1984]], [714, "-", 0.40234375, [1984, 1985]], [715, "go", 0.92578125, [1985, 1987]], [716, "al", 0.578125, [1987, 1989]], [717, "));", 0.62890625, [1989, 1992]], [720, "if", 0.435546875, [2008, 2011]], [721, "(", 0.396484375, [2011, 2012]], [722, "sum", 0.447265625, [2012, 2015]], [723, ">", 0.5546875, [2015, 2016]], [724, "go", 0.61328125, [2016, 2018]], [725, "al", 0.5390625, [2018, 2020]], [726, "){", 0.53515625, [2020, 2022]], [729, "r", 0.76171875, [2042, 2044]], [730, "=", 0.4453125, [2044, 2045]], [731, "mid", 0.640625, [2045, 2048]], [732, "-", 0.41015625, [2048, 2049]], [733, "1", 0.63671875, [2049, 2050]], [734, ";", 0.279296875, [2050, 2051]], [737, "}", 0.48046875, [2067, 2069]], [740, "else", 0.66796875, [2085, 2090]], [741, "{", 0.47265625, [2090, 2091]], [744, "l", 0.59375, [2111, 2113]], [745, "=", 0.330078125, [2113, 2114]], [746, "mid", 0.388671875, [2114, 2117]], [747, "+", 0.373046875, [2117, 2118]], [748, "1", 0.41796875, [2118, 2119]], [749, ";", 0.248046875, [2119, 2120]], [752, "}", 0.412109375, [2136, 2138]], [756, "}", 0.7109375, [2154, 2156]], [759, "}", 0.71875, [2164, 2166]], [764, "return", 0.921875, [2183, 2190]], [765, "an", 0.921875, [2190, 2193]], [766, "s", 0.88671875, [2193, 2194]], [767, ";", 0.5546875, [2194, 2195]], [770, "}", 0.7421875, [2199, 2201]], [772, "};", 1.390625, [2202, 2204]]]}, "clean_tokens": ["<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cbegin\u2581of\u2581sentence\uff5c>", "You", "are", "an", "exception", "ally", "intelligent", "coding", "assistant", "that", "consistently", "delivers", "accurate", "and", "reliable", "responses", "to", "user", "instructions", ".", "", "", "", "@", "@", "Inst", "ruction", "", "", "You", "are", "a", "program", "rep", "aire", "r", ".", "Please", "repair", "the", "following", "bug", "gy", "program", ".", "You", "are", "given", "an", "integer", "array", "num", "s", "and", "an", "integer", "goal", ".", "", "You", "want", "to", "choose", "a", "subsequ", "ence", "of", "num", "s", "such", "that", "the", "sum", "of", "its", "elements", "is", "the", "closest", "possible", "to", "goal", ".", "That", "is", ",", "if", "the", "sum", "of", "the", "subsequ", "ence", "'", "s", "elements", "is", "sum", ",", "then", "you", "want", "to", "minimize", "the", "absolute", "difference", "abs", "(", "sum", "-", "goal", ").", "", "Return", "the", "minimum", "possible", "value", "of", "abs", "(", "sum", "-", "goal", ").", "", "Note", "that", "a", "subsequ", "ence", "of", "an", "array", "is", "an", "array", "formed", "by", "removing", "some", "elements", "(", "poss", "ibly", "all", "or", "none", ")", "of", "the", "original", "array", ".", "B", "ug", "gy", "code", ":", "class", "S", "olution", "{", "", "public", ":", "", "", "void", "find", "(", "vector", "<", "int", ">", "&", "v", ",", "int", "i", ",", "int", "e", ",", "int", "sum", ",", "vector", "<", "int", ">", "&", "sum", "v", "){", "", "", "if", "(", "i", "==", "e", "){", "", "", "sum", "v", ".", "push", "_", "back", "(", "sum", ");", "", "", "return", ";", "", "", "}", "", "", "find", "(", "v", ",", "i", "+", "1", ",", "e", ",", "sum", "+", "v", "[", "i", "],", "sum", "v", ");", "", "", "find", "(", "v", ",", "i", "+", "1", ",", "e", ",", "sum", ",", "sum", "v", ");", "", "", "}", "", "", "", "", "", "", "int", "min", "Abs", "Diff", "erence", "(", "vector", "<", "int", ">", "&", "num", "s", ",", "int", "goal", ")", "{", "", "", "int", "n", "=", "num", "s", ".", "size", "();", "", "", "", "", "//", "Step", "", "1", ":", "Div", "ide", "num", "s", "into", "", "2", "sub", "arr", "ays", "of", "size", "n", "/", "2", "and", "n", "-", "n", "/", "2", "", "", "", "", "vector", "<", "int", ">", "A", ",", "B", ";", "", "", "for", "(", "int", "i", "=", "0", ";", "i", "<", "n", "/", "2", ";", "i", "++", ")", "", "", "A", ".", "push", "_", "back", "(", "num", "s", "[", "i", "]);", "", "", "for", "(", "int", "i", "=", "n", "/", "2", ";", "i", "<", "n", ";", "i", "++", ")", "", "", "B", ".", "push", "_", "back", "(", "num", "s", "[", "i", "]);", "", "", "", "", "//", "Step", "", "2", ":", "Find", "all", "possible", "subset", "sums", "of", "A", "and", "B", "", "", "", "", "vector", "<", "int", ">", "sum", "A", ",", "sum", "B", ";", "", "", "find", "(", "A", ",", "0", ",", "A", ".", "size", "(),", "0", ",", "sum", "A", ");", "", "", "find", "(", "B", ",", "0", ",", "B", ".", "size", "(),", "0", ",", "sum", "B", ");", "", "", "", "", "sort", "(", "sum", "A", ".", "begin", "(),", "sum", "A", ".", "end", "());", "", "", "", "", "//", "Step", "", "3", ":", "Find", "combinations", "from", "sum", "A", "&", "sum", "B", "such", "that", "abs", "(", "sum", "-", "go", "al", ")", "is", "minim", "ized", "", "", "", "", "int", "an", "s", "=", "INT", "_", "MAX", ";", "", "", "", "", "for", "(", "int", "i", "=", "0", ";", "i", "<", "sum", "A", ".", "size", "();", "i", "++", "){", "", "", "int", "s", "=", "sum", "A", "[", "i", "];", "", "", "int", "l", "=", "0", ";", "", "", "int", "r", "=", "sum", "B", ".", "size", "()-", "1", ";", "", "", "while", "(", "l", "<", "=", "r", "){", "", "", "int", "mid", "=", "l", "+", "(", "r", "-", "l", ")/", "2", ";", "", "", "int", "sum", "=", "s", "+", "sum", "B", "[", "mid", "];", "", "", "if", "(", "sum", "==", "go", "al", ")", "", "", "return", "", "0", ";", "", "", "an", "s", "=", "min", "(", "ans", ",", "abs", "(", "sum", "-", "go", "al", "));", "", "", "if", "(", "sum", ">", "go", "al", "){", "", "", "r", "=", "mid", "-", "1", ";", "", "", "}", "", "", "else", "{", "", "", "l", "=", "mid", "+", "1", ";", "", "", "}", "", "", "", "}", "", "", "}", "", "", "", "", "return", "an", "s", ";", "", "", "}", "", "};", "$", "Test", "case", "(", "Input", "with", "expected", "output", ")", ":", "Input", ":", "num", "s", "=", "[", "5", ",-", "7", ",", "3", ",", "5", "],", "goal", "=", "6", "", "Output", ":", "", "0", "", "", "", "@", "@", "Response", "", ""], "fix": null}