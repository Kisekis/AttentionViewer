{"data": null, "prompt": "You are an exceptionally intelligent coding assistant that consistently delivers accurate and reliable responses to user instructions.\n\n        @@ Instruction\n        You are a program repairer. Please repair the following buggy program. You are given an integer array nums and an integer goal.\nYou want to choose a subsequence of nums such that the sum of its elements is the closest possible to goal. That is, if the sum of the subsequence's elements is sum, then you want to minimize the absolute difference abs(sum - goal).\nReturn the minimum possible value of abs(sum - goal).\nNote that a subsequence of an array is an array formed by removing some elements (possibly all or none) of the original array.Buggy code : class Solution {\npublic:\n    void find(vector<int>&v, int i, int e, int sum, vector<int>&sumv){\n        if(i==e){\n            sumv.push_back(sum);\n            return;\n        }\n        find(v,i+1,e,sum+v[i],sumv);\n        find(v,i+1,e,sum,sumv);\n    }\n        \n    \n    int minAbsDifference(vector<int>& nums, int goal) {\n        int n=nums.size();\n        \n        //Step 1: Divide nums into 2 subarrays of size n/2 and n-n/2\n        \n        vector<int>A,B;\n        for(int i=0;i<n/2;i++)\n            A.push_back(nums[i]);\n        for(int i=n/2;i<n;i++)\n            B.push_back(nums[i]);\n        \n        //Step 2: Find all possible subset sums of A and B\n        \n        vector<int>sumA,sumB;\n        find(A,0,A.size(),0,sumA);\n        find(B,0,B.size(),0,sumB);\n        \n        sort(sumA.begin(),sumA.end());\n         \n        //Step 3: Find combinations from sumA & sumB such that abs(sum-goal) is minimized\n        \n        int ans=INT_MAX;\n        \n        for(int i=0;i<sumA.size();i++){\n            int s=sumA[i];\n            int l=0;\n            int r=sumB.size()-1;\n            while(l<=r){\n                int mid=l+(r-l)/2;\n                int sum=s+sumB[mid];\n                if(sum==goal)\n                    return 0;\n                ans=min(ans,abs(sum-goal));\n                if(sum>goal){\n                    r=mid-1;\n                }\n                else{\n                    l=mid+1;\n                }    \n            }\n        }\n        \n        return ans;\n    }\n};$Testcase(Input with expected output) : Input: nums = [5,-7,3,5], goal = 6\nOutput: 0\nFault reasoning: sumB(variable) in minAbsDifference(function) is wrong.\n\n        @@ Response\n        You should pay attention to all previous infomation when generating next token.\n        ", "res": {"reading_first": [[1, "You", 0.01300048828125, [0, 3]], [2, "are", 0.015869140625, [3, 7]], [3, "an", 0.017578125, [7, 10]], [4, "exception", 0.01513671875, [10, 20]], [5, "ally", 0.016357421875, [20, 24]], [6, "intelligent", 0.01348876953125, [24, 36]], [7, "coding", 0.02099609375, [36, 43]], [8, "assistant", 0.01171875, [43, 53]], [9, "that", 0.02099609375, [53, 58]], [10, "consistently", 0.0162353515625, [58, 71]], [11, "delivers", 0.01202392578125, [71, 80]], [12, "accurate", 0.01495361328125, [80, 89]], [13, "and", 0.0244140625, [89, 93]], [14, "reliable", 0.01300048828125, [93, 102]], [15, "responses", 0.015625, [102, 112]], [16, "to", 0.02294921875, [112, 115]], [17, "user", 0.01226806640625, [115, 120]], [18, "instructions", 0.012939453125, [120, 133]], [19, ".", 0.08203125, [133, 134]], [23, "@", 0.0120849609375, [143, 145]], [24, "@", 0.01483154296875, [145, 146]], [25, "Inst", 0.0111083984375, [146, 151]], [26, "ruction", 0.01092529296875, [151, 158]], [29, "You", 0.00982666015625, [166, 170]], [30, "are", 0.016357421875, [170, 174]], [31, "a", 0.030029296875, [174, 176]], [32, "program", 0.0147705078125, [176, 184]], [33, "rep", 0.01300048828125, [184, 188]], [34, "aire", 0.01141357421875, [188, 192]], [35, "r", 0.0118408203125, [192, 193]], [36, ".", 0.08349609375, [193, 194]], [37, "Please", 0.0162353515625, [194, 201]], [38, "repair", 0.016357421875, [201, 208]], [39, "the", 0.0235595703125, [208, 212]], [40, "following", 0.0189208984375, [212, 222]], [41, "bug", 0.0162353515625, [222, 226]], [42, "gy", 0.01129150390625, [226, 228]], [43, "program", 0.015625, [228, 236]], [44, ".", 0.0830078125, [236, 237]], [45, "You", 0.00994873046875, [237, 241]], [46, "are", 0.017333984375, [241, 245]], [47, "given", 0.020263671875, [245, 251]], [48, "an", 0.0191650390625, [251, 254]], [49, "integer", 0.0172119140625, [254, 262]], [50, "array", 0.019775390625, [262, 268]], [51, "num", 0.0166015625, [268, 272]], [52, "s", 0.017578125, [272, 273]], [53, "and", 0.025146484375, [273, 277]], [54, "an", 0.018310546875, [277, 280]], [55, "integer", 0.0157470703125, [280, 288]], [56, "goal", 0.0150146484375, [288, 293]], [57, ".", 0.0830078125, [293, 294]], [59, "You", 0.01312255859375, [295, 298]], [60, "want", 0.01409912109375, [298, 303]], [61, "to", 0.0228271484375, [303, 306]], [62, "choose", 0.014892578125, [306, 313]], [63, "a", 0.029541015625, [313, 315]], [64, "subsequ", 0.01513671875, [315, 323]], [65, "ence", 0.0145263671875, [323, 327]], [66, "of", 0.025390625, [327, 330]], [67, "num", 0.01519775390625, [330, 334]], [68, "s", 0.017333984375, [334, 335]], [69, "such", 0.01220703125, [335, 340]], [70, "that", 0.021484375, [340, 345]], [71, "the", 0.0233154296875, [345, 349]], [72, "sum", 0.01336669921875, [349, 353]], [73, "of", 0.025634765625, [353, 356]], [74, "its", 0.01239013671875, [356, 360]], [75, "elements", 0.0166015625, [360, 369]], [76, "is", 0.016845703125, [369, 372]], [77, "the", 0.0233154296875, [372, 376]], [78, "closest", 0.0167236328125, [376, 384]], [79, "possible", 0.01531982421875, [384, 393]], [80, "to", 0.02294921875, [393, 396]], [81, "goal", 0.01611328125, [396, 401]], [82, ".", 0.0810546875, [401, 402]], [83, "That", 0.0133056640625, [402, 407]], [84, "is", 0.0169677734375, [407, 410]], [85, ",", 0.0289306640625, [410, 411]], [86, "if", 0.0225830078125, [411, 414]], [87, "the", 0.0235595703125, [414, 418]], [88, "sum", 0.01397705078125, [418, 422]], [89, "of", 0.025634765625, [422, 425]], [90, "the", 0.0238037109375, [425, 429]], [91, "subsequ", 0.016357421875, [429, 437]], [92, "ence", 0.01495361328125, [437, 441]], [93, "'", 0.01611328125, [441, 442]], [94, "s", 0.0174560546875, [442, 443]], [95, "elements", 0.0167236328125, [443, 452]], [96, "is", 0.017578125, [452, 455]], [97, "sum", 0.01373291015625, [455, 459]], [98, ",", 0.0306396484375, [459, 460]], [99, "then", 0.0216064453125, [460, 465]], [100, "you", 0.01080322265625, [465, 469]], [101, "want", 0.0147705078125, [469, 474]], [102, "to", 0.0238037109375, [474, 477]], [103, "minimize", 0.01409912109375, [477, 486]], [104, "the", 0.024658203125, [486, 490]], [105, "absolute", 0.019287109375, [490, 499]], [106, "difference", 0.01483154296875, [499, 510]], [107, "abs", 0.01483154296875, [510, 514]], [108, "(", 0.049560546875, [514, 515]], [109, "sum", 0.01544189453125, [515, 518]], [110, "-", 0.01312255859375, [518, 520]], [111, "goal", 0.0159912109375, [520, 525]], [112, ").", 0.0203857421875, [525, 527]], [114, "Return", 0.01531982421875, [528, 534]], [115, "the", 0.0242919921875, [534, 538]], [116, "minimum", 0.01361083984375, [538, 546]], [117, "possible", 0.0157470703125, [546, 555]], [118, "value", 0.0198974609375, [555, 561]], [119, "of", 0.027099609375, [561, 564]], [120, "abs", 0.0157470703125, [564, 568]], [121, "(", 0.050048828125, [568, 569]], [122, "sum", 0.0162353515625, [569, 572]], [123, "-", 0.01324462890625, [572, 574]], [124, "goal", 0.0164794921875, [574, 579]], [125, ").", 0.02099609375, [579, 581]], [127, "Note", 0.0147705078125, [582, 586]], [128, "that", 0.022705078125, [586, 591]], [129, "a", 0.031494140625, [591, 593]], [130, "subsequ", 0.0172119140625, [593, 601]], [131, "ence", 0.015380859375, [601, 605]], [132, "of", 0.026611328125, [605, 608]], [133, "an", 0.0189208984375, [608, 611]], [134, "array", 0.020263671875, [611, 617]], [135, "is", 0.017822265625, [617, 620]], [136, "an", 0.0189208984375, [620, 623]], [137, "array", 0.0206298828125, [623, 629]], [138, "formed", 0.0206298828125, [629, 636]], [139, "by", 0.019775390625, [636, 639]], [140, "removing", 0.01123046875, [639, 648]], [141, "some", 0.01409912109375, [648, 653]], [142, "elements", 0.01806640625, [653, 662]], [143, "(", 0.029296875, [662, 664]], [144, "poss", 0.016845703125, [664, 668]], [145, "ibly", 0.01904296875, [668, 672]], [146, "all", 0.01611328125, [672, 676]], [147, "or", 0.01904296875, [676, 679]], [148, "none", 0.01904296875, [679, 684]], [149, ")", 0.06982421875, [684, 685]], [150, "of", 0.0272216796875, [685, 688]], [151, "the", 0.0255126953125, [688, 692]], [152, "original", 0.0162353515625, [692, 701]], [153, "array", 0.0211181640625, [701, 707]], [154, ".", 0.087890625, [707, 708]], [155, "B", 0.0087890625, [708, 709]], [156, "ug", 0.01318359375, [709, 711]], [157, "gy", 0.0115966796875, [711, 713]], [158, "code", 0.0208740234375, [713, 718]], [159, ":", 0.01226806640625, [718, 720]], [160, "class", 0.019287109375, [720, 726]], [161, "S", 0.01287841796875, [726, 728]], [162, "olution", 0.019287109375, [728, 735]], [163, "{", 0.041259765625, [735, 737]], [165, "public", 0.016357421875, [738, 744]], [166, ":", 0.028076171875, [744, 745]], [169, "void", 0.0186767578125, [749, 754]], [170, "find", 0.017578125, [754, 759]], [171, "(", 0.052734375, [759, 760]], [172, "vector", 0.0179443359375, [760, 766]], [173, "<", 0.01446533203125, [766, 767]], [174, "int", 0.0179443359375, [767, 770]], [175, ">", 0.02001953125, [770, 771]], [176, "&", 0.006103515625, [771, 772]], [177, "v", 0.01019287109375, [772, 773]], [178, ",", 0.031494140625, [773, 774]], [179, "int", 0.0162353515625, [774, 778]], [180, "i", 0.012451171875, [778, 780]], [181, ",", 0.0311279296875, [780, 781]], [182, "int", 0.01611328125, [781, 785]], [183, "e", 0.01055908203125, [785, 787]], [184, ",", 0.0306396484375, [787, 788]], [185, "int", 0.0162353515625, [788, 792]], [186, "sum", 0.013671875, [792, 796]], [187, ",", 0.0302734375, [796, 797]], [188, "vector", 0.01361083984375, [797, 804]], [189, "<", 0.0135498046875, [804, 805]], [190, "int", 0.0177001953125, [805, 808]], [191, ">", 0.0184326171875, [808, 809]], [192, "&", 0.006134033203125, [809, 810]], [193, "sum", 0.015869140625, [810, 813]], [194, "v", 0.0098876953125, [813, 814]], [195, "){", 0.025146484375, [814, 816]], [198, "if", 0.0233154296875, [824, 827]], [199, "(", 0.0517578125, [827, 828]], [200, "i", 0.01531982421875, [828, 829]], [201, "==", 0.0172119140625, [829, 831]], [202, "e", 0.0130615234375, [831, 832]], [203, "){", 0.0257568359375, [832, 834]], [206, "sum", 0.01416015625, [846, 850]], [207, "v", 0.01007080078125, [850, 851]], [208, ".", 0.08837890625, [851, 852]], [209, "push", 0.01611328125, [852, 856]], [210, "_", 0.0303955078125, [856, 857]], [211, "back", 0.01556396484375, [857, 861]], [212, "(", 0.05224609375, [861, 862]], [213, "sum", 0.015625, [862, 865]], [214, ");", 0.0281982421875, [865, 867]], [217, "return", 0.02490234375, [879, 886]], [218, ";", 0.0255126953125, [886, 887]], [221, "}", 0.03271484375, [895, 897]], [224, "find", 0.0174560546875, [905, 910]], [225, "(", 0.05224609375, [910, 911]], [226, "v", 0.01025390625, [911, 912]], [227, ",", 0.03173828125, [912, 913]], [228, "i", 0.0155029296875, [913, 914]], [229, "+", 0.0162353515625, [914, 915]], [230, "1", 0.0380859375, [915, 916]], [231, ",", 0.03173828125, [916, 917]], [232, "e", 0.01324462890625, [917, 918]], [233, ",", 0.03173828125, [918, 919]], [234, "sum", 0.016357421875, [919, 922]], [235, "+", 0.01611328125, [922, 923]], [236, "v", 0.01025390625, [923, 924]], [237, "[", 0.018798828125, [924, 925]], [238, "i", 0.0155029296875, [925, 926]], [239, "],", 0.01434326171875, [926, 928]], [240, "sum", 0.0164794921875, [928, 931]], [241, "v", 0.0103759765625, [931, 932]], [242, ");", 0.029541015625, [932, 934]], [245, "find", 0.0181884765625, [942, 947]], [246, "(", 0.053955078125, [947, 948]], [247, "v", 0.01055908203125, [948, 949]], [248, ",", 0.032958984375, [949, 950]], [249, "i", 0.01611328125, [950, 951]], [250, "+", 0.016845703125, [951, 952]], [251, "1", 0.03857421875, [952, 953]], [252, ",", 0.032958984375, [953, 954]], [253, "e", 0.01385498046875, [954, 955]], [254, ",", 0.03271484375, [955, 956]], [255, "sum", 0.017333984375, [956, 959]], [256, ",", 0.032470703125, [959, 960]], [257, "sum", 0.017333984375, [960, 963]], [258, "v", 0.01055908203125, [963, 964]], [259, ");", 0.0299072265625, [964, 966]], [262, "}", 0.033935546875, [970, 972]], [269, "int", 0.018310546875, [990, 994]], [270, "min", 0.015380859375, [994, 998]], [271, "Abs", 0.01470947265625, [998, 1001]], [272, "Diff", 0.0120849609375, [1001, 1005]], [273, "erence", 0.01495361328125, [1005, 1011]], [274, "(", 0.053955078125, [1011, 1012]], [275, "vector", 0.017822265625, [1012, 1018]], [276, "<", 0.0146484375, [1018, 1019]], [277, "int", 0.0179443359375, [1019, 1022]], [278, ">", 0.0203857421875, [1022, 1023]], [279, "&", 0.006317138671875, [1023, 1024]], [280, "num", 0.0157470703125, [1024, 1028]], [281, "s", 0.01806640625, [1028, 1029]], [282, ",", 0.03173828125, [1029, 1030]], [283, "int", 0.01708984375, [1030, 1034]], [284, "goal", 0.0162353515625, [1034, 1039]], [285, ")", 0.07080078125, [1039, 1040]], [286, "{", 0.04150390625, [1040, 1042]], [289, "int", 0.017822265625, [1050, 1054]], [290, "n", 0.015380859375, [1054, 1056]], [291, "=", 0.0279541015625, [1056, 1057]], [292, "num", 0.01470947265625, [1057, 1060]], [293, "s", 0.0181884765625, [1060, 1061]], [294, ".", 0.08935546875, [1061, 1062]], [295, "size", 0.0203857421875, [1062, 1066]], [296, "();", 0.0228271484375, [1066, 1069]], [301, "//", 0.0157470703125, [1086, 1089]], [302, "Step", 0.01556396484375, [1089, 1093]], [304, "1", 0.038818359375, [1094, 1095]], [305, ":", 0.0294189453125, [1095, 1096]], [306, "Div", 0.0115966796875, [1096, 1100]], [307, "ide", 0.0177001953125, [1100, 1103]], [308, "num", 0.0169677734375, [1103, 1107]], [309, "s", 0.018310546875, [1107, 1108]], [310, "into", 0.02099609375, [1108, 1113]], [312, "2", 0.041015625, [1114, 1115]], [313, "sub", 0.013671875, [1115, 1119]], [314, "arr", 0.01507568359375, [1119, 1122]], [315, "ays", 0.0152587890625, [1122, 1125]], [316, "of", 0.0286865234375, [1125, 1128]], [317, "size", 0.019287109375, [1128, 1133]], [318, "n", 0.01611328125, [1133, 1135]], [319, "/", 0.0205078125, [1135, 1136]], [320, "2", 0.041748046875, [1136, 1137]], [321, "and", 0.028564453125, [1137, 1141]], [322, "n", 0.0164794921875, [1141, 1143]], [323, "-", 0.036865234375, [1143, 1144]], [324, "n", 0.012939453125, [1144, 1145]], [325, "/", 0.02099609375, [1145, 1146]], [326, "2", 0.042724609375, [1146, 1147]], [331, "vector", 0.0162353515625, [1164, 1171]], [332, "<", 0.01556396484375, [1171, 1172]], [333, "int", 0.02001953125, [1172, 1175]], [334, ">", 0.0201416015625, [1175, 1176]], [335, "A", 0.01300048828125, [1176, 1177]], [336, ",", 0.03271484375, [1177, 1178]], [337, "B", 0.00909423828125, [1178, 1179]], [338, ";", 0.0274658203125, [1179, 1180]], [341, "for", 0.022705078125, [1188, 1192]], [342, "(", 0.0546875, [1192, 1193]], [343, "int", 0.02099609375, [1193, 1196]], [344, "i", 0.01422119140625, [1196, 1198]], [345, "=", 0.0296630859375, [1198, 1199]], [346, "0", 0.01708984375, [1199, 1200]], [347, ";", 0.0283203125, [1200, 1201]], [348, "i", 0.017578125, [1201, 1202]], [349, "<", 0.0159912109375, [1202, 1203]], [350, "n", 0.01348876953125, [1203, 1204]], [351, "/", 0.021240234375, [1204, 1205]], [352, "2", 0.04345703125, [1205, 1206]], [353, ";", 0.0277099609375, [1206, 1207]], [354, "i", 0.0166015625, [1207, 1208]], [355, "++", 0.0177001953125, [1208, 1210]], [356, ")", 0.07421875, [1210, 1211]], [359, "A", 0.01409912109375, [1223, 1225]], [360, ".", 0.09228515625, [1225, 1226]], [361, "push", 0.0167236328125, [1226, 1230]], [362, "_", 0.03173828125, [1230, 1231]], [363, "back", 0.0159912109375, [1231, 1235]], [364, "(", 0.05419921875, [1235, 1236]], [365, "num", 0.0147705078125, [1236, 1239]], [366, "s", 0.0186767578125, [1239, 1240]], [367, "[", 0.0194091796875, [1240, 1241]], [368, "i", 0.0159912109375, [1241, 1242]], [369, "]);", 0.024169921875, [1242, 1245]], [372, "for", 0.0223388671875, [1253, 1257]], [373, "(", 0.054931640625, [1257, 1258]], [374, "int", 0.0198974609375, [1258, 1261]], [375, "i", 0.0140380859375, [1261, 1263]], [376, "=", 0.0299072265625, [1263, 1264]], [377, "n", 0.012939453125, [1264, 1265]], [378, "/", 0.0206298828125, [1265, 1266]], [379, "2", 0.04296875, [1266, 1267]], [380, ";", 0.0284423828125, [1267, 1268]], [381, "i", 0.0166015625, [1268, 1269]], [382, "<", 0.0159912109375, [1269, 1270]], [383, "n", 0.0128173828125, [1270, 1271]], [384, ";", 0.0284423828125, [1271, 1272]], [385, "i", 0.0164794921875, [1272, 1273]], [386, "++", 0.0186767578125, [1273, 1275]], [387, ")", 0.07373046875, [1275, 1276]], [390, "B", 0.01483154296875, [1288, 1290]], [391, ".", 0.09423828125, [1290, 1291]], [392, "push", 0.018310546875, [1291, 1295]], [393, "_", 0.033935546875, [1295, 1296]], [394, "back", 0.0172119140625, [1296, 1300]], [395, "(", 0.057861328125, [1300, 1301]], [396, "num", 0.01611328125, [1301, 1304]], [397, "s", 0.0198974609375, [1304, 1305]], [398, "[", 0.0211181640625, [1305, 1306]], [399, "i", 0.0174560546875, [1306, 1307]], [400, "]);", 0.0267333984375, [1307, 1310]], [405, "//", 0.0179443359375, [1327, 1330]], [406, "Step", 0.0177001953125, [1330, 1334]], [408, "2", 0.045166015625, [1335, 1336]], [409, ":", 0.032470703125, [1336, 1337]], [410, "Find", 0.019775390625, [1337, 1342]], [411, "all", 0.018798828125, [1342, 1346]], [412, "possible", 0.0191650390625, [1346, 1355]], [413, "subset", 0.0198974609375, [1355, 1362]], [414, "sums", 0.0198974609375, [1362, 1367]], [415, "of", 0.033447265625, [1367, 1370]], [416, "A", 0.01611328125, [1370, 1372]], [417, "and", 0.031494140625, [1372, 1376]], [418, "B", 0.016357421875, [1376, 1378]], [423, "vector", 0.017333984375, [1395, 1402]], [424, "<", 0.0174560546875, [1402, 1403]], [425, "int", 0.0211181640625, [1403, 1406]], [426, ">", 0.023193359375, [1406, 1407]], [427, "sum", 0.0177001953125, [1407, 1410]], [428, "A", 0.01409912109375, [1410, 1411]], [429, ",", 0.03564453125, [1411, 1412]], [430, "sum", 0.017578125, [1412, 1415]], [431, "B", 0.0096435546875, [1415, 1416]], [432, ";", 0.0291748046875, [1416, 1417]], [435, "find", 0.01953125, [1425, 1430]], [436, "(", 0.057861328125, [1430, 1431]], [437, "A", 0.0137939453125, [1431, 1432]], [438, ",", 0.034423828125, [1432, 1433]], [439, "0", 0.016845703125, [1433, 1434]], [440, ",", 0.034423828125, [1434, 1435]], [441, "A", 0.013916015625, [1435, 1436]], [442, ".", 0.0947265625, [1436, 1437]], [443, "size", 0.022705078125, [1437, 1441]], [444, "(),", 0.0177001953125, [1441, 1444]], [445, "0", 0.0172119140625, [1444, 1445]], [446, ",", 0.035888671875, [1445, 1446]], [447, "sum", 0.0189208984375, [1446, 1449]], [448, "A", 0.0150146484375, [1449, 1450]], [449, ");", 0.033935546875, [1450, 1452]], [452, "find", 0.0198974609375, [1460, 1465]], [453, "(", 0.0595703125, [1465, 1466]], [454, "B", 0.01025390625, [1466, 1467]], [455, ",", 0.035888671875, [1467, 1468]], [456, "0", 0.017333984375, [1468, 1469]], [457, ",", 0.03564453125, [1469, 1470]], [458, "B", 0.0098876953125, [1470, 1471]], [459, ".", 0.09716796875, [1471, 1472]], [460, "size", 0.0225830078125, [1472, 1476]], [461, "(),", 0.0177001953125, [1476, 1479]], [462, "0", 0.0174560546875, [1479, 1480]], [463, ",", 0.035400390625, [1480, 1481]], [464, "sum", 0.01904296875, [1481, 1484]], [465, "B", 0.00994873046875, [1484, 1485]], [466, ");", 0.03515625, [1485, 1487]], [471, "sort", 0.0196533203125, [1504, 1509]], [472, "(", 0.060302734375, [1509, 1510]], [473, "sum", 0.02099609375, [1510, 1513]], [474, "A", 0.015869140625, [1513, 1514]], [475, ".", 0.0986328125, [1514, 1515]], [476, "begin", 0.03173828125, [1515, 1520]], [477, "(),", 0.017822265625, [1520, 1523]], [478, "sum", 0.0201416015625, [1523, 1526]], [479, "A", 0.01507568359375, [1526, 1527]], [480, ".", 0.0966796875, [1527, 1528]], [481, "end", 0.0225830078125, [1528, 1531]], [482, "());", 0.02294921875, [1531, 1535]], [487, "//", 0.0177001953125, [1553, 1556]], [488, "Step", 0.016845703125, [1556, 1560]], [490, "3", 0.0291748046875, [1561, 1562]], [491, ":", 0.031494140625, [1562, 1563]], [492, "Find", 0.0194091796875, [1563, 1568]], [493, "combinations", 0.0218505859375, [1568, 1581]], [494, "from", 0.025634765625, [1581, 1586]], [495, "sum", 0.017822265625, [1586, 1590]], [496, "A", 0.0145263671875, [1590, 1591]], [497, "&", 0.007568359375, [1591, 1593]], [498, "sum", 0.0184326171875, [1593, 1597]], [499, "B", 0.010498046875, [1597, 1598]], [500, "such", 0.0162353515625, [1598, 1603]], [501, "that", 0.028564453125, [1603, 1608]], [502, "abs", 0.022216796875, [1608, 1612]], [503, "(", 0.0634765625, [1612, 1613]], [504, "sum", 0.0206298828125, [1613, 1616]], [505, "-", 0.042236328125, [1616, 1617]], [506, "go", 0.017333984375, [1617, 1619]], [507, "al", 0.0166015625, [1619, 1621]], [508, ")", 0.0810546875, [1621, 1622]], [509, "is", 0.0216064453125, [1622, 1625]], [510, "minim", 0.0166015625, [1625, 1631]], [511, "ized", 0.021240234375, [1631, 1635]], [516, "int", 0.0240478515625, [1652, 1656]], [517, "an", 0.0244140625, [1656, 1659]], [518, "s", 0.0223388671875, [1659, 1660]], [519, "=", 0.034912109375, [1660, 1661]], [520, "INT", 0.01806640625, [1661, 1664]], [521, "_", 0.040283203125, [1664, 1665]], [522, "MAX", 0.018310546875, [1665, 1668]], [523, ";", 0.034423828125, [1668, 1669]], [528, "for", 0.0263671875, [1686, 1690]], [529, "(", 0.0654296875, [1690, 1691]], [530, "int", 0.022705078125, [1691, 1694]], [531, "i", 0.0159912109375, [1694, 1696]], [532, "=", 0.034423828125, [1696, 1697]], [533, "0", 0.01806640625, [1697, 1698]], [534, ";", 0.031982421875, [1698, 1699]], [535, "i", 0.01806640625, [1699, 1700]], [536, "<", 0.017822265625, [1700, 1701]], [537, "sum", 0.0191650390625, [1701, 1704]], [538, "A", 0.0150146484375, [1704, 1705]], [539, ".", 0.103515625, [1705, 1706]], [540, "size", 0.0233154296875, [1706, 1710]], [541, "();", 0.02880859375, [1710, 1713]], [542, "i", 0.0181884765625, [1713, 1714]], [543, "++", 0.02099609375, [1714, 1716]], [544, "){", 0.033935546875, [1716, 1718]], [547, "int", 0.0228271484375, [1730, 1734]], [548, "s", 0.01708984375, [1734, 1736]], [549, "=", 0.036376953125, [1736, 1737]], [550, "sum", 0.0213623046875, [1737, 1740]], [551, "A", 0.015869140625, [1740, 1741]], [552, "[", 0.0250244140625, [1741, 1742]], [553, "i", 0.02001953125, [1742, 1743]], [554, "];", 0.0301513671875, [1743, 1745]], [557, "int", 0.0247802734375, [1757, 1761]], [558, "l", 0.0167236328125, [1761, 1763]], [559, "=", 0.037109375, [1763, 1764]], [560, "0", 0.0196533203125, [1764, 1765]], [561, ";", 0.03466796875, [1765, 1766]], [564, "int", 0.0240478515625, [1778, 1782]], [565, "r", 0.0181884765625, [1782, 1784]], [566, "=", 0.036865234375, [1784, 1785]], [567, "sum", 0.0213623046875, [1785, 1788]], [568, "B", 0.0120849609375, [1788, 1789]], [569, ".", 0.107421875, [1789, 1790]], [570, "size", 0.0247802734375, [1790, 1794]], [571, "()-", 0.021240234375, [1794, 1797]], [572, "1", 0.046875, [1797, 1798]], [573, ";", 0.0341796875, [1798, 1799]], [576, "while", 0.02783203125, [1811, 1817]], [577, "(", 0.06640625, [1817, 1818]], [578, "l", 0.01226806640625, [1818, 1819]], [579, "<", 0.0191650390625, [1819, 1820]], [580, "=", 0.036376953125, [1820, 1821]], [581, "r", 0.0159912109375, [1821, 1822]], [582, "){", 0.03564453125, [1822, 1824]], [585, "int", 0.0242919921875, [1840, 1844]], [586, "mid", 0.0213623046875, [1844, 1848]], [587, "=", 0.037109375, [1848, 1849]], [588, "l", 0.012451171875, [1849, 1850]], [589, "+", 0.0224609375, [1850, 1851]], [590, "(", 0.068359375, [1851, 1852]], [591, "r", 0.017333984375, [1852, 1853]], [592, "-", 0.04541015625, [1853, 1854]], [593, "l", 0.01385498046875, [1854, 1855]], [594, ")/", 0.0311279296875, [1855, 1857]], [595, "2", 0.05419921875, [1857, 1858]], [596, ";", 0.037353515625, [1858, 1859]], [599, "int", 0.0277099609375, [1875, 1879]], [600, "sum", 0.0267333984375, [1879, 1883]], [601, "=", 0.039794921875, [1883, 1884]], [602, "s", 0.0250244140625, [1884, 1885]], [603, "+", 0.021728515625, [1885, 1886]], [604, "sum", 0.0223388671875, [1886, 1889]], [605, "B", 0.01239013671875, [1889, 1890]], [606, "[", 0.0252685546875, [1890, 1891]], [607, "mid", 0.0172119140625, [1891, 1894]], [608, "];", 0.0296630859375, [1894, 1896]], [611, "if", 0.0296630859375, [1912, 1915]], [612, "(", 0.06982421875, [1915, 1916]], [613, "sum", 0.0216064453125, [1916, 1919]], [614, "==", 0.0257568359375, [1919, 1921]], [615, "go", 0.0179443359375, [1921, 1923]], [616, "al", 0.018310546875, [1923, 1925]], [617, ")", 0.08642578125, [1925, 1926]], [620, "return", 0.037109375, [1946, 1953]], [622, "0", 0.021240234375, [1954, 1955]], [623, ";", 0.039794921875, [1955, 1956]], [626, "an", 0.032958984375, [1972, 1975]], [627, "s", 0.0272216796875, [1975, 1976]], [628, "=", 0.04345703125, [1976, 1977]], [629, "min", 0.0218505859375, [1977, 1980]], [630, "(", 0.0751953125, [1980, 1981]], [631, "ans", 0.0242919921875, [1981, 1984]], [632, ",", 0.046142578125, [1984, 1985]], [633, "abs", 0.0233154296875, [1985, 1988]], [634, "(", 0.0732421875, [1988, 1989]], [635, "sum", 0.022216796875, [1989, 1992]], [636, "-", 0.0478515625, [1992, 1993]], [637, "go", 0.0181884765625, [1993, 1995]], [638, "al", 0.0189208984375, [1995, 1997]], [639, "));", 0.0380859375, [1997, 2000]], [642, "if", 0.031982421875, [2016, 2019]], [643, "(", 0.07421875, [2019, 2020]], [644, "sum", 0.0233154296875, [2020, 2023]], [645, ">", 0.0294189453125, [2023, 2024]], [646, "go", 0.0194091796875, [2024, 2026]], [647, "al", 0.020263671875, [2026, 2028]], [648, "){", 0.04345703125, [2028, 2030]], [651, "r", 0.0225830078125, [2050, 2052]], [652, "=", 0.0439453125, [2052, 2053]], [653, "mid", 0.0208740234375, [2053, 2056]], [654, "-", 0.050537109375, [2056, 2057]], [655, "1", 0.055419921875, [2057, 2058]], [656, ";", 0.039306640625, [2058, 2059]], [659, "}", 0.046875, [2075, 2077]], [662, "else", 0.03173828125, [2093, 2098]], [663, "{", 0.041748046875, [2098, 2099]], [666, "l", 0.0186767578125, [2119, 2121]], [667, "=", 0.043701171875, [2121, 2122]], [668, "mid", 0.0201416015625, [2122, 2125]], [669, "+", 0.0242919921875, [2125, 2126]], [670, "1", 0.0537109375, [2126, 2127]], [671, ";", 0.0419921875, [2127, 2128]], [674, "}", 0.05078125, [2144, 2146]], [678, "}", 0.052001953125, [2162, 2164]], [681, "}", 0.052001953125, [2172, 2174]], [686, "return", 0.043701171875, [2191, 2198]], [687, "an", 0.0322265625, [2198, 2201]], [688, "s", 0.0277099609375, [2201, 2202]], [689, ";", 0.043212890625, [2202, 2203]], [692, "}", 0.052490234375, [2207, 2209]], [694, "};", 0.05029296875, [2210, 2212]]], "coding_first": [[1, "You", 0.0040283203125, [0, 3]], [2, "are", 0.004852294921875, [3, 7]], [3, "an", 0.005584716796875, [7, 10]], [4, "exception", 0.005035400390625, [10, 20]], [5, "ally", 0.004638671875, [20, 24]], [6, "intelligent", 0.004852294921875, [24, 36]], [7, "coding", 0.0179443359375, [36, 43]], [8, "assistant", 0.0038909912109375, [43, 53]], [9, "that", 0.006134033203125, [53, 58]], [10, "consistently", 0.00897216796875, [58, 71]], [11, "delivers", 0.0045166015625, [71, 80]], [12, "accurate", 0.00762939453125, [80, 89]], [13, "and", 0.00885009765625, [89, 93]], [14, "reliable", 0.004119873046875, [93, 102]], [15, "responses", 0.005096435546875, [102, 112]], [16, "to", 0.0078125, [112, 115]], [17, "user", 0.0034942626953125, [115, 120]], [18, "instructions", 0.00439453125, [120, 133]], [19, ".", 0.039794921875, [133, 134]], [23, "@", 0.003875732421875, [143, 145]], [24, "@", 0.00616455078125, [145, 146]], [25, "Inst", 0.0028533935546875, [146, 151]], [26, "ruction", 0.002349853515625, [151, 158]], [29, "You", 0.003143310546875, [166, 170]], [30, "are", 0.004486083984375, [170, 174]], [31, "a", 0.01031494140625, [174, 176]], [32, "program", 0.004791259765625, [176, 184]], [33, "rep", 0.0035247802734375, [184, 188]], [34, "aire", 0.0028228759765625, [188, 192]], [35, "r", 0.0029754638671875, [192, 193]], [36, ".", 0.038818359375, [193, 194]], [37, "Please", 0.01068115234375, [194, 201]], [38, "repair", 0.005126953125, [201, 208]], [39, "the", 0.007781982421875, [208, 212]], [40, "following", 0.015625, [212, 222]], [41, "bug", 0.006500244140625, [222, 226]], [42, "gy", 0.002716064453125, [226, 228]], [43, "program", 0.005035400390625, [228, 236]], [44, ".", 0.03857421875, [236, 237]], [45, "You", 0.0033111572265625, [237, 241]], [46, "are", 0.004364013671875, [241, 245]], [47, "given", 0.00927734375, [245, 251]], [48, "an", 0.005126953125, [251, 254]], [49, "integer", 0.005767822265625, [254, 262]], [50, "array", 0.0062255859375, [262, 268]], [51, "num", 0.0047607421875, [268, 272]], [52, "s", 0.004547119140625, [272, 273]], [53, "and", 0.00927734375, [273, 277]], [54, "an", 0.0050048828125, [277, 280]], [55, "integer", 0.005767822265625, [280, 288]], [56, "goal", 0.00543212890625, [288, 293]], [57, ".", 0.037109375, [293, 294]], [59, "You", 0.003814697265625, [295, 298]], [60, "want", 0.00823974609375, [298, 303]], [61, "to", 0.007659912109375, [303, 306]], [62, "choose", 0.00506591796875, [306, 313]], [63, "a", 0.00994873046875, [313, 315]], [64, "subsequ", 0.00823974609375, [315, 323]], [65, "ence", 0.003753662109375, [323, 327]], [66, "of", 0.007598876953125, [327, 330]], [67, "num", 0.004974365234375, [330, 334]], [68, "s", 0.004547119140625, [334, 335]], [69, "such", 0.00537109375, [335, 340]], [70, "that", 0.006317138671875, [340, 345]], [71, "the", 0.007781982421875, [345, 349]], [72, "sum", 0.004241943359375, [349, 353]], [73, "of", 0.0079345703125, [353, 356]], [74, "its", 0.003662109375, [356, 360]], [75, "elements", 0.005096435546875, [360, 369]], [76, "is", 0.005126953125, [369, 372]], [77, "the", 0.00787353515625, [372, 376]], [78, "closest", 0.005035400390625, [376, 384]], [79, "possible", 0.0042724609375, [384, 393]], [80, "to", 0.0076904296875, [393, 396]], [81, "goal", 0.004974365234375, [396, 401]], [82, ".", 0.037353515625, [401, 402]], [83, "That", 0.006591796875, [402, 407]], [84, "is", 0.004974365234375, [407, 410]], [85, ",", 0.01007080078125, [410, 411]], [86, "if", 0.008544921875, [411, 414]], [87, "the", 0.007720947265625, [414, 418]], [88, "sum", 0.0038909912109375, [418, 422]], [89, "of", 0.00787353515625, [422, 425]], [90, "the", 0.007720947265625, [425, 429]], [91, "subsequ", 0.00714111328125, [429, 437]], [92, "ence", 0.003814697265625, [437, 441]], [93, "'", 0.005218505859375, [441, 442]], [94, "s", 0.0047607421875, [442, 443]], [95, "elements", 0.004974365234375, [443, 452]], [96, "is", 0.005218505859375, [452, 455]], [97, "sum", 0.00408935546875, [455, 459]], [98, ",", 0.01031494140625, [459, 460]], [99, "then", 0.009521484375, [460, 465]], [100, "you", 0.0037994384765625, [465, 469]], [101, "want", 0.0079345703125, [469, 474]], [102, "to", 0.0081787109375, [474, 477]], [103, "minimize", 0.00830078125, [477, 486]], [104, "the", 0.0081787109375, [486, 490]], [105, "absolute", 0.007354736328125, [490, 499]], [106, "difference", 0.006195068359375, [499, 510]], [107, "abs", 0.00506591796875, [510, 514]], [108, "(", 0.0223388671875, [514, 515]], [109, "sum", 0.004364013671875, [515, 518]], [110, "-", 0.004608154296875, [518, 520]], [111, "goal", 0.005279541015625, [520, 525]], [112, ").", 0.0079345703125, [525, 527]], [114, "Return", 0.00439453125, [528, 534]], [115, "the", 0.00823974609375, [534, 538]], [116, "minimum", 0.00408935546875, [538, 546]], [117, "possible", 0.004547119140625, [546, 555]], [118, "value", 0.006134033203125, [555, 561]], [119, "of", 0.00823974609375, [561, 564]], [120, "abs", 0.005706787109375, [564, 568]], [121, "(", 0.0213623046875, [568, 569]], [122, "sum", 0.004791259765625, [569, 572]], [123, "-", 0.00457763671875, [572, 574]], [124, "goal", 0.005828857421875, [574, 579]], [125, ").", 0.00823974609375, [579, 581]], [127, "Note", 0.004852294921875, [582, 586]], [128, "that", 0.006378173828125, [586, 591]], [129, "a", 0.0101318359375, [591, 593]], [130, "subsequ", 0.00927734375, [593, 601]], [131, "ence", 0.0038299560546875, [601, 605]], [132, "of", 0.00811767578125, [605, 608]], [133, "an", 0.005523681640625, [608, 611]], [134, "array", 0.00738525390625, [611, 617]], [135, "is", 0.00531005859375, [617, 620]], [136, "an", 0.005615234375, [620, 623]], [137, "array", 0.007415771484375, [623, 629]], [138, "formed", 0.0126953125, [629, 636]], [139, "by", 0.0067138671875, [636, 639]], [140, "removing", 0.00408935546875, [639, 648]], [141, "some", 0.007080078125, [648, 653]], [142, "elements", 0.00543212890625, [653, 662]], [143, "(", 0.01080322265625, [662, 664]], [144, "poss", 0.005279541015625, [664, 668]], [145, "ibly", 0.0064697265625, [668, 672]], [146, "all", 0.00439453125, [672, 676]], [147, "or", 0.007293701171875, [676, 679]], [148, "none", 0.00860595703125, [679, 684]], [149, ")", 0.03369140625, [684, 685]], [150, "of", 0.008544921875, [685, 688]], [151, "the", 0.0089111328125, [688, 692]], [152, "original", 0.005645751953125, [692, 701]], [153, "array", 0.00732421875, [701, 707]], [154, ".", 0.04296875, [707, 708]], [155, "B", 0.001861572265625, [708, 709]], [156, "ug", 0.003387451171875, [709, 711]], [157, "gy", 0.0036163330078125, [711, 713]], [158, "code", 0.007598876953125, [713, 718]], [159, ":", 0.004638671875, [718, 720]], [160, "class", 0.0084228515625, [720, 726]], [161, "S", 0.003753662109375, [726, 728]], [162, "olution", 0.007720947265625, [728, 735]], [163, "{", 0.017333984375, [735, 737]], [165, "public", 0.00921630859375, [738, 744]], [166, ":", 0.01129150390625, [744, 745]], [169, "void", 0.0098876953125, [749, 754]], [170, "find", 0.00775146484375, [754, 759]], [171, "(", 0.0252685546875, [759, 760]], [172, "vector", 0.00872802734375, [760, 766]], [173, "<", 0.00653076171875, [766, 767]], [174, "int", 0.007080078125, [767, 770]], [175, ">", 0.0084228515625, [770, 771]], [176, "&", 0.0024261474609375, [771, 772]], [177, "v", 0.0030059814453125, [772, 773]], [178, ",", 0.011962890625, [773, 774]], [179, "int", 0.006103515625, [774, 778]], [180, "i", 0.003448486328125, [778, 780]], [181, ",", 0.01153564453125, [780, 781]], [182, "int", 0.00579833984375, [781, 785]], [183, "e", 0.002685546875, [785, 787]], [184, ",", 0.01129150390625, [787, 788]], [185, "int", 0.005859375, [788, 792]], [186, "sum", 0.0045166015625, [792, 796]], [187, ",", 0.01116943359375, [796, 797]], [188, "vector", 0.005157470703125, [797, 804]], [189, "<", 0.00433349609375, [804, 805]], [190, "int", 0.00579833984375, [805, 808]], [191, ">", 0.0068359375, [808, 809]], [192, "&", 0.002197265625, [809, 810]], [193, "sum", 0.00531005859375, [810, 813]], [194, "v", 0.0028839111328125, [813, 814]], [195, "){", 0.01171875, [814, 816]], [198, "if", 0.00982666015625, [824, 827]], [199, "(", 0.022705078125, [827, 828]], [200, "i", 0.00567626953125, [828, 829]], [201, "==", 0.00830078125, [829, 831]], [202, "e", 0.0034942626953125, [831, 832]], [203, "){", 0.011474609375, [832, 834]], [206, "sum", 0.004791259765625, [846, 850]], [207, "v", 0.002960205078125, [850, 851]], [208, ".", 0.040771484375, [851, 852]], [209, "push", 0.005767822265625, [852, 856]], [210, "_", 0.01324462890625, [856, 857]], [211, "back", 0.004669189453125, [857, 861]], [212, "(", 0.023193359375, [861, 862]], [213, "sum", 0.005035400390625, [862, 865]], [214, ");", 0.01129150390625, [865, 867]], [217, "return", 0.01092529296875, [879, 886]], [218, ";", 0.00927734375, [886, 887]], [221, "}", 0.014892578125, [895, 897]], [224, "find", 0.006011962890625, [905, 910]], [225, "(", 0.0238037109375, [910, 911]], [226, "v", 0.0027618408203125, [911, 912]], [227, ",", 0.0113525390625, [912, 913]], [228, "i", 0.0047607421875, [913, 914]], [229, "+", 0.00537109375, [914, 915]], [230, "1", 0.01385498046875, [915, 916]], [231, ",", 0.01141357421875, [916, 917]], [232, "e", 0.0033416748046875, [917, 918]], [233, ",", 0.011474609375, [918, 919]], [234, "sum", 0.004425048828125, [919, 922]], [235, "+", 0.005218505859375, [922, 923]], [236, "v", 0.00274658203125, [923, 924]], [237, "[", 0.006011962890625, [924, 925]], [238, "i", 0.00457763671875, [925, 926]], [239, "],", 0.00494384765625, [926, 928]], [240, "sum", 0.004547119140625, [928, 931]], [241, "v", 0.0027313232421875, [931, 932]], [242, ");", 0.01116943359375, [932, 934]], [245, "find", 0.00592041015625, [942, 947]], [246, "(", 0.0225830078125, [947, 948]], [247, "v", 0.00274658203125, [948, 949]], [248, ",", 0.0113525390625, [949, 950]], [249, "i", 0.004852294921875, [950, 951]], [250, "+", 0.005859375, [951, 952]], [251, "1", 0.01361083984375, [952, 953]], [252, ",", 0.01123046875, [953, 954]], [253, "e", 0.003265380859375, [954, 955]], [254, ",", 0.01116943359375, [955, 956]], [255, "sum", 0.00469970703125, [956, 959]], [256, ",", 0.01123046875, [959, 960]], [257, "sum", 0.004669189453125, [960, 963]], [258, "v", 0.0027008056640625, [963, 964]], [259, ");", 0.0113525390625, [964, 966]], [262, "}", 0.0140380859375, [970, 972]], [269, "int", 0.0068359375, [990, 994]], [270, "min", 0.00469970703125, [994, 998]], [271, "Abs", 0.003936767578125, [998, 1001]], [272, "Diff", 0.0030670166015625, [1001, 1005]], [273, "erence", 0.0042724609375, [1005, 1011]], [274, "(", 0.0230712890625, [1011, 1012]], [275, "vector", 0.00738525390625, [1012, 1018]], [276, "<", 0.00482177734375, [1018, 1019]], [277, "int", 0.006011962890625, [1019, 1022]], [278, ">", 0.007293701171875, [1022, 1023]], [279, "&", 0.00194549560546875, [1023, 1024]], [280, "num", 0.005584716796875, [1024, 1028]], [281, "s", 0.005218505859375, [1028, 1029]], [282, ",", 0.01141357421875, [1029, 1030]], [283, "int", 0.006134033203125, [1030, 1034]], [284, "goal", 0.00579833984375, [1034, 1039]], [285, ")", 0.03369140625, [1039, 1040]], [286, "{", 0.0177001953125, [1040, 1042]], [289, "int", 0.00616455078125, [1050, 1054]], [290, "n", 0.004669189453125, [1054, 1056]], [291, "=", 0.0115966796875, [1056, 1057]], [292, "num", 0.004364013671875, [1057, 1060]], [293, "s", 0.00531005859375, [1060, 1061]], [294, ".", 0.04443359375, [1061, 1062]], [295, "size", 0.006500244140625, [1062, 1066]], [296, "();", 0.009033203125, [1066, 1069]], [301, "//", 0.0067138671875, [1086, 1089]], [302, "Step", 0.003997802734375, [1089, 1093]], [304, "1", 0.01361083984375, [1094, 1095]], [305, ":", 0.0113525390625, [1095, 1096]], [306, "Div", 0.00286865234375, [1096, 1100]], [307, "ide", 0.004547119140625, [1100, 1103]], [308, "num", 0.005615234375, [1103, 1107]], [309, "s", 0.0050048828125, [1107, 1108]], [310, "into", 0.007781982421875, [1108, 1113]], [312, "2", 0.0155029296875, [1114, 1115]], [313, "sub", 0.004150390625, [1115, 1119]], [314, "arr", 0.003936767578125, [1119, 1122]], [315, "ays", 0.004119873046875, [1122, 1125]], [316, "of", 0.0096435546875, [1125, 1128]], [317, "size", 0.00616455078125, [1128, 1133]], [318, "n", 0.004913330078125, [1133, 1135]], [319, "/", 0.0078125, [1135, 1136]], [320, "2", 0.0164794921875, [1136, 1137]], [321, "and", 0.01116943359375, [1137, 1141]], [322, "n", 0.004974365234375, [1141, 1143]], [323, "-", 0.01348876953125, [1143, 1144]], [324, "n", 0.00372314453125, [1144, 1145]], [325, "/", 0.00830078125, [1145, 1146]], [326, "2", 0.016845703125, [1146, 1147]], [331, "vector", 0.005126953125, [1164, 1171]], [332, "<", 0.0048828125, [1171, 1172]], [333, "int", 0.005889892578125, [1172, 1175]], [334, ">", 0.008056640625, [1175, 1176]], [335, "A", 0.003631591796875, [1176, 1177]], [336, ",", 0.0126953125, [1177, 1178]], [337, "B", 0.0022735595703125, [1178, 1179]], [338, ";", 0.00946044921875, [1179, 1180]], [341, "for", 0.00848388671875, [1188, 1192]], [342, "(", 0.024658203125, [1192, 1193]], [343, "int", 0.00714111328125, [1193, 1196]], [344, "i", 0.004058837890625, [1196, 1198]], [345, "=", 0.01287841796875, [1198, 1199]], [346, "0", 0.00537109375, [1199, 1200]], [347, ";", 0.0106201171875, [1200, 1201]], [348, "i", 0.005706787109375, [1201, 1202]], [349, "<", 0.006927490234375, [1202, 1203]], [350, "n", 0.004547119140625, [1203, 1204]], [351, "/", 0.008056640625, [1204, 1205]], [352, "2", 0.0169677734375, [1205, 1206]], [353, ";", 0.01007080078125, [1206, 1207]], [354, "i", 0.00518798828125, [1207, 1208]], [355, "++", 0.00799560546875, [1208, 1210]], [356, ")", 0.034912109375, [1210, 1211]], [359, "A", 0.00433349609375, [1223, 1225]], [360, ".", 0.045654296875, [1225, 1226]], [361, "push", 0.006683349609375, [1226, 1230]], [362, "_", 0.01385498046875, [1230, 1231]], [363, "back", 0.0048828125, [1231, 1235]], [364, "(", 0.0247802734375, [1235, 1236]], [365, "num", 0.0048828125, [1236, 1239]], [366, "s", 0.005279541015625, [1239, 1240]], [367, "[", 0.007110595703125, [1240, 1241]], [368, "i", 0.0048828125, [1241, 1242]], [369, "]);", 0.0118408203125, [1242, 1245]], [372, "for", 0.00872802734375, [1253, 1257]], [373, "(", 0.025390625, [1257, 1258]], [374, "int", 0.00732421875, [1258, 1261]], [375, "i", 0.004364013671875, [1261, 1263]], [376, "=", 0.01251220703125, [1263, 1264]], [377, "n", 0.004486083984375, [1264, 1265]], [378, "/", 0.007659912109375, [1265, 1266]], [379, "2", 0.016357421875, [1266, 1267]], [380, ";", 0.00994873046875, [1267, 1268]], [381, "i", 0.005340576171875, [1268, 1269]], [382, "<", 0.005584716796875, [1269, 1270]], [383, "n", 0.003936767578125, [1270, 1271]], [384, ";", 0.009521484375, [1271, 1272]], [385, "i", 0.0050048828125, [1272, 1273]], [386, "++", 0.00726318359375, [1273, 1275]], [387, ")", 0.03369140625, [1275, 1276]], [390, "B", 0.004150390625, [1288, 1290]], [391, ".", 0.043701171875, [1290, 1291]], [392, "push", 0.006134033203125, [1291, 1295]], [393, "_", 0.0147705078125, [1295, 1296]], [394, "back", 0.004852294921875, [1296, 1300]], [395, "(", 0.0244140625, [1300, 1301]], [396, "num", 0.0042724609375, [1301, 1304]], [397, "s", 0.005340576171875, [1304, 1305]], [398, "[", 0.006439208984375, [1305, 1306]], [399, "i", 0.00457763671875, [1306, 1307]], [400, "]);", 0.0087890625, [1307, 1310]], [405, "//", 0.00628662109375, [1327, 1330]], [406, "Step", 0.0037384033203125, [1330, 1334]], [408, "2", 0.01611328125, [1335, 1336]], [409, ":", 0.01116943359375, [1336, 1337]], [410, "Find", 0.006195068359375, [1337, 1342]], [411, "all", 0.004486083984375, [1342, 1346]], [412, "possible", 0.004852294921875, [1346, 1355]], [413, "subset", 0.006927490234375, [1355, 1362]], [414, "sums", 0.00775146484375, [1362, 1367]], [415, "of", 0.009033203125, [1367, 1370]], [416, "A", 0.003875732421875, [1370, 1372]], [417, "and", 0.01031494140625, [1372, 1376]], [418, "B", 0.0038909912109375, [1376, 1378]], [423, "vector", 0.006256103515625, [1395, 1402]], [424, "<", 0.005126953125, [1402, 1403]], [425, "int", 0.006500244140625, [1403, 1406]], [426, ">", 0.007354736328125, [1406, 1407]], [427, "sum", 0.005523681640625, [1407, 1410]], [428, "A", 0.003631591796875, [1410, 1411]], [429, ",", 0.01116943359375, [1411, 1412]], [430, "sum", 0.005401611328125, [1412, 1415]], [431, "B", 0.0021820068359375, [1415, 1416]], [432, ";", 0.0086669921875, [1416, 1417]], [435, "find", 0.00665283203125, [1425, 1430]], [436, "(", 0.0228271484375, [1430, 1431]], [437, "A", 0.0035552978515625, [1431, 1432]], [438, ",", 0.01116943359375, [1432, 1433]], [439, "0", 0.005096435546875, [1433, 1434]], [440, ",", 0.01129150390625, [1434, 1435]], [441, "A", 0.00360107421875, [1435, 1436]], [442, ".", 0.0419921875, [1436, 1437]], [443, "size", 0.00689697265625, [1437, 1441]], [444, "(),", 0.006195068359375, [1441, 1444]], [445, "0", 0.005340576171875, [1444, 1445]], [446, ",", 0.0115966796875, [1445, 1446]], [447, "sum", 0.005615234375, [1446, 1449]], [448, "A", 0.003692626953125, [1449, 1450]], [449, ");", 0.01251220703125, [1450, 1452]], [452, "find", 0.00714111328125, [1460, 1465]], [453, "(", 0.0240478515625, [1465, 1466]], [454, "B", 0.0022125244140625, [1466, 1467]], [455, ",", 0.011962890625, [1467, 1468]], [456, "0", 0.00543212890625, [1468, 1469]], [457, ",", 0.0120849609375, [1469, 1470]], [458, "B", 0.0021820068359375, [1470, 1471]], [459, ".", 0.04541015625, [1471, 1472]], [460, "size", 0.007110595703125, [1472, 1476]], [461, "(),", 0.006439208984375, [1476, 1479]], [462, "0", 0.0054931640625, [1479, 1480]], [463, ",", 0.01251220703125, [1480, 1481]], [464, "sum", 0.0059814453125, [1481, 1484]], [465, "B", 0.00225830078125, [1484, 1485]], [466, ");", 0.01458740234375, [1485, 1487]], [471, "sort", 0.005767822265625, [1504, 1509]], [472, "(", 0.02734375, [1509, 1510]], [473, "sum", 0.0064697265625, [1510, 1513]], [474, "A", 0.003936767578125, [1513, 1514]], [475, ".", 0.048095703125, [1514, 1515]], [476, "begin", 0.0166015625, [1515, 1520]], [477, "(),", 0.006683349609375, [1520, 1523]], [478, "sum", 0.006072998046875, [1523, 1526]], [479, "A", 0.00372314453125, [1526, 1527]], [480, ".", 0.046630859375, [1527, 1528]], [481, "end", 0.006988525390625, [1528, 1531]], [482, "());", 0.01123046875, [1531, 1535]], [487, "//", 0.008056640625, [1553, 1556]], [488, "Step", 0.004852294921875, [1556, 1560]], [490, "3", 0.00933837890625, [1561, 1562]], [491, ":", 0.0128173828125, [1562, 1563]], [492, "Find", 0.00872802734375, [1563, 1568]], [493, "combinations", 0.0107421875, [1568, 1581]], [494, "from", 0.009765625, [1581, 1586]], [495, "sum", 0.006683349609375, [1586, 1590]], [496, "A", 0.00408935546875, [1590, 1591]], [497, "&", 0.0025177001953125, [1591, 1593]], [498, "sum", 0.0068359375, [1593, 1597]], [499, "B", 0.0026397705078125, [1597, 1598]], [500, "such", 0.00909423828125, [1598, 1603]], [501, "that", 0.0084228515625, [1603, 1608]], [502, "abs", 0.0084228515625, [1608, 1612]], [503, "(", 0.02734375, [1612, 1613]], [504, "sum", 0.006500244140625, [1613, 1616]], [505, "-", 0.013916015625, [1616, 1617]], [506, "go", 0.006195068359375, [1617, 1619]], [507, "al", 0.004241943359375, [1619, 1621]], [508, ")", 0.03466796875, [1621, 1622]], [509, "is", 0.00628662109375, [1622, 1625]], [510, "minim", 0.005096435546875, [1625, 1631]], [511, "ized", 0.00579833984375, [1631, 1635]], [516, "int", 0.008056640625, [1652, 1656]], [517, "an", 0.007659912109375, [1656, 1659]], [518, "s", 0.005859375, [1659, 1660]], [519, "=", 0.01312255859375, [1660, 1661]], [520, "INT", 0.00531005859375, [1661, 1664]], [521, "_", 0.0159912109375, [1664, 1665]], [522, "MAX", 0.006805419921875, [1665, 1668]], [523, ";", 0.01202392578125, [1668, 1669]], [528, "for", 0.0093994140625, [1686, 1690]], [529, "(", 0.0303955078125, [1690, 1691]], [530, "int", 0.007354736328125, [1691, 1694]], [531, "i", 0.00445556640625, [1694, 1696]], [532, "=", 0.0140380859375, [1696, 1697]], [533, "0", 0.005767822265625, [1697, 1698]], [534, ";", 0.01116943359375, [1698, 1699]], [535, "i", 0.005462646484375, [1699, 1700]], [536, "<", 0.005828857421875, [1700, 1701]], [537, "sum", 0.00537109375, [1701, 1704]], [538, "A", 0.0042724609375, [1704, 1705]], [539, ".", 0.04931640625, [1705, 1706]], [540, "size", 0.007110595703125, [1706, 1710]], [541, "();", 0.01007080078125, [1710, 1713]], [542, "i", 0.005218505859375, [1713, 1714]], [543, "++", 0.00750732421875, [1714, 1716]], [544, "){", 0.01239013671875, [1716, 1718]], [547, "int", 0.00677490234375, [1730, 1734]], [548, "s", 0.004547119140625, [1734, 1736]], [549, "=", 0.01287841796875, [1736, 1737]], [550, "sum", 0.005523681640625, [1737, 1740]], [551, "A", 0.0037078857421875, [1740, 1741]], [552, "[", 0.0069580078125, [1741, 1742]], [553, "i", 0.005157470703125, [1742, 1743]], [554, "];", 0.00958251953125, [1743, 1745]], [557, "int", 0.00750732421875, [1757, 1761]], [558, "l", 0.0037994384765625, [1761, 1763]], [559, "=", 0.0125732421875, [1763, 1764]], [560, "0", 0.005096435546875, [1764, 1765]], [561, ";", 0.00970458984375, [1765, 1766]], [564, "int", 0.00787353515625, [1778, 1782]], [565, "r", 0.004425048828125, [1782, 1784]], [566, "=", 0.01287841796875, [1784, 1785]], [567, "sum", 0.00579833984375, [1785, 1788]], [568, "B", 0.002410888671875, [1788, 1789]], [569, ".", 0.046142578125, [1789, 1790]], [570, "size", 0.00762939453125, [1790, 1794]], [571, "()-", 0.0098876953125, [1794, 1797]], [572, "1", 0.01507568359375, [1797, 1798]], [573, ";", 0.0106201171875, [1798, 1799]], [576, "while", 0.015380859375, [1811, 1817]], [577, "(", 0.026123046875, [1817, 1818]], [578, "l", 0.00262451171875, [1818, 1819]], [579, "<", 0.005615234375, [1819, 1820]], [580, "=", 0.0133056640625, [1820, 1821]], [581, "r", 0.00390625, [1821, 1822]], [582, "){", 0.01422119140625, [1822, 1824]], [585, "int", 0.0076904296875, [1840, 1844]], [586, "mid", 0.00634765625, [1844, 1848]], [587, "=", 0.01361083984375, [1848, 1849]], [588, "l", 0.002593994140625, [1849, 1850]], [589, "+", 0.006439208984375, [1850, 1851]], [590, "(", 0.0263671875, [1851, 1852]], [591, "r", 0.004058837890625, [1852, 1853]], [592, "-", 0.01422119140625, [1853, 1854]], [593, "l", 0.0027618408203125, [1854, 1855]], [594, ")/", 0.01434326171875, [1855, 1857]], [595, "2", 0.017578125, [1857, 1858]], [596, ";", 0.010986328125, [1858, 1859]], [599, "int", 0.00885009765625, [1875, 1879]], [600, "sum", 0.006256103515625, [1879, 1883]], [601, "=", 0.01416015625, [1883, 1884]], [602, "s", 0.006134033203125, [1884, 1885]], [603, "+", 0.006988525390625, [1885, 1886]], [604, "sum", 0.00628662109375, [1886, 1889]], [605, "B", 0.0024871826171875, [1889, 1890]], [606, "[", 0.0076904296875, [1890, 1891]], [607, "mid", 0.004547119140625, [1891, 1894]], [608, "];", 0.01092529296875, [1894, 1896]], [611, "if", 0.0113525390625, [1912, 1915]], [612, "(", 0.0272216796875, [1915, 1916]], [613, "sum", 0.006011962890625, [1916, 1919]], [614, "==", 0.01068115234375, [1919, 1921]], [615, "go", 0.006561279296875, [1921, 1923]], [616, "al", 0.0042724609375, [1923, 1925]], [617, ")", 0.038330078125, [1925, 1926]], [620, "return", 0.0152587890625, [1946, 1953]], [622, "0", 0.005828857421875, [1954, 1955]], [623, ";", 0.0115966796875, [1955, 1956]], [626, "an", 0.008056640625, [1972, 1975]], [627, "s", 0.00616455078125, [1975, 1976]], [628, "=", 0.0145263671875, [1976, 1977]], [629, "min", 0.005828857421875, [1977, 1980]], [630, "(", 0.0291748046875, [1980, 1981]], [631, "ans", 0.0059814453125, [1981, 1984]], [632, ",", 0.0135498046875, [1984, 1985]], [633, "abs", 0.006011962890625, [1985, 1988]], [634, "(", 0.0284423828125, [1988, 1989]], [635, "sum", 0.00616455078125, [1989, 1992]], [636, "-", 0.0146484375, [1992, 1993]], [637, "go", 0.0072021484375, [1993, 1995]], [638, "al", 0.00433349609375, [1995, 1997]], [639, "));", 0.01544189453125, [1997, 2000]], [642, "if", 0.01171875, [2016, 2019]], [643, "(", 0.03173828125, [2019, 2020]], [644, "sum", 0.006805419921875, [2020, 2023]], [645, ">", 0.0093994140625, [2023, 2024]], [646, "go", 0.0081787109375, [2024, 2026]], [647, "al", 0.0050048828125, [2026, 2028]], [648, "){", 0.0181884765625, [2028, 2030]], [651, "r", 0.0052490234375, [2050, 2052]], [652, "=", 0.014404296875, [2052, 2053]], [653, "mid", 0.004730224609375, [2053, 2056]], [654, "-", 0.0152587890625, [2056, 2057]], [655, "1", 0.015625, [2057, 2058]], [656, ";", 0.0101318359375, [2058, 2059]], [659, "}", 0.0179443359375, [2075, 2077]], [662, "else", 0.01031494140625, [2093, 2098]], [663, "{", 0.01202392578125, [2098, 2099]], [666, "l", 0.0040283203125, [2119, 2121]], [667, "=", 0.013916015625, [2121, 2122]], [668, "mid", 0.0045166015625, [2122, 2125]], [669, "+", 0.006561279296875, [2125, 2126]], [670, "1", 0.0147705078125, [2126, 2127]], [671, ";", 0.01165771484375, [2127, 2128]], [674, "}", 0.0216064453125, [2144, 2146]], [678, "}", 0.021240234375, [2162, 2164]], [681, "}", 0.0201416015625, [2172, 2174]], [686, "return", 0.0137939453125, [2191, 2198]], [687, "an", 0.007415771484375, [2198, 2201]], [688, "s", 0.005645751953125, [2201, 2202]], [689, ";", 0.010986328125, [2202, 2203]], [692, "}", 0.0185546875, [2207, 2209]], [694, "};", 0.020751953125, [2210, 2212]]], "reading_last": [[1, "You", 0.046142578125, [0, 3]], [2, "are", 0.00799560546875, [3, 7]], [3, "an", 0.007110595703125, [7, 10]], [4, "exception", 0.01092529296875, [10, 20]], [5, "ally", 0.00151824951171875, [20, 24]], [6, "intelligent", 0.0025482177734375, [24, 36]], [7, "coding", 0.006683349609375, [36, 43]], [8, "assistant", 0.007293701171875, [43, 53]], [9, "that", 0.0019989013671875, [53, 58]], [10, "consistently", 0.0009307861328125, [58, 71]], [11, "delivers", 0.0013427734375, [71, 80]], [12, "accurate", 0.0015869140625, [80, 89]], [13, "and", 0.00142669677734375, [89, 93]], [14, "reliable", 0.0013427734375, [93, 102]], [15, "responses", 0.00128936767578125, [102, 112]], [16, "to", 0.00112152099609375, [112, 115]], [17, "user", 0.00469970703125, [115, 120]], [18, "instructions", 0.00152587890625, [120, 133]], [19, ".", 0.0045166015625, [133, 134]], [23, "@", 0.0201416015625, [143, 145]], [24, "@", 0.0133056640625, [145, 146]], [25, "Inst", 0.015625, [146, 151]], [26, "ruction", 0.0380859375, [151, 158]], [29, "You", 0.0216064453125, [166, 170]], [30, "are", 0.0048828125, [170, 174]], [31, "a", 0.00933837890625, [174, 176]], [32, "program", 0.01397705078125, [176, 184]], [33, "rep", 0.050048828125, [184, 188]], [34, "aire", 0.07275390625, [188, 192]], [35, "r", 0.0250244140625, [192, 193]], [36, ".", 0.006195068359375, [193, 194]], [37, "Please", 0.014892578125, [194, 201]], [38, "repair", 0.1005859375, [201, 208]], [39, "the", 0.04736328125, [208, 212]], [40, "following", 0.04248046875, [212, 222]], [41, "bug", 0.1884765625, [222, 226]], [42, "gy", 0.045654296875, [226, 228]], [43, "program", 0.0849609375, [228, 236]], [44, ".", 0.0206298828125, [236, 237]], [45, "You", 0.019287109375, [237, 241]], [46, "are", 0.006134033203125, [241, 245]], [47, "given", 0.015625, [245, 251]], [48, "an", 0.01507568359375, [251, 254]], [49, "integer", 0.020263671875, [254, 262]], [50, "array", 0.02587890625, [262, 268]], [51, "num", 0.05712890625, [268, 272]], [52, "s", 0.0133056640625, [272, 273]], [53, "and", 0.0018463134765625, [273, 277]], [54, "an", 0.002197265625, [277, 280]], [55, "integer", 0.00185394287109375, [280, 288]], [56, "goal", 0.0267333984375, [288, 293]], [57, ".", 0.006256103515625, [293, 294]], [59, "You", 0.01220703125, [295, 298]], [60, "want", 0.0024261474609375, [298, 303]], [61, "to", 0.002838134765625, [303, 306]], [62, "choose", 0.0030670166015625, [306, 313]], [63, "a", 0.0020599365234375, [313, 315]], [64, "subsequ", 0.09033203125, [315, 323]], [65, "ence", 0.00909423828125, [323, 327]], [66, "of", 0.00164794921875, [327, 330]], [67, "num", 0.005462646484375, [330, 334]], [68, "s", 0.0022125244140625, [334, 335]], [69, "such", 0.00213623046875, [335, 340]], [70, "that", 0.00164031982421875, [340, 345]], [71, "the", 0.0023651123046875, [345, 349]], [72, "sum", 0.00860595703125, [349, 353]], [73, "of", 0.000949859619140625, [353, 356]], [74, "its", 0.0034027099609375, [356, 360]], [75, "elements", 0.0023956298828125, [360, 369]], [76, "is", 0.004852294921875, [369, 372]], [77, "the", 0.00089263916015625, [372, 376]], [78, "closest", 0.01025390625, [376, 384]], [79, "possible", 0.00167083740234375, [384, 393]], [80, "to", 0.001556396484375, [393, 396]], [81, "goal", 0.005950927734375, [396, 401]], [82, ".", 0.00372314453125, [401, 402]], [83, "That", 0.00171661376953125, [402, 407]], [84, "is", 0.00110626220703125, [407, 410]], [85, ",", 0.00159454345703125, [410, 411]], [86, "if", 0.00118255615234375, [411, 414]], [87, "the", 0.001068115234375, [414, 418]], [88, "sum", 0.002471923828125, [418, 422]], [89, "of", 0.00057220458984375, [422, 425]], [90, "the", 0.000713348388671875, [425, 429]], [91, "subsequ", 0.02294921875, [429, 437]], [92, "ence", 0.0016632080078125, [437, 441]], [93, "'", 0.001739501953125, [441, 442]], [94, "s", 0.00061798095703125, [442, 443]], [95, "elements", 0.000476837158203125, [443, 452]], [96, "is", 0.0015106201171875, [452, 455]], [97, "sum", 0.00103759765625, [455, 459]], [98, ",", 0.000713348388671875, [459, 460]], [99, "then", 0.000789642333984375, [460, 465]], [100, "you", 0.0032806396484375, [465, 469]], [101, "want", 0.0009918212890625, [469, 474]], [102, "to", 0.000946044921875, [474, 477]], [103, "minimize", 0.0024566650390625, [477, 486]], [104, "the", 0.000888824462890625, [486, 490]], [105, "absolute", 0.002777099609375, [490, 499]], [106, "difference", 0.0026397705078125, [499, 510]], [107, "abs", 0.004058837890625, [510, 514]], [108, "(", 0.000766754150390625, [514, 515]], [109, "sum", 0.000675201416015625, [515, 518]], [110, "-", 0.000606536865234375, [518, 520]], [111, "goal", 0.003143310546875, [520, 525]], [112, ").", 0.00194549560546875, [525, 527]], [114, "Return", 0.0050048828125, [528, 534]], [115, "the", 0.006866455078125, [534, 538]], [116, "minimum", 0.00360107421875, [538, 546]], [117, "possible", 0.006072998046875, [546, 555]], [118, "value", 0.01202392578125, [555, 561]], [119, "of", 0.0025177001953125, [561, 564]], [120, "abs", 0.047119140625, [564, 568]], [121, "(", 0.00188446044921875, [568, 569]], [122, "sum", 0.003814697265625, [569, 572]], [123, "-", 0.000762939453125, [572, 574]], [124, "goal", 0.0069580078125, [574, 579]], [125, ").", 0.00555419921875, [579, 581]], [127, "Note", 0.002349853515625, [582, 586]], [128, "that", 0.002197265625, [586, 591]], [129, "a", 0.003143310546875, [591, 593]], [130, "subsequ", 0.060302734375, [593, 601]], [131, "ence", 0.002044677734375, [601, 605]], [132, "of", 0.001007080078125, [605, 608]], [133, "an", 0.0003871917724609375, [608, 611]], [134, "array", 0.00167083740234375, [611, 617]], [135, "is", 0.0011749267578125, [617, 620]], [136, "an", 0.000640869140625, [620, 623]], [137, "array", 0.001251220703125, [623, 629]], [138, "formed", 0.0014801025390625, [629, 636]], [139, "by", 0.00095367431640625, [636, 639]], [140, "removing", 0.0021820068359375, [639, 648]], [141, "some", 0.000705718994140625, [648, 653]], [142, "elements", 0.00213623046875, [653, 662]], [143, "(", 0.0013580322265625, [662, 664]], [144, "poss", 0.000637054443359375, [664, 668]], [145, "ibly", 0.00046539306640625, [668, 672]], [146, "all", 0.0016632080078125, [672, 676]], [147, "or", 0.00103759765625, [676, 679]], [148, "none", 0.00112152099609375, [679, 684]], [149, ")", 0.0003108978271484375, [684, 685]], [150, "of", 0.0005340576171875, [685, 688]], [151, "the", 0.001190185546875, [688, 692]], [152, "original", 0.00121307373046875, [692, 701]], [153, "array", 0.00140380859375, [701, 707]], [154, ".", 0.00180816650390625, [707, 708]], [155, "B", 0.019287109375, [708, 709]], [156, "ug", 0.373046875, [709, 711]], [157, "gy", 0.1396484375, [711, 713]], [158, "code", 0.10009765625, [713, 718]], [159, ":", 0.025634765625, [718, 720]], [160, "class", 0.058837890625, [720, 726]], [161, "S", 0.037109375, [726, 728]], [162, "olution", 0.03125, [728, 735]], [163, "{", 0.0042724609375, [735, 737]], [165, "public", 0.005035400390625, [738, 744]], [166, ":", 0.0029144287109375, [744, 745]], [169, "void", 0.0172119140625, [749, 754]], [170, "find", 0.01409912109375, [754, 759]], [171, "(", 0.004852294921875, [759, 760]], [172, "vector", 0.01055908203125, [760, 766]], [173, "<", 0.0021209716796875, [766, 767]], [174, "int", 0.00390625, [767, 770]], [175, ">", 0.001861572265625, [770, 771]], [176, "&", 0.00189971923828125, [771, 772]], [177, "v", 0.005950927734375, [772, 773]], [178, ",", 0.00116729736328125, [773, 774]], [179, "int", 0.00128936767578125, [774, 778]], [180, "i", 0.00171661376953125, [778, 780]], [181, ",", 0.000804901123046875, [780, 781]], [182, "int", 0.0010223388671875, [781, 785]], [183, "e", 0.003448486328125, [785, 787]], [184, ",", 0.000774383544921875, [787, 788]], [185, "int", 0.000949859619140625, [788, 792]], [186, "sum", 0.00185394287109375, [792, 796]], [187, ",", 0.000751495361328125, [796, 797]], [188, "vector", 0.0010528564453125, [797, 804]], [189, "<", 0.000865936279296875, [804, 805]], [190, "int", 0.00188446044921875, [805, 808]], [191, ">", 0.00038909912109375, [808, 809]], [192, "&", 0.000885009765625, [809, 810]], [193, "sum", 0.004638671875, [810, 813]], [194, "v", 0.005218505859375, [813, 814]], [195, "){", 0.00186920166015625, [814, 816]], [198, "if", 0.0020294189453125, [824, 827]], [199, "(", 0.00095367431640625, [827, 828]], [200, "i", 0.00124359130859375, [828, 829]], [201, "==", 0.00122833251953125, [829, 831]], [202, "e", 0.0013580322265625, [831, 832]], [203, "){", 0.000934600830078125, [832, 834]], [206, "sum", 0.00086212158203125, [846, 850]], [207, "v", 0.001068115234375, [850, 851]], [208, ".", 0.00165557861328125, [851, 852]], [209, "push", 0.0031585693359375, [852, 856]], [210, "_", 0.004150390625, [856, 857]], [211, "back", 0.00058746337890625, [857, 861]], [212, "(", 0.0003490447998046875, [861, 862]], [213, "sum", 0.000827789306640625, [862, 865]], [214, ");", 0.00140380859375, [865, 867]], [217, "return", 0.001983642578125, [879, 886]], [218, ";", 0.00154876708984375, [886, 887]], [221, "}", 0.0012359619140625, [895, 897]], [224, "find", 0.002838134765625, [905, 910]], [225, "(", 0.001312255859375, [910, 911]], [226, "v", 0.0013885498046875, [911, 912]], [227, ",", 0.00086212158203125, [912, 913]], [228, "i", 0.000701904296875, [913, 914]], [229, "+", 0.0006256103515625, [914, 915]], [230, "1", 0.000728607177734375, [915, 916]], [231, ",", 0.00048828125, [916, 917]], [232, "e", 0.000843048095703125, [917, 918]], [233, ",", 0.000354766845703125, [918, 919]], [234, "sum", 0.00066375732421875, [919, 922]], [235, "+", 0.0005035400390625, [922, 923]], [236, "v", 0.000728607177734375, [923, 924]], [237, "[", 0.0003204345703125, [924, 925]], [238, "i", 0.000507354736328125, [925, 926]], [239, "],", 0.0006866455078125, [926, 928]], [240, "sum", 0.000896453857421875, [928, 931]], [241, "v", 0.000698089599609375, [931, 932]], [242, ");", 0.00299072265625, [932, 934]], [245, "find", 0.005462646484375, [942, 947]], [246, "(", 0.000637054443359375, [947, 948]], [247, "v", 0.001953125, [948, 949]], [248, ",", 0.0003795623779296875, [949, 950]], [249, "i", 0.0003452301025390625, [950, 951]], [250, "+", 0.0002460479736328125, [951, 952]], [251, "1", 0.000423431396484375, [952, 953]], [252, ",", 0.00025177001953125, [953, 954]], [253, "e", 0.0003299713134765625, [954, 955]], [254, ",", 0.0002803802490234375, [955, 956]], [255, "sum", 0.00061798095703125, [956, 959]], [256, ",", 0.000461578369140625, [959, 960]], [257, "sum", 0.0019683837890625, [960, 963]], [258, "v", 0.000720977783203125, [963, 964]], [259, ");", 0.004486083984375, [964, 966]], [262, "}", 0.00445556640625, [970, 972]], [269, "int", 0.01324462890625, [990, 994]], [270, "min", 0.0235595703125, [994, 998]], [271, "Abs", 0.00830078125, [998, 1001]], [272, "Diff", 0.021728515625, [1001, 1005]], [273, "erence", 0.00640869140625, [1005, 1011]], [274, "(", 0.0027008056640625, [1011, 1012]], [275, "vector", 0.0026702880859375, [1012, 1018]], [276, "<", 0.004150390625, [1018, 1019]], [277, "int", 0.00286865234375, [1019, 1022]], [278, ">", 0.00112152099609375, [1022, 1023]], [279, "&", 0.00122833251953125, [1023, 1024]], [280, "num", 0.01202392578125, [1024, 1028]], [281, "s", 0.00579833984375, [1028, 1029]], [282, ",", 0.00099945068359375, [1029, 1030]], [283, "int", 0.0018157958984375, [1030, 1034]], [284, "goal", 0.00799560546875, [1034, 1039]], [285, ")", 0.0038909912109375, [1039, 1040]], [286, "{", 0.00341796875, [1040, 1042]], [289, "int", 0.0015716552734375, [1050, 1054]], [290, "n", 0.0032501220703125, [1054, 1056]], [291, "=", 0.0018157958984375, [1056, 1057]], [292, "num", 0.1162109375, [1057, 1060]], [293, "s", 0.00179290771484375, [1060, 1061]], [294, ".", 0.001434326171875, [1061, 1062]], [295, "size", 0.00116729736328125, [1062, 1066]], [296, "();", 0.0011749267578125, [1066, 1069]], [301, "//", 0.01165771484375, [1086, 1089]], [302, "Step", 0.03173828125, [1089, 1093]], [304, "1", 0.01007080078125, [1094, 1095]], [305, ":", 0.004913330078125, [1095, 1096]], [306, "Div", 0.006256103515625, [1096, 1100]], [307, "ide", 0.006103515625, [1100, 1103]], [308, "num", 0.0272216796875, [1103, 1107]], [309, "s", 0.01153564453125, [1107, 1108]], [310, "into", 0.0034332275390625, [1108, 1113]], [312, "2", 0.00445556640625, [1114, 1115]], [313, "sub", 0.0086669921875, [1115, 1119]], [314, "arr", 0.00946044921875, [1119, 1122]], [315, "ays", 0.00347900390625, [1122, 1125]], [316, "of", 0.003173828125, [1125, 1128]], [317, "size", 0.009765625, [1128, 1133]], [318, "n", 0.002593994140625, [1133, 1135]], [319, "/", 0.0013885498046875, [1135, 1136]], [320, "2", 0.002593994140625, [1136, 1137]], [321, "and", 0.00171661376953125, [1137, 1141]], [322, "n", 0.00142669677734375, [1141, 1143]], [323, "-", 0.00098419189453125, [1143, 1144]], [324, "n", 0.0006561279296875, [1144, 1145]], [325, "/", 0.00043487548828125, [1145, 1146]], [326, "2", 0.0025177001953125, [1146, 1147]], [331, "vector", 0.001953125, [1164, 1171]], [332, "<", 0.000926971435546875, [1171, 1172]], [333, "int", 0.00133514404296875, [1172, 1175]], [334, ">", 0.00116729736328125, [1175, 1176]], [335, "A", 0.00830078125, [1176, 1177]], [336, ",", 0.001251220703125, [1177, 1178]], [337, "B", 0.0028228759765625, [1178, 1179]], [338, ";", 0.00153350830078125, [1179, 1180]], [341, "for", 0.0030975341796875, [1188, 1192]], [342, "(", 0.0019378662109375, [1192, 1193]], [343, "int", 0.005279541015625, [1193, 1196]], [344, "i", 0.00106048583984375, [1196, 1198]], [345, "=", 0.000705718994140625, [1198, 1199]], [346, "0", 0.0016021728515625, [1199, 1200]], [347, ";", 0.0028076171875, [1200, 1201]], [348, "i", 0.001953125, [1201, 1202]], [349, "<", 0.00119781494140625, [1202, 1203]], [350, "n", 0.0013885498046875, [1203, 1204]], [351, "/", 0.00079345703125, [1204, 1205]], [352, "2", 0.001556396484375, [1205, 1206]], [353, ";", 0.00087738037109375, [1206, 1207]], [354, "i", 0.000675201416015625, [1207, 1208]], [355, "++", 0.000732421875, [1208, 1210]], [356, ")", 0.000522613525390625, [1210, 1211]], [359, "A", 0.00189208984375, [1223, 1225]], [360, ".", 0.0016021728515625, [1225, 1226]], [361, "push", 0.0020904541015625, [1226, 1230]], [362, "_", 0.0016937255859375, [1230, 1231]], [363, "back", 0.000637054443359375, [1231, 1235]], [364, "(", 0.000331878662109375, [1235, 1236]], [365, "num", 0.002532958984375, [1236, 1239]], [366, "s", 0.0014190673828125, [1239, 1240]], [367, "[", 0.0003871917724609375, [1240, 1241]], [368, "i", 0.00078582763671875, [1241, 1242]], [369, "]);", 0.000965118408203125, [1242, 1245]], [372, "for", 0.00125885009765625, [1253, 1257]], [373, "(", 0.000247955322265625, [1257, 1258]], [374, "int", 0.000701904296875, [1258, 1261]], [375, "i", 0.000507354736328125, [1261, 1263]], [376, "=", 0.00024127960205078125, [1263, 1264]], [377, "n", 0.0003795623779296875, [1264, 1265]], [378, "/", 0.00010395050048828125, [1265, 1266]], [379, "2", 0.000518798828125, [1266, 1267]], [380, ";", 0.00032806396484375, [1267, 1268]], [381, "i", 0.0002899169921875, [1268, 1269]], [382, "<", 0.00016880035400390625, [1269, 1270]], [383, "n", 0.00040435791015625, [1270, 1271]], [384, ";", 0.00022411346435546875, [1271, 1272]], [385, "i", 0.000156402587890625, [1272, 1273]], [386, "++", 0.0002994537353515625, [1273, 1275]], [387, ")", 0.0003185272216796875, [1275, 1276]], [390, "B", 0.00103759765625, [1288, 1290]], [391, ".", 0.0004138946533203125, [1290, 1291]], [392, "push", 0.00118255615234375, [1291, 1295]], [393, "_", 0.1044921875, [1295, 1296]], [394, "back", 0.0003147125244140625, [1296, 1300]], [395, "(", 0.00665283203125, [1300, 1301]], [396, "num", 0.004180908203125, [1301, 1304]], [397, "s", 0.00024318695068359375, [1304, 1305]], [398, "[", 0.00014972686767578125, [1305, 1306]], [399, "i", 0.000720977783203125, [1306, 1307]], [400, "]);", 0.00095367431640625, [1307, 1310]], [405, "//", 0.004364013671875, [1327, 1330]], [406, "Step", 0.005889892578125, [1330, 1334]], [408, "2", 0.0028228759765625, [1335, 1336]], [409, ":", 0.0030670166015625, [1336, 1337]], [410, "Find", 0.0030975341796875, [1337, 1342]], [411, "all", 0.007232666015625, [1342, 1346]], [412, "possible", 0.006072998046875, [1346, 1355]], [413, "subset", 0.00921630859375, [1355, 1362]], [414, "sums", 0.0118408203125, [1362, 1367]], [415, "of", 0.002166748046875, [1367, 1370]], [416, "A", 0.0037078857421875, [1370, 1372]], [417, "and", 0.00164794921875, [1372, 1376]], [418, "B", 0.0020751953125, [1376, 1378]], [423, "vector", 0.0010833740234375, [1395, 1402]], [424, "<", 0.00055694580078125, [1402, 1403]], [425, "int", 0.0007171630859375, [1403, 1406]], [426, ">", 0.00157928466796875, [1406, 1407]], [427, "sum", 0.0023956298828125, [1407, 1410]], [428, "A", 0.0023193359375, [1410, 1411]], [429, ",", 0.000621795654296875, [1411, 1412]], [430, "sum", 0.00189971923828125, [1412, 1415]], [431, "B", 0.00107574462890625, [1415, 1416]], [432, ";", 0.000560760498046875, [1416, 1417]], [435, "find", 0.0023651123046875, [1425, 1430]], [436, "(", 0.000545501708984375, [1430, 1431]], [437, "A", 0.0005340576171875, [1431, 1432]], [438, ",", 0.0004177093505859375, [1432, 1433]], [439, "0", 0.000335693359375, [1433, 1434]], [440, ",", 0.0003757476806640625, [1434, 1435]], [441, "A", 0.000362396240234375, [1435, 1436]], [442, ".", 0.00074005126953125, [1436, 1437]], [443, "size", 0.0004863739013671875, [1437, 1441]], [444, "(),", 0.000286102294921875, [1441, 1444]], [445, "0", 0.0003204345703125, [1444, 1445]], [446, ",", 0.0003604888916015625, [1445, 1446]], [447, "sum", 0.0016326904296875, [1446, 1449]], [448, "A", 0.0003414154052734375, [1449, 1450]], [449, ");", 0.000705718994140625, [1450, 1452]], [452, "find", 0.00118255615234375, [1460, 1465]], [453, "(", 0.0004024505615234375, [1465, 1466]], [454, "B", 0.0002346038818359375, [1466, 1467]], [455, ",", 0.00013828277587890625, [1467, 1468]], [456, "0", 0.0001811981201171875, [1468, 1469]], [457, ",", 0.00018596649169921875, [1469, 1470]], [458, "B", 0.00015544891357421875, [1470, 1471]], [459, ".", 0.000659942626953125, [1471, 1472]], [460, "size", 0.00015926361083984375, [1472, 1476]], [461, "(),", 0.000152587890625, [1476, 1479]], [462, "0", 0.00019931793212890625, [1479, 1480]], [463, ",", 0.00019550323486328125, [1480, 1481]], [464, "sum", 0.00174713134765625, [1481, 1484]], [465, "B", 0.0003147125244140625, [1484, 1485]], [466, ");", 0.000888824462890625, [1485, 1487]], [471, "sort", 0.005157470703125, [1504, 1509]], [472, "(", 0.00145721435546875, [1509, 1510]], [473, "sum", 0.0030975341796875, [1510, 1513]], [474, "A", 0.0012969970703125, [1513, 1514]], [475, ".", 0.001190185546875, [1514, 1515]], [476, "begin", 0.00133514404296875, [1515, 1520]], [477, "(),", 0.00093841552734375, [1520, 1523]], [478, "sum", 0.0003681182861328125, [1523, 1526]], [479, "A", 0.00106048583984375, [1526, 1527]], [480, ".", 0.000461578369140625, [1527, 1528]], [481, "end", 0.0009765625, [1528, 1531]], [482, "());", 0.0009765625, [1531, 1535]], [487, "//", 0.0031585693359375, [1553, 1556]], [488, "Step", 0.0025787353515625, [1556, 1560]], [490, "3", 0.00144195556640625, [1561, 1562]], [491, ":", 0.00225830078125, [1562, 1563]], [492, "Find", 0.00238037109375, [1563, 1568]], [493, "combinations", 0.0263671875, [1568, 1581]], [494, "from", 0.004150390625, [1581, 1586]], [495, "sum", 0.004119873046875, [1586, 1590]], [496, "A", 0.00150299072265625, [1590, 1591]], [497, "&", 0.00439453125, [1591, 1593]], [498, "sum", 0.00103759765625, [1593, 1597]], [499, "B", 0.0030517578125, [1597, 1598]], [500, "such", 0.0023956298828125, [1598, 1603]], [501, "that", 0.00167083740234375, [1603, 1608]], [502, "abs", 0.005615234375, [1608, 1612]], [503, "(", 0.00112152099609375, [1612, 1613]], [504, "sum", 0.00096893310546875, [1613, 1616]], [505, "-", 0.00162506103515625, [1616, 1617]], [506, "go", 0.0030975341796875, [1617, 1619]], [507, "al", 0.0019989013671875, [1619, 1621]], [508, ")", 0.001800537109375, [1621, 1622]], [509, "is", 0.004180908203125, [1622, 1625]], [510, "minim", 0.004364013671875, [1625, 1631]], [511, "ized", 0.005767822265625, [1631, 1635]], [516, "int", 0.003143310546875, [1652, 1656]], [517, "an", 0.0032958984375, [1656, 1659]], [518, "s", 0.0030975341796875, [1659, 1660]], [519, "=", 0.0023345947265625, [1660, 1661]], [520, "INT", 0.004486083984375, [1661, 1664]], [521, "_", 0.00145721435546875, [1664, 1665]], [522, "MAX", 0.00201416015625, [1665, 1668]], [523, ";", 0.0024261474609375, [1668, 1669]], [528, "for", 0.0018768310546875, [1686, 1690]], [529, "(", 0.0023040771484375, [1690, 1691]], [530, "int", 0.0017242431640625, [1691, 1694]], [531, "i", 0.000858306884765625, [1694, 1696]], [532, "=", 0.000560760498046875, [1696, 1697]], [533, "0", 0.000629425048828125, [1697, 1698]], [534, ";", 0.00072479248046875, [1698, 1699]], [535, "i", 0.0005340576171875, [1699, 1700]], [536, "<", 0.00048828125, [1700, 1701]], [537, "sum", 0.0020599365234375, [1701, 1704]], [538, "A", 0.0019989013671875, [1704, 1705]], [539, ".", 0.00074005126953125, [1705, 1706]], [540, "size", 0.000637054443359375, [1706, 1710]], [541, "();", 0.00038909912109375, [1710, 1713]], [542, "i", 0.0010986328125, [1713, 1714]], [543, "++", 0.0011138916015625, [1714, 1716]], [544, "){", 0.000759124755859375, [1716, 1718]], [547, "int", 0.00151824951171875, [1730, 1734]], [548, "s", 0.0020599365234375, [1734, 1736]], [549, "=", 0.0012359619140625, [1736, 1737]], [550, "sum", 0.00109100341796875, [1737, 1740]], [551, "A", 0.00069427490234375, [1740, 1741]], [552, "[", 0.000576019287109375, [1741, 1742]], [553, "i", 0.0009765625, [1742, 1743]], [554, "];", 0.000949859619140625, [1743, 1745]], [557, "int", 0.00095367431640625, [1757, 1761]], [558, "l", 0.002532958984375, [1761, 1763]], [559, "=", 0.00081634521484375, [1763, 1764]], [560, "0", 0.0018157958984375, [1764, 1765]], [561, ";", 0.000522613525390625, [1765, 1766]], [564, "int", 0.000499725341796875, [1778, 1782]], [565, "r", 0.000621795654296875, [1782, 1784]], [566, "=", 0.0004863739013671875, [1784, 1785]], [567, "sum", 0.00115203857421875, [1785, 1788]], [568, "B", 0.0004062652587890625, [1788, 1789]], [569, ".", 0.0008087158203125, [1789, 1790]], [570, "size", 0.000659942626953125, [1790, 1794]], [571, "()-", 0.00060272216796875, [1794, 1797]], [572, "1", 0.000640869140625, [1797, 1798]], [573, ";", 0.000583648681640625, [1798, 1799]], [576, "while", 0.00139617919921875, [1811, 1817]], [577, "(", 0.0010833740234375, [1817, 1818]], [578, "l", 0.000690460205078125, [1818, 1819]], [579, "<", 0.000530242919921875, [1819, 1820]], [580, "=", 0.0004291534423828125, [1820, 1821]], [581, "r", 0.00084686279296875, [1821, 1822]], [582, "){", 0.000705718994140625, [1822, 1824]], [585, "int", 0.000885009765625, [1840, 1844]], [586, "mid", 0.00078582763671875, [1844, 1848]], [587, "=", 0.000720977783203125, [1848, 1849]], [588, "l", 0.0003261566162109375, [1849, 1850]], [589, "+", 0.0002574920654296875, [1850, 1851]], [590, "(", 0.0003204345703125, [1851, 1852]], [591, "r", 0.00034332275390625, [1852, 1853]], [592, "-", 0.0002918243408203125, [1853, 1854]], [593, "l", 0.0004596710205078125, [1854, 1855]], [594, ")/", 0.00061798095703125, [1855, 1857]], [595, "2", 0.0030670166015625, [1857, 1858]], [596, ";", 0.000957489013671875, [1858, 1859]], [599, "int", 0.005157470703125, [1875, 1879]], [600, "sum", 0.0015716552734375, [1879, 1883]], [601, "=", 0.00099945068359375, [1883, 1884]], [602, "s", 0.00103759765625, [1884, 1885]], [603, "+", 0.00067138671875, [1885, 1886]], [604, "sum", 0.000621795654296875, [1886, 1889]], [605, "B", 0.0004138946533203125, [1889, 1890]], [606, "[", 0.0004825592041015625, [1890, 1891]], [607, "mid", 0.00057220458984375, [1891, 1894]], [608, "];", 0.000720977783203125, [1894, 1896]], [611, "if", 0.0013885498046875, [1912, 1915]], [612, "(", 0.0008697509765625, [1915, 1916]], [613, "sum", 0.0010528564453125, [1916, 1919]], [614, "==", 0.000934600830078125, [1919, 1921]], [615, "go", 0.00194549560546875, [1921, 1923]], [616, "al", 0.00145721435546875, [1923, 1925]], [617, ")", 0.0013275146484375, [1925, 1926]], [620, "return", 0.0023651123046875, [1946, 1953]], [622, "0", 0.00469970703125, [1954, 1955]], [623, ";", 0.0019989013671875, [1955, 1956]], [626, "an", 0.0030670166015625, [1972, 1975]], [627, "s", 0.001708984375, [1975, 1976]], [628, "=", 0.00125885009765625, [1976, 1977]], [629, "min", 0.002105712890625, [1977, 1980]], [630, "(", 0.00121307373046875, [1980, 1981]], [631, "ans", 0.0005950927734375, [1981, 1984]], [632, ",", 0.000804901123046875, [1984, 1985]], [633, "abs", 0.0009002685546875, [1985, 1988]], [634, "(", 0.000461578369140625, [1988, 1989]], [635, "sum", 0.000274658203125, [1989, 1992]], [636, "-", 0.000293731689453125, [1992, 1993]], [637, "go", 0.00457763671875, [1993, 1995]], [638, "al", 0.0006561279296875, [1995, 1997]], [639, "));", 0.0012664794921875, [1997, 2000]], [642, "if", 0.00081634521484375, [2016, 2019]], [643, "(", 0.00067901611328125, [2019, 2020]], [644, "sum", 0.000858306884765625, [2020, 2023]], [645, ">", 0.00064849853515625, [2023, 2024]], [646, "go", 0.000782012939453125, [2024, 2026]], [647, "al", 0.000652313232421875, [2026, 2028]], [648, "){", 0.00103759765625, [2028, 2030]], [651, "r", 0.0012969970703125, [2050, 2052]], [652, "=", 0.0008087158203125, [2052, 2053]], [653, "mid", 0.00064849853515625, [2053, 2056]], [654, "-", 0.00052642822265625, [2056, 2057]], [655, "1", 0.000934600830078125, [2057, 2058]], [656, ";", 0.000766754150390625, [2058, 2059]], [659, "}", 0.00102996826171875, [2075, 2077]], [662, "else", 0.000743865966796875, [2093, 2098]], [663, "{", 0.000457763671875, [2098, 2099]], [666, "l", 0.00048065185546875, [2119, 2121]], [667, "=", 0.0002899169921875, [2121, 2122]], [668, "mid", 0.0004253387451171875, [2122, 2125]], [669, "+", 0.00018405914306640625, [2125, 2126]], [670, "1", 0.000598907470703125, [2126, 2127]], [671, ";", 0.00070953369140625, [2127, 2128]], [674, "}", 0.00185394287109375, [2144, 2146]], [678, "}", 0.001953125, [2162, 2164]], [681, "}", 0.001312255859375, [2172, 2174]], [686, "return", 0.0032958984375, [2191, 2198]], [687, "an", 0.0556640625, [2198, 2201]], [688, "s", 0.003082275390625, [2201, 2202]], [689, ";", 0.00506591796875, [2202, 2203]], [692, "}", 0.041015625, [2207, 2209]], [694, "};", 0.040771484375, [2210, 2212]]], "coding_last": [[1, "You", 0.06591796875, [0, 3]], [2, "are", 0.00732421875, [3, 7]], [3, "an", 0.004119873046875, [7, 10]], [4, "exception", 0.0033721923828125, [10, 20]], [5, "ally", 0.001007080078125, [20, 24]], [6, "intelligent", 0.001983642578125, [24, 36]], [7, "coding", 0.00189971923828125, [36, 43]], [8, "assistant", 0.0067138671875, [43, 53]], [9, "that", 0.00133514404296875, [53, 58]], [10, "consistently", 0.0009613037109375, [58, 71]], [11, "delivers", 0.00162506103515625, [71, 80]], [12, "accurate", 0.0009765625, [80, 89]], [13, "and", 0.00157928466796875, [89, 93]], [14, "reliable", 0.0016937255859375, [93, 102]], [15, "responses", 0.0014495849609375, [102, 112]], [16, "to", 0.00110626220703125, [112, 115]], [17, "user", 0.00141143798828125, [115, 120]], [18, "instructions", 0.005584716796875, [120, 133]], [19, ".", 0.0081787109375, [133, 134]], [23, "@", 0.025390625, [143, 145]], [24, "@", 0.018310546875, [145, 146]], [25, "Inst", 0.00897216796875, [146, 151]], [26, "ruction", 0.02099609375, [151, 158]], [29, "You", 0.01025390625, [166, 170]], [30, "are", 0.003662109375, [170, 174]], [31, "a", 0.004547119140625, [174, 176]], [32, "program", 0.004669189453125, [176, 184]], [33, "rep", 0.00531005859375, [184, 188]], [34, "aire", 0.0107421875, [188, 192]], [35, "r", 0.0089111328125, [192, 193]], [36, ".", 0.00433349609375, [193, 194]], [37, "Please", 0.01104736328125, [194, 201]], [38, "repair", 0.032470703125, [201, 208]], [39, "the", 0.005096435546875, [208, 212]], [40, "following", 0.0059814453125, [212, 222]], [41, "bug", 0.0125732421875, [222, 226]], [42, "gy", 0.0047607421875, [226, 228]], [43, "program", 0.01300048828125, [228, 236]], [44, ".", 0.016845703125, [236, 237]], [45, "You", 0.011962890625, [237, 241]], [46, "are", 0.003997802734375, [241, 245]], [47, "given", 0.004730224609375, [245, 251]], [48, "an", 0.00396728515625, [251, 254]], [49, "integer", 0.005035400390625, [254, 262]], [50, "array", 0.005340576171875, [262, 268]], [51, "num", 0.00738525390625, [268, 272]], [52, "s", 0.00439453125, [272, 273]], [53, "and", 0.00194549560546875, [273, 277]], [54, "an", 0.001220703125, [277, 280]], [55, "integer", 0.00115203857421875, [280, 288]], [56, "goal", 0.01318359375, [288, 293]], [57, ".", 0.0057373046875, [293, 294]], [59, "You", 0.0135498046875, [295, 298]], [60, "want", 0.001434326171875, [298, 303]], [61, "to", 0.00262451171875, [303, 306]], [62, "choose", 0.0026702880859375, [306, 313]], [63, "a", 0.00213623046875, [313, 315]], [64, "subsequ", 0.0096435546875, [315, 323]], [65, "ence", 0.004638671875, [323, 327]], [66, "of", 0.00084686279296875, [327, 330]], [67, "num", 0.00133514404296875, [330, 334]], [68, "s", 0.001983642578125, [334, 335]], [69, "such", 0.001556396484375, [335, 340]], [70, "that", 0.00098419189453125, [340, 345]], [71, "the", 0.00147247314453125, [345, 349]], [72, "sum", 0.00165557861328125, [349, 353]], [73, "of", 0.00067901611328125, [353, 356]], [74, "its", 0.00116729736328125, [356, 360]], [75, "elements", 0.0016632080078125, [360, 369]], [76, "is", 0.00119781494140625, [369, 372]], [77, "the", 0.00090789794921875, [372, 376]], [78, "closest", 0.006011962890625, [376, 384]], [79, "possible", 0.00160980224609375, [384, 393]], [80, "to", 0.00057220458984375, [393, 396]], [81, "goal", 0.0034637451171875, [396, 401]], [82, ".", 0.0045166015625, [401, 402]], [83, "That", 0.00157928466796875, [402, 407]], [84, "is", 0.000698089599609375, [407, 410]], [85, ",", 0.00103759765625, [410, 411]], [86, "if", 0.000720977783203125, [411, 414]], [87, "the", 0.00054931640625, [414, 418]], [88, "sum", 0.000640869140625, [418, 422]], [89, "of", 0.0002231597900390625, [422, 425]], [90, "the", 0.0003566741943359375, [425, 429]], [91, "subsequ", 0.00159454345703125, [429, 437]], [92, "ence", 0.00083160400390625, [437, 441]], [93, "'", 0.00106048583984375, [441, 442]], [94, "s", 0.000385284423828125, [442, 443]], [95, "elements", 0.00049591064453125, [443, 452]], [96, "is", 0.0013275146484375, [452, 455]], [97, "sum", 0.00061798095703125, [455, 459]], [98, ",", 0.000652313232421875, [459, 460]], [99, "then", 0.000946044921875, [460, 465]], [100, "you", 0.002227783203125, [465, 469]], [101, "want", 0.00103759765625, [469, 474]], [102, "to", 0.000858306884765625, [474, 477]], [103, "minimize", 0.0013580322265625, [477, 486]], [104, "the", 0.000522613525390625, [486, 490]], [105, "absolute", 0.0025482177734375, [490, 499]], [106, "difference", 0.00148773193359375, [499, 510]], [107, "abs", 0.001739501953125, [510, 514]], [108, "(", 0.000408172607421875, [514, 515]], [109, "sum", 0.0004749298095703125, [515, 518]], [110, "-", 0.000247955322265625, [518, 520]], [111, "goal", 0.0031585693359375, [520, 525]], [112, ").", 0.00384521484375, [525, 527]], [114, "Return", 0.006683349609375, [528, 534]], [115, "the", 0.00421142578125, [534, 538]], [116, "minimum", 0.0010223388671875, [538, 546]], [117, "possible", 0.0029296875, [546, 555]], [118, "value", 0.0081787109375, [555, 561]], [119, "of", 0.00107574462890625, [561, 564]], [120, "abs", 0.0137939453125, [564, 568]], [121, "(", 0.0010223388671875, [568, 569]], [122, "sum", 0.00171661376953125, [569, 572]], [123, "-", 0.000362396240234375, [572, 574]], [124, "goal", 0.005035400390625, [574, 579]], [125, ").", 0.01104736328125, [579, 581]], [127, "Note", 0.00909423828125, [582, 586]], [128, "that", 0.0023651123046875, [586, 591]], [129, "a", 0.004058837890625, [591, 593]], [130, "subsequ", 0.004608154296875, [593, 601]], [131, "ence", 0.00135040283203125, [601, 605]], [132, "of", 0.000835418701171875, [605, 608]], [133, "an", 0.0003681182861328125, [608, 611]], [134, "array", 0.000789642333984375, [611, 617]], [135, "is", 0.001708984375, [617, 620]], [136, "an", 0.000690460205078125, [620, 623]], [137, "array", 0.00080108642578125, [623, 629]], [138, "formed", 0.00136566162109375, [629, 636]], [139, "by", 0.000835418701171875, [636, 639]], [140, "removing", 0.0009765625, [639, 648]], [141, "some", 0.00069427490234375, [648, 653]], [142, "elements", 0.001953125, [653, 662]], [143, "(", 0.000766754150390625, [662, 664]], [144, "poss", 0.0008392333984375, [664, 668]], [145, "ibly", 0.0002918243408203125, [668, 672]], [146, "all", 0.0009918212890625, [672, 676]], [147, "or", 0.00025177001953125, [676, 679]], [148, "none", 0.00109100341796875, [679, 684]], [149, ")", 0.0001850128173828125, [684, 685]], [150, "of", 0.000335693359375, [685, 688]], [151, "the", 0.000598907470703125, [688, 692]], [152, "original", 0.0003643035888671875, [692, 701]], [153, "array", 0.000843048095703125, [701, 707]], [154, ".", 0.00147247314453125, [707, 708]], [155, "B", 0.040771484375, [708, 709]], [156, "ug", 0.052490234375, [709, 711]], [157, "gy", 0.0284423828125, [711, 713]], [158, "code", 0.0185546875, [713, 718]], [159, ":", 0.0361328125, [718, 720]], [160, "class", 0.0625, [720, 726]], [161, "S", 0.0208740234375, [726, 728]], [162, "olution", 0.017578125, [728, 735]], [163, "{", 0.00909423828125, [735, 737]], [165, "public", 0.006256103515625, [738, 744]], [166, ":", 0.006744384765625, [744, 745]], [169, "void", 0.01397705078125, [749, 754]], [170, "find", 0.00909423828125, [754, 759]], [171, "(", 0.00677490234375, [759, 760]], [172, "vector", 0.0108642578125, [760, 766]], [173, "<", 0.00286865234375, [766, 767]], [174, "int", 0.0032196044921875, [767, 770]], [175, ">", 0.0038604736328125, [770, 771]], [176, "&", 0.0023193359375, [771, 772]], [177, "v", 0.0038909912109375, [772, 773]], [178, ",", 0.00144195556640625, [773, 774]], [179, "int", 0.0018157958984375, [774, 778]], [180, "i", 0.0023040771484375, [778, 780]], [181, ",", 0.00077056884765625, [780, 781]], [182, "int", 0.0021209716796875, [781, 785]], [183, "e", 0.0021514892578125, [785, 787]], [184, ",", 0.0009002685546875, [787, 788]], [185, "int", 0.0019683837890625, [788, 792]], [186, "sum", 0.0032958984375, [792, 796]], [187, ",", 0.0008392333984375, [796, 797]], [188, "vector", 0.0020904541015625, [797, 804]], [189, "<", 0.001007080078125, [804, 805]], [190, "int", 0.00189208984375, [805, 808]], [191, ">", 0.00171661376953125, [808, 809]], [192, "&", 0.0020751953125, [809, 810]], [193, "sum", 0.003173828125, [810, 813]], [194, "v", 0.00531005859375, [813, 814]], [195, "){", 0.00677490234375, [814, 816]], [198, "if", 0.00689697265625, [824, 827]], [199, "(", 0.003021240234375, [827, 828]], [200, "i", 0.00185394287109375, [828, 829]], [201, "==", 0.0020599365234375, [829, 831]], [202, "e", 0.00171661376953125, [831, 832]], [203, "){", 0.0036163330078125, [832, 834]], [206, "sum", 0.0009918212890625, [846, 850]], [207, "v", 0.00170135498046875, [850, 851]], [208, ".", 0.00128173828125, [851, 852]], [209, "push", 0.002777099609375, [852, 856]], [210, "_", 0.002197265625, [856, 857]], [211, "back", 0.000797271728515625, [857, 861]], [212, "(", 0.00048828125, [861, 862]], [213, "sum", 0.001220703125, [862, 865]], [214, ");", 0.0027313232421875, [865, 867]], [217, "return", 0.0038909912109375, [879, 886]], [218, ";", 0.0022430419921875, [886, 887]], [221, "}", 0.0031890869140625, [895, 897]], [224, "find", 0.0029754638671875, [905, 910]], [225, "(", 0.000881195068359375, [910, 911]], [226, "v", 0.000728607177734375, [911, 912]], [227, ",", 0.000621795654296875, [912, 913]], [228, "i", 0.000606536865234375, [913, 914]], [229, "+", 0.0004024505615234375, [914, 915]], [230, "1", 0.000553131103515625, [915, 916]], [231, ",", 0.0002460479736328125, [916, 917]], [232, "e", 0.00070953369140625, [917, 918]], [233, ",", 0.0001621246337890625, [918, 919]], [234, "sum", 0.0002841949462890625, [919, 922]], [235, "+", 0.0003299713134765625, [922, 923]], [236, "v", 0.0002880096435546875, [923, 924]], [237, "[", 0.00018215179443359375, [924, 925]], [238, "i", 0.00034332275390625, [925, 926]], [239, "],", 0.0004024505615234375, [926, 928]], [240, "sum", 0.000339508056640625, [928, 931]], [241, "v", 0.001068115234375, [931, 932]], [242, ");", 0.006011962890625, [932, 934]], [245, "find", 0.001129150390625, [942, 947]], [246, "(", 0.0003147125244140625, [947, 948]], [247, "v", 0.0004558563232421875, [948, 949]], [248, ",", 0.000225067138671875, [949, 950]], [249, "i", 9.34600830078125e-05, [950, 951]], [250, "+", 0.00011873245239257812, [951, 952]], [251, "1", 0.0002574920654296875, [952, 953]], [252, ",", 0.0001049041748046875, [953, 954]], [253, "e", 0.00010251998901367188, [954, 955]], [254, ",", 0.00011157989501953125, [955, 956]], [255, "sum", 0.000400543212890625, [956, 959]], [256, ",", 0.000209808349609375, [959, 960]], [257, "sum", 0.000415802001953125, [960, 963]], [258, "v", 0.00098419189453125, [963, 964]], [259, ");", 0.01080322265625, [964, 966]], [262, "}", 0.01544189453125, [970, 972]], [269, "int", 0.005767822265625, [990, 994]], [270, "min", 0.005401611328125, [994, 998]], [271, "Abs", 0.0026092529296875, [998, 1001]], [272, "Diff", 0.0084228515625, [1001, 1005]], [273, "erence", 0.0026397705078125, [1005, 1011]], [274, "(", 0.0025482177734375, [1011, 1012]], [275, "vector", 0.0022430419921875, [1012, 1018]], [276, "<", 0.002532958984375, [1018, 1019]], [277, "int", 0.00176239013671875, [1019, 1022]], [278, ">", 0.000591278076171875, [1022, 1023]], [279, "&", 0.00067138671875, [1023, 1024]], [280, "num", 0.0027313232421875, [1024, 1028]], [281, "s", 0.00982666015625, [1028, 1029]], [282, ",", 0.00090789794921875, [1029, 1030]], [283, "int", 0.001312255859375, [1030, 1034]], [284, "goal", 0.00445556640625, [1034, 1039]], [285, ")", 0.004486083984375, [1039, 1040]], [286, "{", 0.004302978515625, [1040, 1042]], [289, "int", 0.0026397705078125, [1050, 1054]], [290, "n", 0.0018463134765625, [1054, 1056]], [291, "=", 0.0016937255859375, [1056, 1057]], [292, "num", 0.10498046875, [1057, 1060]], [293, "s", 0.000762939453125, [1060, 1061]], [294, ".", 0.00102996826171875, [1061, 1062]], [295, "size", 0.00109100341796875, [1062, 1066]], [296, "();", 0.0042724609375, [1066, 1069]], [301, "//", 0.007080078125, [1086, 1089]], [302, "Step", 0.022705078125, [1089, 1093]], [304, "1", 0.00811767578125, [1094, 1095]], [305, ":", 0.0026397705078125, [1095, 1096]], [306, "Div", 0.002105712890625, [1096, 1100]], [307, "ide", 0.0023040771484375, [1100, 1103]], [308, "num", 0.00299072265625, [1103, 1107]], [309, "s", 0.002410888671875, [1107, 1108]], [310, "into", 0.0008544921875, [1108, 1113]], [312, "2", 0.0022735595703125, [1114, 1115]], [313, "sub", 0.00185394287109375, [1115, 1119]], [314, "arr", 0.00177764892578125, [1119, 1122]], [315, "ays", 0.0025787353515625, [1122, 1125]], [316, "of", 0.0018768310546875, [1125, 1128]], [317, "size", 0.0027008056640625, [1128, 1133]], [318, "n", 0.00093841552734375, [1133, 1135]], [319, "/", 0.00152587890625, [1135, 1136]], [320, "2", 0.0026092529296875, [1136, 1137]], [321, "and", 0.00177001953125, [1137, 1141]], [322, "n", 0.001251220703125, [1141, 1143]], [323, "-", 0.00116729736328125, [1143, 1144]], [324, "n", 0.00045013427734375, [1144, 1145]], [325, "/", 0.0002651214599609375, [1145, 1146]], [326, "2", 0.0034027099609375, [1146, 1147]], [331, "vector", 0.001617431640625, [1164, 1171]], [332, "<", 0.00069427490234375, [1171, 1172]], [333, "int", 0.001007080078125, [1172, 1175]], [334, ">", 0.0009765625, [1175, 1176]], [335, "A", 0.004669189453125, [1176, 1177]], [336, ",", 0.00115966796875, [1177, 1178]], [337, "B", 0.00433349609375, [1178, 1179]], [338, ";", 0.01531982421875, [1179, 1180]], [341, "for", 0.0014801025390625, [1188, 1192]], [342, "(", 0.0014801025390625, [1192, 1193]], [343, "int", 0.002044677734375, [1193, 1196]], [344, "i", 0.0010833740234375, [1196, 1198]], [345, "=", 0.001068115234375, [1198, 1199]], [346, "0", 0.00113677978515625, [1199, 1200]], [347, ";", 0.0024261474609375, [1200, 1201]], [348, "i", 0.00147247314453125, [1201, 1202]], [349, "<", 0.00150299072265625, [1202, 1203]], [350, "n", 0.0017242431640625, [1203, 1204]], [351, "/", 0.000957489013671875, [1204, 1205]], [352, "2", 0.00125885009765625, [1205, 1206]], [353, ";", 0.000904083251953125, [1206, 1207]], [354, "i", 0.000370025634765625, [1207, 1208]], [355, "++", 0.00135040283203125, [1208, 1210]], [356, ")", 0.0009918212890625, [1210, 1211]], [359, "A", 0.0021514892578125, [1223, 1225]], [360, ".", 0.000865936279296875, [1225, 1226]], [361, "push", 0.00159454345703125, [1226, 1230]], [362, "_", 0.001068115234375, [1230, 1231]], [363, "back", 0.00054168701171875, [1231, 1235]], [364, "(", 0.0006256103515625, [1235, 1236]], [365, "num", 0.0006256103515625, [1236, 1239]], [366, "s", 0.0004749298095703125, [1239, 1240]], [367, "[", 0.0003757476806640625, [1240, 1241]], [368, "i", 0.00063323974609375, [1241, 1242]], [369, "]);", 0.00335693359375, [1242, 1245]], [372, "for", 0.0010223388671875, [1253, 1257]], [373, "(", 0.000820159912109375, [1257, 1258]], [374, "int", 0.00101470947265625, [1258, 1261]], [375, "i", 0.000705718994140625, [1261, 1263]], [376, "=", 0.00128936767578125, [1263, 1264]], [377, "n", 0.0004673004150390625, [1264, 1265]], [378, "/", 0.0003108978271484375, [1265, 1266]], [379, "2", 0.000675201416015625, [1266, 1267]], [380, ";", 0.0011749267578125, [1267, 1268]], [381, "i", 0.0010223388671875, [1268, 1269]], [382, "<", 0.000675201416015625, [1269, 1270]], [383, "n", 0.00049591064453125, [1270, 1271]], [384, ";", 0.000507354736328125, [1271, 1272]], [385, "i", 0.000156402587890625, [1272, 1273]], [386, "++", 0.0004749298095703125, [1273, 1275]], [387, ")", 0.000835418701171875, [1275, 1276]], [390, "B", 0.00115966796875, [1288, 1290]], [391, ".", 0.00054168701171875, [1290, 1291]], [392, "push", 0.000568389892578125, [1291, 1295]], [393, "_", 0.10400390625, [1295, 1296]], [394, "back", 0.00042724609375, [1296, 1300]], [395, "(", 0.00994873046875, [1300, 1301]], [396, "num", 0.00124359130859375, [1301, 1304]], [397, "s", 0.0003032684326171875, [1304, 1305]], [398, "[", 0.00016307830810546875, [1305, 1306]], [399, "i", 0.000492095947265625, [1306, 1307]], [400, "]);", 0.003509521484375, [1307, 1310]], [405, "//", 0.00421142578125, [1327, 1330]], [406, "Step", 0.005126953125, [1330, 1334]], [408, "2", 0.0032958984375, [1335, 1336]], [409, ":", 0.002532958984375, [1336, 1337]], [410, "Find", 0.00128173828125, [1337, 1342]], [411, "all", 0.00095367431640625, [1342, 1346]], [412, "possible", 0.00090789794921875, [1346, 1355]], [413, "subset", 0.0015869140625, [1355, 1362]], [414, "sums", 0.002593994140625, [1362, 1367]], [415, "of", 0.000457763671875, [1367, 1370]], [416, "A", 0.001739501953125, [1370, 1372]], [417, "and", 0.000782012939453125, [1372, 1376]], [418, "B", 0.00164031982421875, [1376, 1378]], [423, "vector", 0.00099945068359375, [1395, 1402]], [424, "<", 0.000568389892578125, [1402, 1403]], [425, "int", 0.000675201416015625, [1403, 1406]], [426, ">", 0.0013580322265625, [1406, 1407]], [427, "sum", 0.00150299072265625, [1407, 1410]], [428, "A", 0.0027923583984375, [1410, 1411]], [429, ",", 0.00077056884765625, [1411, 1412]], [430, "sum", 0.00115966796875, [1412, 1415]], [431, "B", 0.0017242431640625, [1415, 1416]], [432, ";", 0.003143310546875, [1416, 1417]], [435, "find", 0.003082275390625, [1425, 1430]], [436, "(", 0.001373291015625, [1430, 1431]], [437, "A", 0.000782012939453125, [1431, 1432]], [438, ",", 0.000896453857421875, [1432, 1433]], [439, "0", 0.000518798828125, [1433, 1434]], [440, ",", 0.0013580322265625, [1434, 1435]], [441, "A", 0.000545501708984375, [1435, 1436]], [442, ".", 0.0007476806640625, [1436, 1437]], [443, "size", 0.00069427490234375, [1437, 1441]], [444, "(),", 0.000606536865234375, [1441, 1444]], [445, "0", 0.0003185272216796875, [1444, 1445]], [446, ",", 0.00057220458984375, [1445, 1446]], [447, "sum", 0.000614166259765625, [1446, 1449]], [448, "A", 0.00069427490234375, [1449, 1450]], [449, ");", 0.00156402587890625, [1450, 1452]], [452, "find", 0.00072479248046875, [1460, 1465]], [453, "(", 0.00083160400390625, [1465, 1466]], [454, "B", 0.0003108978271484375, [1466, 1467]], [455, ",", 0.000225067138671875, [1467, 1468]], [456, "0", 0.0002765655517578125, [1468, 1469]], [457, ",", 0.000308990478515625, [1469, 1470]], [458, "B", 0.0001735687255859375, [1470, 1471]], [459, ".", 0.0003719329833984375, [1471, 1472]], [460, "size", 0.00019550323486328125, [1472, 1476]], [461, "(),", 0.00019168853759765625, [1476, 1479]], [462, "0", 0.00018978118896484375, [1479, 1480]], [463, ",", 0.00030517578125, [1480, 1481]], [464, "sum", 0.0005340576171875, [1481, 1484]], [465, "B", 0.000476837158203125, [1484, 1485]], [466, ");", 0.00286865234375, [1485, 1487]], [471, "sort", 0.006805419921875, [1504, 1509]], [472, "(", 0.0020751953125, [1509, 1510]], [473, "sum", 0.001922607421875, [1510, 1513]], [474, "A", 0.00115966796875, [1513, 1514]], [475, ".", 0.001068115234375, [1514, 1515]], [476, "begin", 0.00102996826171875, [1515, 1520]], [477, "(),", 0.0012359619140625, [1520, 1523]], [478, "sum", 0.0002880096435546875, [1523, 1526]], [479, "A", 0.000553131103515625, [1526, 1527]], [480, ".", 0.00040435791015625, [1527, 1528]], [481, "end", 0.00070953369140625, [1528, 1531]], [482, "());", 0.00238037109375, [1531, 1535]], [487, "//", 0.006683349609375, [1553, 1556]], [488, "Step", 0.003265380859375, [1556, 1560]], [490, "3", 0.003326416015625, [1561, 1562]], [491, ":", 0.00335693359375, [1562, 1563]], [492, "Find", 0.0014495849609375, [1563, 1568]], [493, "combinations", 0.0059814453125, [1568, 1581]], [494, "from", 0.0016937255859375, [1581, 1586]], [495, "sum", 0.00193023681640625, [1586, 1590]], [496, "A", 0.000885009765625, [1590, 1591]], [497, "&", 0.0024871826171875, [1591, 1593]], [498, "sum", 0.000804901123046875, [1593, 1597]], [499, "B", 0.0019683837890625, [1597, 1598]], [500, "such", 0.0017852783203125, [1598, 1603]], [501, "that", 0.0013885498046875, [1603, 1608]], [502, "abs", 0.002227783203125, [1608, 1612]], [503, "(", 0.000827789306640625, [1612, 1613]], [504, "sum", 0.00116729736328125, [1613, 1616]], [505, "-", 0.000514984130859375, [1616, 1617]], [506, "go", 0.00099945068359375, [1617, 1619]], [507, "al", 0.001861572265625, [1619, 1621]], [508, ")", 0.0010223388671875, [1621, 1622]], [509, "is", 0.001251220703125, [1622, 1625]], [510, "minim", 0.00138092041015625, [1625, 1631]], [511, "ized", 0.004669189453125, [1631, 1635]], [516, "int", 0.005584716796875, [1652, 1656]], [517, "an", 0.003021240234375, [1656, 1659]], [518, "s", 0.003387451171875, [1659, 1660]], [519, "=", 0.00335693359375, [1660, 1661]], [520, "INT", 0.0069580078125, [1661, 1664]], [521, "_", 0.00347900390625, [1664, 1665]], [522, "MAX", 0.004486083984375, [1665, 1668]], [523, ";", 0.007476806640625, [1668, 1669]], [528, "for", 0.003265380859375, [1686, 1690]], [529, "(", 0.003387451171875, [1690, 1691]], [530, "int", 0.001861572265625, [1691, 1694]], [531, "i", 0.00128936767578125, [1694, 1696]], [532, "=", 0.000865936279296875, [1696, 1697]], [533, "0", 0.000797271728515625, [1697, 1698]], [534, ";", 0.001495361328125, [1698, 1699]], [535, "i", 0.00099945068359375, [1699, 1700]], [536, "<", 0.000743865966796875, [1700, 1701]], [537, "sum", 0.00186920166015625, [1701, 1704]], [538, "A", 0.00154876708984375, [1704, 1705]], [539, ".", 0.000701904296875, [1705, 1706]], [540, "size", 0.000858306884765625, [1706, 1710]], [541, "();", 0.00048828125, [1710, 1713]], [542, "i", 0.000850677490234375, [1713, 1714]], [543, "++", 0.0015106201171875, [1714, 1716]], [544, "){", 0.00225830078125, [1716, 1718]], [547, "int", 0.00179290771484375, [1730, 1734]], [548, "s", 0.0016632080078125, [1734, 1736]], [549, "=", 0.0018463134765625, [1736, 1737]], [550, "sum", 0.000774383544921875, [1737, 1740]], [551, "A", 0.00058746337890625, [1740, 1741]], [552, "[", 0.000400543212890625, [1741, 1742]], [553, "i", 0.00096893310546875, [1742, 1743]], [554, "];", 0.0034942626953125, [1743, 1745]], [557, "int", 0.0018463134765625, [1757, 1761]], [558, "l", 0.0021209716796875, [1761, 1763]], [559, "=", 0.00213623046875, [1763, 1764]], [560, "0", 0.001617431640625, [1764, 1765]], [561, ";", 0.0022125244140625, [1765, 1766]], [564, "int", 0.0014190673828125, [1778, 1782]], [565, "r", 0.000629425048828125, [1782, 1784]], [566, "=", 0.00148773193359375, [1784, 1785]], [567, "sum", 0.00099945068359375, [1785, 1788]], [568, "B", 0.000446319580078125, [1788, 1789]], [569, ".", 0.00084686279296875, [1789, 1790]], [570, "size", 0.00061798095703125, [1790, 1794]], [571, "()-", 0.000614166259765625, [1794, 1797]], [572, "1", 0.0010223388671875, [1797, 1798]], [573, ";", 0.002899169921875, [1798, 1799]], [576, "while", 0.0025482177734375, [1811, 1817]], [577, "(", 0.00147247314453125, [1817, 1818]], [578, "l", 0.001068115234375, [1818, 1819]], [579, "<", 0.000682830810546875, [1819, 1820]], [580, "=", 0.000698089599609375, [1820, 1821]], [581, "r", 0.00140380859375, [1821, 1822]], [582, "){", 0.00186920166015625, [1822, 1824]], [585, "int", 0.0011138916015625, [1840, 1844]], [586, "mid", 0.00061798095703125, [1844, 1848]], [587, "=", 0.0013885498046875, [1848, 1849]], [588, "l", 0.0004711151123046875, [1849, 1850]], [589, "+", 0.0004405975341796875, [1850, 1851]], [590, "(", 0.00029754638671875, [1851, 1852]], [591, "r", 0.0002956390380859375, [1852, 1853]], [592, "-", 0.00038909912109375, [1853, 1854]], [593, "l", 0.00080108642578125, [1854, 1855]], [594, ")/", 0.000560760498046875, [1855, 1857]], [595, "2", 0.0020599365234375, [1857, 1858]], [596, ";", 0.0027313232421875, [1858, 1859]], [599, "int", 0.001434326171875, [1875, 1879]], [600, "sum", 0.000835418701171875, [1879, 1883]], [601, "=", 0.00154876708984375, [1883, 1884]], [602, "s", 0.000873565673828125, [1884, 1885]], [603, "+", 0.000881195068359375, [1885, 1886]], [604, "sum", 0.000457763671875, [1886, 1889]], [605, "B", 0.0002994537353515625, [1889, 1890]], [606, "[", 0.0003662109375, [1890, 1891]], [607, "mid", 0.00061798095703125, [1891, 1894]], [608, "];", 0.0019073486328125, [1894, 1896]], [611, "if", 0.00106048583984375, [1912, 1915]], [612, "(", 0.001190185546875, [1915, 1916]], [613, "sum", 0.00131988525390625, [1916, 1919]], [614, "==", 0.000762939453125, [1919, 1921]], [615, "go", 0.00128936767578125, [1921, 1923]], [616, "al", 0.002166748046875, [1923, 1925]], [617, ")", 0.002685546875, [1925, 1926]], [620, "return", 0.0052490234375, [1946, 1953]], [622, "0", 0.00750732421875, [1954, 1955]], [623, ";", 0.00457763671875, [1955, 1956]], [626, "an", 0.003326416015625, [1972, 1975]], [627, "s", 0.002349853515625, [1975, 1976]], [628, "=", 0.0021514892578125, [1976, 1977]], [629, "min", 0.001983642578125, [1977, 1980]], [630, "(", 0.00122833251953125, [1980, 1981]], [631, "ans", 0.000537872314453125, [1981, 1984]], [632, ",", 0.000949859619140625, [1984, 1985]], [633, "abs", 0.0006256103515625, [1985, 1988]], [634, "(", 0.0003719329833984375, [1988, 1989]], [635, "sum", 0.0002117156982421875, [1989, 1992]], [636, "-", 0.000335693359375, [1992, 1993]], [637, "go", 0.0021514892578125, [1993, 1995]], [638, "al", 0.000530242919921875, [1995, 1997]], [639, "));", 0.003692626953125, [1997, 2000]], [642, "if", 0.0012054443359375, [2016, 2019]], [643, "(", 0.00115203857421875, [2019, 2020]], [644, "sum", 0.0020294189453125, [2020, 2023]], [645, ">", 0.001129150390625, [2023, 2024]], [646, "go", 0.000606536865234375, [2024, 2026]], [647, "al", 0.001922607421875, [2026, 2028]], [648, "){", 0.0037994384765625, [2028, 2030]], [651, "r", 0.00107574462890625, [2050, 2052]], [652, "=", 0.00130462646484375, [2052, 2053]], [653, "mid", 0.0004444122314453125, [2053, 2056]], [654, "-", 0.0003814697265625, [2056, 2057]], [655, "1", 0.0005645751953125, [2057, 2058]], [656, ";", 0.0013580322265625, [2058, 2059]], [659, "}", 0.000904083251953125, [2075, 2077]], [662, "else", 0.0004177093505859375, [2093, 2098]], [663, "{", 0.001983642578125, [2098, 2099]], [666, "l", 0.0003032684326171875, [2119, 2121]], [667, "=", 0.00019073486328125, [2121, 2122]], [668, "mid", 0.00011444091796875, [2122, 2125]], [669, "+", 0.00012302398681640625, [2125, 2126]], [670, "1", 0.000301361083984375, [2126, 2127]], [671, ";", 0.00157928466796875, [2127, 2128]], [674, "}", 0.005462646484375, [2144, 2146]], [678, "}", 0.006378173828125, [2162, 2164]], [681, "}", 0.00799560546875, [2172, 2174]], [686, "return", 0.0032806396484375, [2191, 2198]], [687, "an", 0.0654296875, [2198, 2201]], [688, "s", 0.003509521484375, [2201, 2202]], [689, ";", 0.0106201171875, [2202, 2203]], [692, "}", 0.023681640625, [2207, 2209]], [694, "};", 0.1943359375, [2210, 2212]]], "reading_all": [[1, "You", 1.2109375, [0, 3]], [2, "are", 0.2021484375, [3, 7]], [3, "an", 0.111328125, [7, 10]], [4, "exception", 0.10888671875, [10, 20]], [5, "ally", 0.046142578125, [20, 24]], [6, "intelligent", 0.07763671875, [24, 36]], [7, "coding", 0.1552734375, [36, 43]], [8, "assistant", 0.39453125, [43, 53]], [9, "that", 0.08056640625, [53, 58]], [10, "consistently", 0.0751953125, [58, 71]], [11, "delivers", 0.11083984375, [71, 80]], [12, "accurate", 0.076171875, [80, 89]], [13, "and", 0.06201171875, [89, 93]], [14, "reliable", 0.059814453125, [93, 102]], [15, "responses", 0.1318359375, [102, 112]], [16, "to", 0.068359375, [112, 115]], [17, "user", 0.07763671875, [115, 120]], [18, "instructions", 0.10693359375, [120, 133]], [19, ".", 0.68359375, [133, 134]], [23, "@", 0.71875, [143, 145]], [24, "@", 0.5546875, [145, 146]], [25, "Inst", 0.36328125, [146, 151]], [26, "ruction", 0.8671875, [151, 158]], [29, "You", 0.4609375, [166, 170]], [30, "are", 0.1796875, [170, 174]], [31, "a", 0.296875, [174, 176]], [32, "program", 0.416015625, [176, 184]], [33, "rep", 0.58984375, [184, 188]], [34, "aire", 4.96875, [188, 192]], [35, "r", 2.4375, [192, 193]], [36, ".", 2.3125, [193, 194]], [37, "Please", 1.1953125, [194, 201]], [38, "repair", 10.125, [201, 208]], [39, "the", 3.546875, [208, 212]], [40, "following", 2.6875, [212, 222]], [41, "bug", 5.78125, [222, 226]], [42, "gy", 2.828125, [226, 228]], [43, "program", 5.40625, [228, 236]], [44, ".", 5.1875, [236, 237]], [45, "You", 1.0546875, [237, 241]], [46, "are", 0.20703125, [241, 245]], [47, "given", 0.87890625, [245, 251]], [48, "an", 0.408203125, [251, 254]], [49, "integer", 0.55078125, [254, 262]], [50, "array", 0.515625, [262, 268]], [51, "num", 0.419921875, [268, 272]], [52, "s", 0.283203125, [272, 273]], [53, "and", 0.19140625, [273, 277]], [54, "an", 0.061767578125, [277, 280]], [55, "integer", 0.06884765625, [280, 288]], [56, "goal", 0.400390625, [288, 293]], [57, ".", 0.306640625, [293, 294]], [59, "You", 0.287109375, [295, 298]], [60, "want", 0.27734375, [298, 303]], [61, "to", 0.1015625, [303, 306]], [62, "choose", 0.2392578125, [306, 313]], [63, "a", 0.091796875, [313, 315]], [64, "subsequ", 0.69140625, [315, 323]], [65, "ence", 0.34375, [323, 327]], [66, "of", 0.09716796875, [327, 330]], [67, "num", 0.083984375, [330, 334]], [68, "s", 0.1162109375, [334, 335]], [69, "such", 0.11962890625, [335, 340]], [70, "that", 0.1435546875, [340, 345]], [71, "the", 0.06396484375, [345, 349]], [72, "sum", 0.1396484375, [349, 353]], [73, "of", 0.05517578125, [353, 356]], [74, "its", 0.05029296875, [356, 360]], [75, "elements", 0.07568359375, [360, 369]], [76, "is", 0.052734375, [369, 372]], [77, "the", 0.051025390625, [372, 376]], [78, "closest", 0.38671875, [376, 384]], [79, "possible", 0.1435546875, [384, 393]], [80, "to", 0.07470703125, [393, 396]], [81, "goal", 0.208984375, [396, 401]], [82, ".", 0.375, [401, 402]], [83, "That", 0.083984375, [402, 407]], [84, "is", 0.06201171875, [407, 410]], [85, ",", 0.1201171875, [410, 411]], [86, "if", 0.07177734375, [411, 414]], [87, "the", 0.049072265625, [414, 418]], [88, "sum", 0.0595703125, [418, 422]], [89, "of", 0.043212890625, [422, 425]], [90, "the", 0.0400390625, [425, 429]], [91, "subsequ", 0.1396484375, [429, 437]], [92, "ence", 0.07861328125, [437, 441]], [93, "'", 0.07421875, [441, 442]], [94, "s", 0.042724609375, [442, 443]], [95, "elements", 0.05322265625, [443, 452]], [96, "is", 0.04248046875, [452, 455]], [97, "sum", 0.048095703125, [455, 459]], [98, ",", 0.1025390625, [459, 460]], [99, "then", 0.06689453125, [460, 465]], [100, "you", 0.0625, [465, 469]], [101, "want", 0.11669921875, [469, 474]], [102, "to", 0.047119140625, [474, 477]], [103, "minimize", 0.27734375, [477, 486]], [104, "the", 0.053955078125, [486, 490]], [105, "absolute", 0.130859375, [490, 499]], [106, "difference", 0.1787109375, [499, 510]], [107, "abs", 0.134765625, [510, 514]], [108, "(", 0.08837890625, [514, 515]], [109, "sum", 0.044677734375, [515, 518]], [110, "-", 0.052001953125, [518, 520]], [111, "goal", 0.08154296875, [520, 525]], [112, ").", 0.181640625, [525, 527]], [114, "Return", 0.80859375, [528, 534]], [115, "the", 0.255859375, [534, 538]], [116, "minimum", 0.283203125, [538, 546]], [117, "possible", 0.2119140625, [546, 555]], [118, "value", 0.22265625, [555, 561]], [119, "of", 0.107421875, [561, 564]], [120, "abs", 0.28125, [564, 568]], [121, "(", 0.103515625, [568, 569]], [122, "sum", 0.091796875, [569, 572]], [123, "-", 0.05517578125, [572, 574]], [124, "goal", 0.0908203125, [574, 579]], [125, ").", 0.376953125, [579, 581]], [127, "Note", 0.32421875, [582, 586]], [128, "that", 0.177734375, [586, 591]], [129, "a", 0.10009765625, [591, 593]], [130, "subsequ", 0.248046875, [593, 601]], [131, "ence", 0.0986328125, [601, 605]], [132, "of", 0.062255859375, [605, 608]], [133, "an", 0.047119140625, [608, 611]], [134, "array", 0.0986328125, [611, 617]], [135, "is", 0.05419921875, [617, 620]], [136, "an", 0.044677734375, [620, 623]], [137, "array", 0.061767578125, [623, 629]], [138, "formed", 0.0849609375, [629, 636]], [139, "by", 0.0556640625, [636, 639]], [140, "removing", 0.0908203125, [639, 648]], [141, "some", 0.0673828125, [648, 653]], [142, "elements", 0.054931640625, [653, 662]], [143, "(", 0.06396484375, [662, 664]], [144, "poss", 0.033203125, [664, 668]], [145, "ibly", 0.05859375, [668, 672]], [146, "all", 0.0498046875, [672, 676]], [147, "or", 0.045654296875, [676, 679]], [148, "none", 0.0693359375, [679, 684]], [149, ")", 0.087890625, [684, 685]], [150, "of", 0.0439453125, [685, 688]], [151, "the", 0.036865234375, [688, 692]], [152, "original", 0.042724609375, [692, 701]], [153, "array", 0.05712890625, [701, 707]], [154, ".", 0.2119140625, [707, 708]], [155, "B", 0.3984375, [708, 709]], [156, "ug", 2.6875, [709, 711]], [157, "gy", 3.6875, [711, 713]], [158, "code", 9.1875, [713, 718]], [159, ":", 6.3125, [718, 720]], [160, "class", 2.015625, [720, 726]], [161, "S", 0.427734375, [726, 728]], [162, "olution", 1.125, [728, 735]], [163, "{", 0.7734375, [735, 737]], [165, "public", 0.359375, [738, 744]], [166, ":", 0.259765625, [744, 745]], [169, "void", 0.388671875, [749, 754]], [170, "find", 0.365234375, [754, 759]], [171, "(", 0.4609375, [759, 760]], [172, "vector", 0.2890625, [760, 766]], [173, "<", 0.0576171875, [766, 767]], [174, "int", 0.1005859375, [767, 770]], [175, ">", 0.058837890625, [770, 771]], [176, "&", 0.080078125, [771, 772]], [177, "v", 0.1298828125, [772, 773]], [178, ",", 0.07763671875, [773, 774]], [179, "int", 0.049560546875, [774, 778]], [180, "i", 0.0703125, [778, 780]], [181, ",", 0.06591796875, [780, 781]], [182, "int", 0.0322265625, [781, 785]], [183, "e", 0.08642578125, [785, 787]], [184, ",", 0.062255859375, [787, 788]], [185, "int", 0.03271484375, [788, 792]], [186, "sum", 0.0810546875, [792, 796]], [187, ",", 0.06396484375, [796, 797]], [188, "vector", 0.042724609375, [797, 804]], [189, "<", 0.031494140625, [804, 805]], [190, "int", 0.05419921875, [805, 808]], [191, ">", 0.03369140625, [808, 809]], [192, "&", 0.03662109375, [809, 810]], [193, "sum", 0.06982421875, [810, 813]], [194, "v", 0.10205078125, [813, 814]], [195, "){", 0.10595703125, [814, 816]], [198, "if", 0.08740234375, [824, 827]], [199, "(", 0.0859375, [827, 828]], [200, "i", 0.042236328125, [828, 829]], [201, "==", 0.05029296875, [829, 831]], [202, "e", 0.0546875, [831, 832]], [203, "){", 0.060791015625, [832, 834]], [206, "sum", 0.034423828125, [846, 850]], [207, "v", 0.031494140625, [850, 851]], [208, ".", 0.12109375, [851, 852]], [209, "push", 0.09228515625, [852, 856]], [210, "_", 0.1494140625, [856, 857]], [211, "back", 0.050048828125, [857, 861]], [212, "(", 0.06689453125, [861, 862]], [213, "sum", 0.033447265625, [862, 865]], [214, ");", 0.06591796875, [865, 867]], [217, "return", 0.0908203125, [879, 886]], [218, ";", 0.0771484375, [886, 887]], [221, "}", 0.0673828125, [895, 897]], [224, "find", 0.1708984375, [905, 910]], [225, "(", 0.2080078125, [910, 911]], [226, "v", 0.039794921875, [911, 912]], [227, ",", 0.046875, [912, 913]], [228, "i", 0.03173828125, [913, 914]], [229, "+", 0.0301513671875, [914, 915]], [230, "1", 0.076171875, [915, 916]], [231, ",", 0.044189453125, [916, 917]], [232, "e", 0.033203125, [917, 918]], [233, ",", 0.03955078125, [918, 919]], [234, "sum", 0.0281982421875, [919, 922]], [235, "+", 0.040771484375, [922, 923]], [236, "v", 0.0238037109375, [923, 924]], [237, "[", 0.034423828125, [924, 925]], [238, "i", 0.0233154296875, [925, 926]], [239, "],", 0.04443359375, [926, 928]], [240, "sum", 0.029296875, [928, 931]], [241, "v", 0.029296875, [931, 932]], [242, ");", 0.08544921875, [932, 934]], [245, "find", 0.1494140625, [942, 947]], [246, "(", 0.12060546875, [947, 948]], [247, "v", 0.053955078125, [948, 949]], [248, ",", 0.041748046875, [949, 950]], [249, "i", 0.0224609375, [950, 951]], [250, "+", 0.0224609375, [951, 952]], [251, "1", 0.05029296875, [952, 953]], [252, ",", 0.0390625, [953, 954]], [253, "e", 0.0242919921875, [954, 955]], [254, ",", 0.041015625, [955, 956]], [255, "sum", 0.0263671875, [956, 959]], [256, ",", 0.046630859375, [959, 960]], [257, "sum", 0.04443359375, [960, 963]], [258, "v", 0.03271484375, [963, 964]], [259, ");", 0.08349609375, [964, 966]], [262, "}", 0.205078125, [970, 972]], [269, "int", 0.2412109375, [990, 994]], [270, "min", 0.279296875, [994, 998]], [271, "Abs", 0.1943359375, [998, 1001]], [272, "Diff", 0.359375, [1001, 1005]], [273, "erence", 0.345703125, [1005, 1011]], [274, "(", 0.494140625, [1011, 1012]], [275, "vector", 0.08642578125, [1012, 1018]], [276, "<", 0.2734375, [1018, 1019]], [277, "int", 0.0888671875, [1019, 1022]], [278, ">", 0.042724609375, [1022, 1023]], [279, "&", 0.056640625, [1023, 1024]], [280, "num", 0.08984375, [1024, 1028]], [281, "s", 0.10693359375, [1028, 1029]], [282, ",", 0.06640625, [1029, 1030]], [283, "int", 0.04150390625, [1030, 1034]], [284, "goal", 0.2578125, [1034, 1039]], [285, ")", 0.16015625, [1039, 1040]], [286, "{", 0.2412109375, [1040, 1042]], [289, "int", 0.052001953125, [1050, 1054]], [290, "n", 0.09130859375, [1054, 1056]], [291, "=", 0.09423828125, [1056, 1057]], [292, "num", 5.125, [1057, 1060]], [293, "s", 0.043212890625, [1060, 1061]], [294, ".", 0.11279296875, [1061, 1062]], [295, "size", 0.056396484375, [1062, 1066]], [296, "();", 0.06494140625, [1066, 1069]], [301, "//", 0.259765625, [1086, 1089]], [302, "Step", 0.4375, [1089, 1093]], [304, "1", 0.279296875, [1094, 1095]], [305, ":", 0.21875, [1095, 1096]], [306, "Div", 0.1328125, [1096, 1100]], [307, "ide", 0.173828125, [1100, 1103]], [308, "num", 0.28125, [1103, 1107]], [309, "s", 0.11279296875, [1107, 1108]], [310, "into", 0.12890625, [1108, 1113]], [312, "2", 0.10693359375, [1114, 1115]], [313, "sub", 0.0634765625, [1115, 1119]], [314, "arr", 0.134765625, [1119, 1122]], [315, "ays", 0.11328125, [1122, 1125]], [316, "of", 0.06689453125, [1125, 1128]], [317, "size", 0.08056640625, [1128, 1133]], [318, "n", 0.056884765625, [1133, 1135]], [319, "/", 0.06640625, [1135, 1136]], [320, "2", 0.1103515625, [1136, 1137]], [321, "and", 0.06298828125, [1137, 1141]], [322, "n", 0.03662109375, [1141, 1143]], [323, "-", 0.052490234375, [1143, 1144]], [324, "n", 0.032470703125, [1144, 1145]], [325, "/", 0.0419921875, [1145, 1146]], [326, "2", 0.0712890625, [1146, 1147]], [331, "vector", 0.07666015625, [1164, 1171]], [332, "<", 0.03564453125, [1171, 1172]], [333, "int", 0.04736328125, [1172, 1175]], [334, ">", 0.048828125, [1175, 1176]], [335, "A", 0.1328125, [1176, 1177]], [336, ",", 0.08984375, [1177, 1178]], [337, "B", 0.06884765625, [1178, 1179]], [338, ";", 0.0732421875, [1179, 1180]], [341, "for", 0.06689453125, [1188, 1192]], [342, "(", 0.09912109375, [1192, 1193]], [343, "int", 0.046142578125, [1193, 1196]], [344, "i", 0.033203125, [1196, 1198]], [345, "=", 0.052978515625, [1198, 1199]], [346, "0", 0.050537109375, [1199, 1200]], [347, ";", 0.056640625, [1200, 1201]], [348, "i", 0.042236328125, [1201, 1202]], [349, "<", 0.033203125, [1202, 1203]], [350, "n", 0.041259765625, [1203, 1204]], [351, "/", 0.045654296875, [1204, 1205]], [352, "2", 0.08984375, [1205, 1206]], [353, ";", 0.04150390625, [1206, 1207]], [354, "i", 0.0240478515625, [1207, 1208]], [355, "++", 0.0303955078125, [1208, 1210]], [356, ")", 0.0849609375, [1210, 1211]], [359, "A", 0.039794921875, [1223, 1225]], [360, ".", 0.10498046875, [1225, 1226]], [361, "push", 0.05322265625, [1226, 1230]], [362, "_", 0.064453125, [1230, 1231]], [363, "back", 0.025634765625, [1231, 1235]], [364, "(", 0.06689453125, [1235, 1236]], [365, "num", 0.04052734375, [1236, 1239]], [366, "s", 0.039794921875, [1239, 1240]], [367, "[", 0.0306396484375, [1240, 1241]], [368, "i", 0.022216796875, [1241, 1242]], [369, "]);", 0.045654296875, [1242, 1245]], [372, "for", 0.04150390625, [1253, 1257]], [373, "(", 0.07080078125, [1257, 1258]], [374, "int", 0.02734375, [1258, 1261]], [375, "i", 0.0213623046875, [1261, 1263]], [376, "=", 0.0361328125, [1263, 1264]], [377, "n", 0.0189208984375, [1264, 1265]], [378, "/", 0.02685546875, [1265, 1266]], [379, "2", 0.053955078125, [1266, 1267]], [380, ";", 0.033203125, [1267, 1268]], [381, "i", 0.020263671875, [1268, 1269]], [382, "<", 0.0206298828125, [1269, 1270]], [383, "n", 0.0166015625, [1270, 1271]], [384, ";", 0.033935546875, [1271, 1272]], [385, "i", 0.0186767578125, [1272, 1273]], [386, "++", 0.0244140625, [1273, 1275]], [387, ")", 0.07958984375, [1275, 1276]], [390, "B", 0.040771484375, [1288, 1290]], [391, ".", 0.10546875, [1290, 1291]], [392, "push", 0.040283203125, [1291, 1295]], [393, "_", 3.875, [1295, 1296]], [394, "back", 0.0252685546875, [1296, 1300]], [395, "(", 1.28125, [1300, 1301]], [396, "num", 0.07568359375, [1301, 1304]], [397, "s", 0.0341796875, [1304, 1305]], [398, "[", 0.0267333984375, [1305, 1306]], [399, "i", 0.029052734375, [1306, 1307]], [400, "]);", 0.05029296875, [1307, 1310]], [405, "//", 0.134765625, [1327, 1330]], [406, "Step", 0.2373046875, [1330, 1334]], [408, "2", 0.1611328125, [1335, 1336]], [409, ":", 0.1171875, [1336, 1337]], [410, "Find", 0.1396484375, [1337, 1342]], [411, "all", 0.11181640625, [1342, 1346]], [412, "possible", 0.111328125, [1346, 1355]], [413, "subset", 0.1904296875, [1355, 1362]], [414, "sums", 0.224609375, [1362, 1367]], [415, "of", 0.087890625, [1367, 1370]], [416, "A", 0.08203125, [1370, 1372]], [417, "and", 0.07421875, [1372, 1376]], [418, "B", 0.0625, [1376, 1378]], [423, "vector", 0.055419921875, [1395, 1402]], [424, "<", 0.03271484375, [1402, 1403]], [425, "int", 0.038818359375, [1403, 1406]], [426, ">", 0.04833984375, [1406, 1407]], [427, "sum", 0.056640625, [1407, 1410]], [428, "A", 0.055419921875, [1410, 1411]], [429, ",", 0.0556640625, [1411, 1412]], [430, "sum", 0.03662109375, [1412, 1415]], [431, "B", 0.03173828125, [1415, 1416]], [432, ";", 0.049072265625, [1416, 1417]], [435, "find", 0.1640625, [1425, 1430]], [436, "(", 0.1435546875, [1430, 1431]], [437, "A", 0.033935546875, [1431, 1432]], [438, ",", 0.045166015625, [1432, 1433]], [439, "0", 0.03515625, [1433, 1434]], [440, ",", 0.04443359375, [1434, 1435]], [441, "A", 0.0218505859375, [1435, 1436]], [442, ".", 0.10400390625, [1436, 1437]], [443, "size", 0.042236328125, [1437, 1441]], [444, "(),", 0.03564453125, [1441, 1444]], [445, "0", 0.034423828125, [1444, 1445]], [446, ",", 0.04833984375, [1445, 1446]], [447, "sum", 0.033447265625, [1446, 1449]], [448, "A", 0.02880859375, [1449, 1450]], [449, ");", 0.068359375, [1450, 1452]], [452, "find", 0.068359375, [1460, 1465]], [453, "(", 0.0849609375, [1465, 1466]], [454, "B", 0.0230712890625, [1466, 1467]], [455, ",", 0.04150390625, [1467, 1468]], [456, "0", 0.0244140625, [1468, 1469]], [457, ",", 0.039306640625, [1469, 1470]], [458, "B", 0.0164794921875, [1470, 1471]], [459, ".", 0.1142578125, [1471, 1472]], [460, "size", 0.031494140625, [1472, 1476]], [461, "(),", 0.02294921875, [1476, 1479]], [462, "0", 0.0242919921875, [1479, 1480]], [463, ",", 0.041748046875, [1480, 1481]], [464, "sum", 0.031982421875, [1481, 1484]], [465, "B", 0.022705078125, [1484, 1485]], [466, ");", 0.0634765625, [1485, 1487]], [471, "sort", 0.1630859375, [1504, 1509]], [472, "(", 0.130859375, [1509, 1510]], [473, "sum", 0.059814453125, [1510, 1513]], [474, "A", 0.046630859375, [1513, 1514]], [475, ".", 0.126953125, [1514, 1515]], [476, "begin", 0.06201171875, [1515, 1520]], [477, "(),", 0.03662109375, [1520, 1523]], [478, "sum", 0.051025390625, [1523, 1526]], [479, "A", 0.038330078125, [1526, 1527]], [480, ".", 0.10400390625, [1527, 1528]], [481, "end", 0.033447265625, [1528, 1531]], [482, "());", 0.058349609375, [1531, 1535]], [487, "//", 0.1298828125, [1553, 1556]], [488, "Step", 0.1513671875, [1556, 1560]], [490, "3", 0.1396484375, [1561, 1562]], [491, ":", 0.10107421875, [1562, 1563]], [492, "Find", 0.08837890625, [1563, 1568]], [493, "combinations", 0.33203125, [1568, 1581]], [494, "from", 0.11962890625, [1581, 1586]], [495, "sum", 0.057861328125, [1586, 1590]], [496, "A", 0.051513671875, [1590, 1591]], [497, "&", 0.1494140625, [1591, 1593]], [498, "sum", 0.03271484375, [1593, 1597]], [499, "B", 0.047607421875, [1597, 1598]], [500, "such", 0.08154296875, [1598, 1603]], [501, "that", 0.09228515625, [1603, 1608]], [502, "abs", 0.08740234375, [1608, 1612]], [503, "(", 0.09619140625, [1612, 1613]], [504, "sum", 0.03271484375, [1613, 1616]], [505, "-", 0.06396484375, [1616, 1617]], [506, "go", 0.0625, [1617, 1619]], [507, "al", 0.062255859375, [1619, 1621]], [508, ")", 0.11083984375, [1621, 1622]], [509, "is", 0.051513671875, [1622, 1625]], [510, "minim", 0.08935546875, [1625, 1631]], [511, "ized", 0.1875, [1631, 1635]], [516, "int", 0.087890625, [1652, 1656]], [517, "an", 0.109375, [1656, 1659]], [518, "s", 0.1787109375, [1659, 1660]], [519, "=", 0.0986328125, [1660, 1661]], [520, "INT", 0.134765625, [1661, 1664]], [521, "_", 0.08837890625, [1664, 1665]], [522, "MAX", 0.1259765625, [1665, 1668]], [523, ";", 0.11962890625, [1668, 1669]], [528, "for", 0.09033203125, [1686, 1690]], [529, "(", 0.1005859375, [1690, 1691]], [530, "int", 0.048828125, [1691, 1694]], [531, "i", 0.03173828125, [1694, 1696]], [532, "=", 0.047119140625, [1696, 1697]], [533, "0", 0.0277099609375, [1697, 1698]], [534, ";", 0.042236328125, [1698, 1699]], [535, "i", 0.0272216796875, [1699, 1700]], [536, "<", 0.0260009765625, [1700, 1701]], [537, "sum", 0.036865234375, [1701, 1704]], [538, "A", 0.039306640625, [1704, 1705]], [539, ".", 0.1162109375, [1705, 1706]], [540, "size", 0.041748046875, [1706, 1710]], [541, "();", 0.044921875, [1710, 1713]], [542, "i", 0.033935546875, [1713, 1714]], [543, "++", 0.043701171875, [1714, 1716]], [544, "){", 0.05810546875, [1716, 1718]], [547, "int", 0.05126953125, [1730, 1734]], [548, "s", 0.045654296875, [1734, 1736]], [549, "=", 0.061279296875, [1736, 1737]], [550, "sum", 0.03466796875, [1737, 1740]], [551, "A", 0.02880859375, [1740, 1741]], [552, "[", 0.043212890625, [1741, 1742]], [553, "i", 0.031494140625, [1742, 1743]], [554, "];", 0.053466796875, [1743, 1745]], [557, "int", 0.04541015625, [1757, 1761]], [558, "l", 0.052734375, [1761, 1763]], [559, "=", 0.058837890625, [1763, 1764]], [560, "0", 0.039306640625, [1764, 1765]], [561, ";", 0.04736328125, [1765, 1766]], [564, "int", 0.043212890625, [1778, 1782]], [565, "r", 0.06103515625, [1782, 1784]], [566, "=", 0.052490234375, [1784, 1785]], [567, "sum", 0.037109375, [1785, 1788]], [568, "B", 0.03369140625, [1788, 1789]], [569, ".", 0.123046875, [1789, 1790]], [570, "size", 0.04443359375, [1790, 1794]], [571, "()-", 0.041015625, [1794, 1797]], [572, "1", 0.0712890625, [1797, 1798]], [573, ";", 0.051513671875, [1798, 1799]], [576, "while", 0.0771484375, [1811, 1817]], [577, "(", 0.08740234375, [1817, 1818]], [578, "l", 0.026123046875, [1818, 1819]], [579, "<", 0.0296630859375, [1819, 1820]], [580, "=", 0.05029296875, [1820, 1821]], [581, "r", 0.0322265625, [1821, 1822]], [582, "){", 0.06298828125, [1822, 1824]], [585, "int", 0.04443359375, [1840, 1844]], [586, "mid", 0.08837890625, [1844, 1848]], [587, "=", 0.05224609375, [1848, 1849]], [588, "l", 0.0230712890625, [1849, 1850]], [589, "+", 0.032470703125, [1850, 1851]], [590, "(", 0.08544921875, [1851, 1852]], [591, "r", 0.0281982421875, [1852, 1853]], [592, "-", 0.056396484375, [1853, 1854]], [593, "l", 0.0299072265625, [1854, 1855]], [594, ")/", 0.07275390625, [1855, 1857]], [595, "2", 0.181640625, [1857, 1858]], [596, ";", 0.06689453125, [1858, 1859]], [599, "int", 0.06591796875, [1875, 1879]], [600, "sum", 0.059326171875, [1879, 1883]], [601, "=", 0.0615234375, [1883, 1884]], [602, "s", 0.0419921875, [1884, 1885]], [603, "+", 0.03369140625, [1885, 1886]], [604, "sum", 0.03076171875, [1886, 1889]], [605, "B", 0.022216796875, [1889, 1890]], [606, "[", 0.038330078125, [1890, 1891]], [607, "mid", 0.026611328125, [1891, 1894]], [608, "];", 0.046142578125, [1894, 1896]], [611, "if", 0.0537109375, [1912, 1915]], [612, "(", 0.08642578125, [1915, 1916]], [613, "sum", 0.037109375, [1916, 1919]], [614, "==", 0.0439453125, [1919, 1921]], [615, "go", 0.05615234375, [1921, 1923]], [616, "al", 0.08056640625, [1923, 1925]], [617, ")", 0.12060546875, [1925, 1926]], [620, "return", 0.173828125, [1946, 1953]], [622, "0", 0.1962890625, [1954, 1955]], [623, ";", 0.08935546875, [1955, 1956]], [626, "an", 0.08935546875, [1972, 1975]], [627, "s", 0.0908203125, [1975, 1976]], [628, "=", 0.07763671875, [1976, 1977]], [629, "min", 0.0908203125, [1977, 1980]], [630, "(", 0.10888671875, [1980, 1981]], [631, "ans", 0.054931640625, [1981, 1984]], [632, ",", 0.07373046875, [1984, 1985]], [633, "abs", 0.0634765625, [1985, 1988]], [634, "(", 0.09033203125, [1988, 1989]], [635, "sum", 0.0306396484375, [1989, 1992]], [636, "-", 0.0595703125, [1992, 1993]], [637, "go", 0.33203125, [1993, 1995]], [638, "al", 0.034423828125, [1995, 1997]], [639, "));", 0.08251953125, [1997, 2000]], [642, "if", 0.0537109375, [2016, 2019]], [643, "(", 0.0908203125, [2019, 2020]], [644, "sum", 0.0380859375, [2020, 2023]], [645, ">", 0.05029296875, [2023, 2024]], [646, "go", 0.036865234375, [2024, 2026]], [647, "al", 0.04443359375, [2026, 2028]], [648, "){", 0.080078125, [2028, 2030]], [651, "r", 0.04736328125, [2050, 2052]], [652, "=", 0.06494140625, [2052, 2053]], [653, "mid", 0.043212890625, [2053, 2056]], [654, "-", 0.061767578125, [2056, 2057]], [655, "1", 0.08154296875, [2057, 2058]], [656, ";", 0.052490234375, [2058, 2059]], [659, "}", 0.0703125, [2075, 2077]], [662, "else", 0.052001953125, [2093, 2098]], [663, "{", 0.0654296875, [2098, 2099]], [666, "l", 0.034423828125, [2119, 2121]], [667, "=", 0.0576171875, [2121, 2122]], [668, "mid", 0.03369140625, [2122, 2125]], [669, "+", 0.03564453125, [2125, 2126]], [670, "1", 0.072265625, [2126, 2127]], [671, ";", 0.056396484375, [2127, 2128]], [674, "}", 0.08837890625, [2144, 2146]], [678, "}", 0.095703125, [2162, 2164]], [681, "}", 0.1220703125, [2172, 2174]], [686, "return", 0.15234375, [2191, 2198]], [687, "an", 2.125, [2198, 2201]], [688, "s", 0.12109375, [2201, 2202]], [689, ";", 0.45703125, [2202, 2203]], [692, "}", 0.63671875, [2207, 2209]], [694, "};", 2.515625, [2210, 2212]]], "coding_all": [[1, "You", 2.203125, [0, 3]], [2, "are", 0.1005859375, [3, 7]], [3, "an", 0.05029296875, [7, 10]], [4, "exception", 0.05078125, [10, 20]], [5, "ally", 0.0245361328125, [20, 24]], [6, "intelligent", 0.03515625, [24, 36]], [7, "coding", 0.0703125, [36, 43]], [8, "assistant", 0.1552734375, [43, 53]], [9, "that", 0.0361328125, [53, 58]], [10, "consistently", 0.044189453125, [58, 71]], [11, "delivers", 0.0322265625, [71, 80]], [12, "accurate", 0.03369140625, [80, 89]], [13, "and", 0.0296630859375, [89, 93]], [14, "reliable", 0.024169921875, [93, 102]], [15, "responses", 0.07666015625, [102, 112]], [16, "to", 0.03466796875, [112, 115]], [17, "user", 0.0654296875, [115, 120]], [18, "instructions", 0.06640625, [120, 133]], [19, ".", 0.349609375, [133, 134]], [23, "@", 0.400390625, [143, 145]], [24, "@", 0.373046875, [145, 146]], [25, "Inst", 0.193359375, [146, 151]], [26, "ruction", 0.408203125, [151, 158]], [29, "You", 0.17578125, [166, 170]], [30, "are", 0.051025390625, [170, 174]], [31, "a", 0.07470703125, [174, 176]], [32, "program", 0.09375, [176, 184]], [33, "rep", 0.095703125, [184, 188]], [34, "aire", 0.314453125, [188, 192]], [35, "r", 0.14453125, [192, 193]], [36, ".", 0.283203125, [193, 194]], [37, "Please", 0.248046875, [194, 201]], [38, "repair", 0.73828125, [201, 208]], [39, "the", 0.1162109375, [208, 212]], [40, "following", 0.224609375, [212, 222]], [41, "bug", 0.373046875, [222, 226]], [42, "gy", 0.1943359375, [226, 228]], [43, "program", 0.462890625, [228, 236]], [44, ".", 1.390625, [236, 237]], [45, "You", 0.1826171875, [237, 241]], [46, "are", 0.053466796875, [241, 245]], [47, "given", 0.255859375, [245, 251]], [48, "an", 0.06982421875, [251, 254]], [49, "integer", 0.130859375, [254, 262]], [50, "array", 0.14453125, [262, 268]], [51, "num", 0.1015625, [268, 272]], [52, "s", 0.0830078125, [272, 273]], [53, "and", 0.09228515625, [273, 277]], [54, "an", 0.022705078125, [277, 280]], [55, "integer", 0.02490234375, [280, 288]], [56, "goal", 0.12255859375, [288, 293]], [57, ".", 0.193359375, [293, 294]], [59, "You", 0.162109375, [295, 298]], [60, "want", 0.09033203125, [298, 303]], [61, "to", 0.035400390625, [303, 306]], [62, "choose", 0.0732421875, [306, 313]], [63, "a", 0.032470703125, [313, 315]], [64, "subsequ", 0.1171875, [315, 323]], [65, "ence", 0.080078125, [323, 327]], [66, "of", 0.0262451171875, [327, 330]], [67, "num", 0.0291748046875, [330, 334]], [68, "s", 0.047119140625, [334, 335]], [69, "such", 0.043212890625, [335, 340]], [70, "that", 0.041748046875, [340, 345]], [71, "the", 0.0289306640625, [345, 349]], [72, "sum", 0.04052734375, [349, 353]], [73, "of", 0.01953125, [353, 356]], [74, "its", 0.017333984375, [356, 360]], [75, "elements", 0.0283203125, [360, 369]], [76, "is", 0.0201416015625, [369, 372]], [77, "the", 0.0189208984375, [372, 376]], [78, "closest", 0.09423828125, [376, 384]], [79, "possible", 0.0341796875, [384, 393]], [80, "to", 0.021240234375, [393, 396]], [81, "goal", 0.0732421875, [396, 401]], [82, ".", 0.134765625, [401, 402]], [83, "That", 0.052001953125, [402, 407]], [84, "is", 0.0361328125, [407, 410]], [85, ",", 0.05810546875, [410, 411]], [86, "if", 0.0380859375, [411, 414]], [87, "the", 0.0184326171875, [414, 418]], [88, "sum", 0.0196533203125, [418, 422]], [89, "of", 0.01422119140625, [422, 425]], [90, "the", 0.01287841796875, [425, 429]], [91, "subsequ", 0.033935546875, [429, 437]], [92, "ence", 0.020263671875, [437, 441]], [93, "'", 0.036865234375, [441, 442]], [94, "s", 0.01287841796875, [442, 443]], [95, "elements", 0.0191650390625, [443, 452]], [96, "is", 0.0191650390625, [452, 455]], [97, "sum", 0.0172119140625, [455, 459]], [98, ",", 0.041748046875, [459, 460]], [99, "then", 0.037353515625, [460, 465]], [100, "you", 0.03271484375, [465, 469]], [101, "want", 0.047607421875, [469, 474]], [102, "to", 0.019775390625, [474, 477]], [103, "minimize", 0.0791015625, [477, 486]], [104, "the", 0.019287109375, [486, 490]], [105, "absolute", 0.039794921875, [490, 499]], [106, "difference", 0.045654296875, [499, 510]], [107, "abs", 0.034423828125, [510, 514]], [108, "(", 0.03759765625, [514, 515]], [109, "sum", 0.015625, [515, 518]], [110, "-", 0.01611328125, [518, 520]], [111, "goal", 0.032958984375, [520, 525]], [112, ").", 0.0927734375, [525, 527]], [114, "Return", 0.6796875, [528, 534]], [115, "the", 0.130859375, [534, 538]], [116, "minimum", 0.1142578125, [538, 546]], [117, "possible", 0.056884765625, [546, 555]], [118, "value", 0.087890625, [555, 561]], [119, "of", 0.042236328125, [561, 564]], [120, "abs", 0.0859375, [564, 568]], [121, "(", 0.04833984375, [568, 569]], [122, "sum", 0.034912109375, [569, 572]], [123, "-", 0.0186767578125, [572, 574]], [124, "goal", 0.04248046875, [574, 579]], [125, ").", 0.23046875, [579, 581]], [127, "Note", 0.388671875, [582, 586]], [128, "that", 0.1103515625, [586, 591]], [129, "a", 0.0537109375, [591, 593]], [130, "subsequ", 0.0634765625, [593, 601]], [131, "ence", 0.03076171875, [601, 605]], [132, "of", 0.0235595703125, [605, 608]], [133, "an", 0.017333984375, [608, 611]], [134, "array", 0.0341796875, [611, 617]], [135, "is", 0.0269775390625, [617, 620]], [136, "an", 0.0203857421875, [620, 623]], [137, "array", 0.0294189453125, [623, 629]], [138, "formed", 0.053955078125, [629, 636]], [139, "by", 0.02880859375, [636, 639]], [140, "removing", 0.027587890625, [639, 648]], [141, "some", 0.0247802734375, [648, 653]], [142, "elements", 0.025146484375, [653, 662]], [143, "(", 0.033935546875, [662, 664]], [144, "poss", 0.0172119140625, [664, 668]], [145, "ibly", 0.0255126953125, [668, 672]], [146, "all", 0.0208740234375, [672, 676]], [147, "or", 0.0201416015625, [676, 679]], [148, "none", 0.0294189453125, [679, 684]], [149, ")", 0.043701171875, [684, 685]], [150, "of", 0.0167236328125, [685, 688]], [151, "the", 0.014892578125, [688, 692]], [152, "original", 0.015869140625, [692, 701]], [153, "array", 0.0189208984375, [701, 707]], [154, ".", 0.10498046875, [707, 708]], [155, "B", 0.5, [708, 709]], [156, "ug", 0.76171875, [709, 711]], [157, "gy", 0.60546875, [711, 713]], [158, "code", 0.76953125, [713, 718]], [159, ":", 1.234375, [718, 720]], [160, "class", 0.640625, [720, 726]], [161, "S", 0.12890625, [726, 728]], [162, "olution", 0.35546875, [728, 735]], [163, "{", 0.33203125, [735, 737]], [165, "public", 0.2412109375, [738, 744]], [166, ":", 0.203125, [744, 745]], [169, "void", 0.2353515625, [749, 754]], [170, "find", 0.1376953125, [754, 759]], [171, "(", 0.171875, [759, 760]], [172, "vector", 0.193359375, [760, 766]], [173, "<", 0.026611328125, [766, 767]], [174, "int", 0.0419921875, [767, 770]], [175, ">", 0.03125, [770, 771]], [176, "&", 0.044677734375, [771, 772]], [177, "v", 0.06787109375, [772, 773]], [178, ",", 0.03466796875, [773, 774]], [179, "int", 0.029052734375, [774, 778]], [180, "i", 0.0400390625, [778, 780]], [181, ",", 0.0296630859375, [780, 781]], [182, "int", 0.018798828125, [781, 785]], [183, "e", 0.0380859375, [785, 787]], [184, ",", 0.0289306640625, [787, 788]], [185, "int", 0.02001953125, [788, 792]], [186, "sum", 0.03125, [792, 796]], [187, ",", 0.027587890625, [796, 797]], [188, "vector", 0.033935546875, [797, 804]], [189, "<", 0.0184326171875, [804, 805]], [190, "int", 0.03125, [805, 808]], [191, ">", 0.02099609375, [808, 809]], [192, "&", 0.0283203125, [809, 810]], [193, "sum", 0.031494140625, [810, 813]], [194, "v", 0.04638671875, [813, 814]], [195, "){", 0.087890625, [814, 816]], [198, "if", 0.05908203125, [824, 827]], [199, "(", 0.0537109375, [827, 828]], [200, "i", 0.03125, [828, 829]], [201, "==", 0.041015625, [829, 831]], [202, "e", 0.04150390625, [831, 832]], [203, "){", 0.049560546875, [832, 834]], [206, "sum", 0.01483154296875, [846, 850]], [207, "v", 0.0167236328125, [850, 851]], [208, ".", 0.061279296875, [851, 852]], [209, "push", 0.0576171875, [852, 856]], [210, "_", 0.07470703125, [856, 857]], [211, "back", 0.0228271484375, [857, 861]], [212, "(", 0.031494140625, [861, 862]], [213, "sum", 0.017333984375, [862, 865]], [214, ");", 0.038818359375, [865, 867]], [217, "return", 0.052978515625, [879, 886]], [218, ";", 0.04248046875, [886, 887]], [221, "}", 0.048828125, [895, 897]], [224, "find", 0.06884765625, [905, 910]], [225, "(", 0.0703125, [910, 911]], [226, "v", 0.018798828125, [911, 912]], [227, ",", 0.0223388671875, [912, 913]], [228, "i", 0.0167236328125, [913, 914]], [229, "+", 0.01495361328125, [914, 915]], [230, "1", 0.0299072265625, [915, 916]], [231, ",", 0.0186767578125, [916, 917]], [232, "e", 0.01904296875, [917, 918]], [233, ",", 0.015380859375, [918, 919]], [234, "sum", 0.01007080078125, [919, 922]], [235, "+", 0.01348876953125, [922, 923]], [236, "v", 0.00811767578125, [923, 924]], [237, "[", 0.01220703125, [924, 925]], [238, "i", 0.0087890625, [925, 926]], [239, "],", 0.0155029296875, [926, 928]], [240, "sum", 0.01007080078125, [928, 931]], [241, "v", 0.01470947265625, [931, 932]], [242, ");", 0.043212890625, [932, 934]], [245, "find", 0.06396484375, [942, 947]], [246, "(", 0.04736328125, [947, 948]], [247, "v", 0.025146484375, [948, 949]], [248, ",", 0.0162353515625, [949, 950]], [249, "i", 0.0086669921875, [950, 951]], [250, "+", 0.0096435546875, [951, 952]], [251, "1", 0.0203857421875, [952, 953]], [252, ",", 0.01434326171875, [953, 954]], [253, "e", 0.01129150390625, [954, 955]], [254, ",", 0.01446533203125, [955, 956]], [255, "sum", 0.00994873046875, [956, 959]], [256, ",", 0.0177001953125, [959, 960]], [257, "sum", 0.0115966796875, [960, 963]], [258, "v", 0.0146484375, [963, 964]], [259, ");", 0.058837890625, [964, 966]], [262, "}", 0.1806640625, [970, 972]], [269, "int", 0.1572265625, [990, 994]], [270, "min", 0.1015625, [994, 998]], [271, "Abs", 0.05078125, [998, 1001]], [272, "Diff", 0.11279296875, [1001, 1005]], [273, "erence", 0.10546875, [1005, 1011]], [274, "(", 0.333984375, [1011, 1012]], [275, "vector", 0.09423828125, [1012, 1018]], [276, "<", 0.208984375, [1018, 1019]], [277, "int", 0.03662109375, [1019, 1022]], [278, ">", 0.029296875, [1022, 1023]], [279, "&", 0.06298828125, [1023, 1024]], [280, "num", 0.056640625, [1024, 1028]], [281, "s", 0.05810546875, [1028, 1029]], [282, ",", 0.0517578125, [1029, 1030]], [283, "int", 0.03369140625, [1030, 1034]], [284, "goal", 0.11328125, [1034, 1039]], [285, ")", 0.12890625, [1039, 1040]], [286, "{", 0.2392578125, [1040, 1042]], [289, "int", 0.0458984375, [1050, 1054]], [290, "n", 0.06396484375, [1054, 1056]], [291, "=", 0.06982421875, [1056, 1057]], [292, "num", 4.6875, [1057, 1060]], [293, "s", 0.019775390625, [1060, 1061]], [294, ".", 0.061279296875, [1061, 1062]], [295, "size", 0.034912109375, [1062, 1066]], [296, "();", 0.047119140625, [1066, 1069]], [301, "//", 0.1669921875, [1086, 1089]], [302, "Step", 0.2177734375, [1089, 1093]], [304, "1", 0.11767578125, [1094, 1095]], [305, ":", 0.0859375, [1095, 1096]], [306, "Div", 0.047119140625, [1096, 1100]], [307, "ide", 0.041748046875, [1100, 1103]], [308, "num", 0.0269775390625, [1103, 1107]], [309, "s", 0.030029296875, [1107, 1108]], [310, "into", 0.037353515625, [1108, 1113]], [312, "2", 0.0419921875, [1114, 1115]], [313, "sub", 0.0211181640625, [1115, 1119]], [314, "arr", 0.04296875, [1119, 1122]], [315, "ays", 0.032958984375, [1122, 1125]], [316, "of", 0.029541015625, [1125, 1128]], [317, "size", 0.0341796875, [1128, 1133]], [318, "n", 0.02978515625, [1133, 1135]], [319, "/", 0.04833984375, [1135, 1136]], [320, "2", 0.052734375, [1136, 1137]], [321, "and", 0.037841796875, [1137, 1141]], [322, "n", 0.019775390625, [1141, 1143]], [323, "-", 0.02587890625, [1143, 1144]], [324, "n", 0.01470947265625, [1144, 1145]], [325, "/", 0.0208740234375, [1145, 1146]], [326, "2", 0.035400390625, [1146, 1147]], [331, "vector", 0.046630859375, [1164, 1171]], [332, "<", 0.01544189453125, [1171, 1172]], [333, "int", 0.017822265625, [1172, 1175]], [334, ">", 0.02685546875, [1175, 1176]], [335, "A", 0.07177734375, [1176, 1177]], [336, ",", 0.04248046875, [1177, 1178]], [337, "B", 0.031982421875, [1178, 1179]], [338, ";", 0.048583984375, [1179, 1180]], [341, "for", 0.0419921875, [1188, 1192]], [342, "(", 0.0556640625, [1192, 1193]], [343, "int", 0.0255126953125, [1193, 1196]], [344, "i", 0.0196533203125, [1196, 1198]], [345, "=", 0.02880859375, [1198, 1199]], [346, "0", 0.0269775390625, [1199, 1200]], [347, ";", 0.02783203125, [1200, 1201]], [348, "i", 0.0283203125, [1201, 1202]], [349, "<", 0.021240234375, [1202, 1203]], [350, "n", 0.03369140625, [1203, 1204]], [351, "/", 0.0286865234375, [1204, 1205]], [352, "2", 0.044677734375, [1205, 1206]], [353, ";", 0.0201416015625, [1206, 1207]], [354, "i", 0.01116943359375, [1207, 1208]], [355, "++", 0.0230712890625, [1208, 1210]], [356, ")", 0.047607421875, [1210, 1211]], [359, "A", 0.0198974609375, [1223, 1225]], [360, ".", 0.055419921875, [1225, 1226]], [361, "push", 0.038330078125, [1226, 1230]], [362, "_", 0.036865234375, [1230, 1231]], [363, "back", 0.01336669921875, [1231, 1235]], [364, "(", 0.03173828125, [1235, 1236]], [365, "num", 0.017822265625, [1236, 1239]], [366, "s", 0.0235595703125, [1239, 1240]], [367, "[", 0.0162353515625, [1240, 1241]], [368, "i", 0.012451171875, [1241, 1242]], [369, "]);", 0.033203125, [1242, 1245]], [372, "for", 0.03759765625, [1253, 1257]], [373, "(", 0.04296875, [1257, 1258]], [374, "int", 0.0167236328125, [1258, 1261]], [375, "i", 0.015869140625, [1261, 1263]], [376, "=", 0.0225830078125, [1263, 1264]], [377, "n", 0.01251220703125, [1264, 1265]], [378, "/", 0.017578125, [1265, 1266]], [379, "2", 0.0281982421875, [1266, 1267]], [380, ";", 0.0172119140625, [1267, 1268]], [381, "i", 0.012451171875, [1268, 1269]], [382, "<", 0.0126953125, [1269, 1270]], [383, "n", 0.01007080078125, [1270, 1271]], [384, ";", 0.015380859375, [1271, 1272]], [385, "i", 0.00823974609375, [1272, 1273]], [386, "++", 0.0164794921875, [1273, 1275]], [387, ")", 0.048095703125, [1275, 1276]], [390, "B", 0.0252685546875, [1288, 1290]], [391, ".", 0.0537109375, [1290, 1291]], [392, "push", 0.017333984375, [1291, 1295]], [393, "_", 1.6953125, [1295, 1296]], [394, "back", 0.01470947265625, [1296, 1300]], [395, "(", 1.2109375, [1300, 1301]], [396, "num", 0.041259765625, [1301, 1304]], [397, "s", 0.0174560546875, [1304, 1305]], [398, "[", 0.01092529296875, [1305, 1306]], [399, "i", 0.01495361328125, [1306, 1307]], [400, "]);", 0.030029296875, [1307, 1310]], [405, "//", 0.1083984375, [1327, 1330]], [406, "Step", 0.10791015625, [1330, 1334]], [408, "2", 0.08935546875, [1335, 1336]], [409, ":", 0.06884765625, [1336, 1337]], [410, "Find", 0.04931640625, [1337, 1342]], [411, "all", 0.038818359375, [1342, 1346]], [412, "possible", 0.0274658203125, [1346, 1355]], [413, "subset", 0.043212890625, [1355, 1362]], [414, "sums", 0.051025390625, [1362, 1367]], [415, "of", 0.023681640625, [1367, 1370]], [416, "A", 0.0233154296875, [1370, 1372]], [417, "and", 0.02685546875, [1372, 1376]], [418, "B", 0.027099609375, [1376, 1378]], [423, "vector", 0.034423828125, [1395, 1402]], [424, "<", 0.0150146484375, [1402, 1403]], [425, "int", 0.01708984375, [1403, 1406]], [426, ">", 0.028564453125, [1406, 1407]], [427, "sum", 0.0311279296875, [1407, 1410]], [428, "A", 0.0230712890625, [1410, 1411]], [429, ",", 0.0279541015625, [1411, 1412]], [430, "sum", 0.0164794921875, [1412, 1415]], [431, "B", 0.01708984375, [1415, 1416]], [432, ";", 0.027099609375, [1416, 1417]], [435, "find", 0.09375, [1425, 1430]], [436, "(", 0.0791015625, [1430, 1431]], [437, "A", 0.0185546875, [1431, 1432]], [438, ",", 0.021728515625, [1432, 1433]], [439, "0", 0.0191650390625, [1433, 1434]], [440, ",", 0.021728515625, [1434, 1435]], [441, "A", 0.0107421875, [1435, 1436]], [442, ".", 0.0498046875, [1436, 1437]], [443, "size", 0.021484375, [1437, 1441]], [444, "(),", 0.0198974609375, [1441, 1444]], [445, "0", 0.015869140625, [1444, 1445]], [446, ",", 0.022216796875, [1445, 1446]], [447, "sum", 0.01226806640625, [1446, 1449]], [448, "A", 0.01422119140625, [1449, 1450]], [449, ");", 0.04248046875, [1450, 1452]], [452, "find", 0.045166015625, [1460, 1465]], [453, "(", 0.039306640625, [1465, 1466]], [454, "B", 0.01165771484375, [1466, 1467]], [455, ",", 0.0162353515625, [1467, 1468]], [456, "0", 0.011962890625, [1468, 1469]], [457, ",", 0.0152587890625, [1469, 1470]], [458, "B", 0.007354736328125, [1470, 1471]], [459, ".", 0.060546875, [1471, 1472]], [460, "size", 0.01409912109375, [1472, 1476]], [461, "(),", 0.01025390625, [1476, 1479]], [462, "0", 0.01214599609375, [1479, 1480]], [463, ",", 0.017822265625, [1480, 1481]], [464, "sum", 0.014404296875, [1481, 1484]], [465, "B", 0.0146484375, [1484, 1485]], [466, ");", 0.04638671875, [1485, 1487]], [471, "sort", 0.115234375, [1504, 1509]], [472, "(", 0.07421875, [1509, 1510]], [473, "sum", 0.0238037109375, [1510, 1513]], [474, "A", 0.018798828125, [1513, 1514]], [475, ".", 0.064453125, [1514, 1515]], [476, "begin", 0.0341796875, [1515, 1520]], [477, "(),", 0.0198974609375, [1520, 1523]], [478, "sum", 0.036865234375, [1523, 1526]], [479, "A", 0.0174560546875, [1526, 1527]], [480, ".", 0.052001953125, [1527, 1528]], [481, "end", 0.0179443359375, [1528, 1531]], [482, "());", 0.052978515625, [1531, 1535]], [487, "//", 0.16015625, [1553, 1556]], [488, "Step", 0.1259765625, [1556, 1560]], [490, "3", 0.11865234375, [1561, 1562]], [491, ":", 0.0947265625, [1562, 1563]], [492, "Find", 0.0576171875, [1563, 1568]], [493, "combinations", 0.1298828125, [1568, 1581]], [494, "from", 0.05517578125, [1581, 1586]], [495, "sum", 0.024169921875, [1586, 1590]], [496, "A", 0.02978515625, [1590, 1591]], [497, "&", 0.06298828125, [1591, 1593]], [498, "sum", 0.0181884765625, [1593, 1597]], [499, "B", 0.03173828125, [1597, 1598]], [500, "such", 0.062255859375, [1598, 1603]], [501, "that", 0.0576171875, [1603, 1608]], [502, "abs", 0.0478515625, [1608, 1612]], [503, "(", 0.0498046875, [1612, 1613]], [504, "sum", 0.0145263671875, [1613, 1616]], [505, "-", 0.02685546875, [1616, 1617]], [506, "go", 0.03857421875, [1617, 1619]], [507, "al", 0.0211181640625, [1619, 1621]], [508, ")", 0.05712890625, [1621, 1622]], [509, "is", 0.02783203125, [1622, 1625]], [510, "minim", 0.04248046875, [1625, 1631]], [511, "ized", 0.08642578125, [1631, 1635]], [516, "int", 0.0810546875, [1652, 1656]], [517, "an", 0.08740234375, [1656, 1659]], [518, "s", 0.138671875, [1659, 1660]], [519, "=", 0.0869140625, [1660, 1661]], [520, "INT", 0.1533203125, [1661, 1664]], [521, "_", 0.08251953125, [1664, 1665]], [522, "MAX", 0.11181640625, [1665, 1668]], [523, ";", 0.095703125, [1668, 1669]], [528, "for", 0.078125, [1686, 1690]], [529, "(", 0.064453125, [1690, 1691]], [530, "int", 0.0274658203125, [1691, 1694]], [531, "i", 0.021728515625, [1694, 1696]], [532, "=", 0.0260009765625, [1696, 1697]], [533, "0", 0.0198974609375, [1697, 1698]], [534, ";", 0.025634765625, [1698, 1699]], [535, "i", 0.0198974609375, [1699, 1700]], [536, "<", 0.0164794921875, [1700, 1701]], [537, "sum", 0.0181884765625, [1701, 1704]], [538, "A", 0.0213623046875, [1704, 1705]], [539, ".", 0.060791015625, [1705, 1706]], [540, "size", 0.026611328125, [1706, 1710]], [541, "();", 0.028564453125, [1710, 1713]], [542, "i", 0.0196533203125, [1713, 1714]], [543, "++", 0.034423828125, [1714, 1716]], [544, "){", 0.0458984375, [1716, 1718]], [547, "int", 0.032470703125, [1730, 1734]], [548, "s", 0.022705078125, [1734, 1736]], [549, "=", 0.0322265625, [1736, 1737]], [550, "sum", 0.01177978515625, [1737, 1740]], [551, "A", 0.01275634765625, [1740, 1741]], [552, "[", 0.0174560546875, [1741, 1742]], [553, "i", 0.0150146484375, [1742, 1743]], [554, "];", 0.028076171875, [1743, 1745]], [557, "int", 0.02587890625, [1757, 1761]], [558, "l", 0.0308837890625, [1761, 1763]], [559, "=", 0.0302734375, [1763, 1764]], [560, "0", 0.0205078125, [1764, 1765]], [561, ";", 0.0230712890625, [1765, 1766]], [564, "int", 0.0263671875, [1778, 1782]], [565, "r", 0.045166015625, [1782, 1784]], [566, "=", 0.024169921875, [1784, 1785]], [567, "sum", 0.0150146484375, [1785, 1788]], [568, "B", 0.017333984375, [1788, 1789]], [569, ".", 0.056884765625, [1789, 1790]], [570, "size", 0.0225830078125, [1790, 1794]], [571, "()-", 0.0262451171875, [1794, 1797]], [572, "1", 0.03271484375, [1797, 1798]], [573, ";", 0.02685546875, [1798, 1799]], [576, "while", 0.06298828125, [1811, 1817]], [577, "(", 0.043701171875, [1817, 1818]], [578, "l", 0.01611328125, [1818, 1819]], [579, "<", 0.016845703125, [1819, 1820]], [580, "=", 0.02685546875, [1820, 1821]], [581, "r", 0.019775390625, [1821, 1822]], [582, "){", 0.044189453125, [1822, 1824]], [585, "int", 0.02490234375, [1840, 1844]], [586, "mid", 0.034912109375, [1844, 1848]], [587, "=", 0.0264892578125, [1848, 1849]], [588, "l", 0.01312255859375, [1849, 1850]], [589, "+", 0.016357421875, [1850, 1851]], [590, "(", 0.03857421875, [1851, 1852]], [591, "r", 0.01123046875, [1852, 1853]], [592, "-", 0.021484375, [1853, 1854]], [593, "l", 0.01470947265625, [1854, 1855]], [594, ")/", 0.049072265625, [1855, 1857]], [595, "2", 0.10595703125, [1857, 1858]], [596, ";", 0.0289306640625, [1858, 1859]], [599, "int", 0.029052734375, [1875, 1879]], [600, "sum", 0.0194091796875, [1879, 1883]], [601, "=", 0.0302734375, [1883, 1884]], [602, "s", 0.018310546875, [1884, 1885]], [603, "+", 0.01708984375, [1885, 1886]], [604, "sum", 0.01141357421875, [1886, 1889]], [605, "B", 0.01080322265625, [1889, 1890]], [606, "[", 0.015869140625, [1890, 1891]], [607, "mid", 0.01397705078125, [1891, 1894]], [608, "];", 0.026123046875, [1894, 1896]], [611, "if", 0.0361328125, [1912, 1915]], [612, "(", 0.04345703125, [1915, 1916]], [613, "sum", 0.0185546875, [1916, 1919]], [614, "==", 0.029052734375, [1919, 1921]], [615, "go", 0.044189453125, [1921, 1923]], [616, "al", 0.0419921875, [1923, 1925]], [617, ")", 0.07763671875, [1925, 1926]], [620, "return", 0.28125, [1946, 1953]], [622, "0", 0.255859375, [1954, 1955]], [623, ";", 0.064453125, [1955, 1956]], [626, "an", 0.056884765625, [1972, 1975]], [627, "s", 0.05712890625, [1975, 1976]], [628, "=", 0.0478515625, [1976, 1977]], [629, "min", 0.0634765625, [1977, 1980]], [630, "(", 0.057373046875, [1980, 1981]], [631, "ans", 0.03173828125, [1981, 1984]], [632, ",", 0.043212890625, [1984, 1985]], [633, "abs", 0.043701171875, [1985, 1988]], [634, "(", 0.0400390625, [1988, 1989]], [635, "sum", 0.012451171875, [1989, 1992]], [636, "-", 0.02490234375, [1992, 1993]], [637, "go", 0.11083984375, [1993, 1995]], [638, "al", 0.0172119140625, [1995, 1997]], [639, "));", 0.06298828125, [1997, 2000]], [642, "if", 0.03515625, [2016, 2019]], [643, "(", 0.0498046875, [2019, 2020]], [644, "sum", 0.0238037109375, [2020, 2023]], [645, ">", 0.037841796875, [2023, 2024]], [646, "go", 0.027587890625, [2024, 2026]], [647, "al", 0.0260009765625, [2026, 2028]], [648, "){", 0.058837890625, [2028, 2030]], [651, "r", 0.01953125, [2050, 2052]], [652, "=", 0.0264892578125, [2052, 2053]], [653, "mid", 0.0164794921875, [2053, 2056]], [654, "-", 0.02197265625, [2056, 2057]], [655, "1", 0.03076171875, [2057, 2058]], [656, ";", 0.0191650390625, [2058, 2059]], [659, "}", 0.040771484375, [2075, 2077]], [662, "else", 0.03369140625, [2093, 2098]], [663, "{", 0.03173828125, [2098, 2099]], [666, "l", 0.013916015625, [2119, 2121]], [667, "=", 0.02001953125, [2121, 2122]], [668, "mid", 0.010986328125, [2122, 2125]], [669, "+", 0.01300048828125, [2125, 2126]], [670, "1", 0.02880859375, [2126, 2127]], [671, ";", 0.025634765625, [2127, 2128]], [674, "}", 0.07470703125, [2144, 2146]], [678, "}", 0.083984375, [2162, 2164]], [681, "}", 0.140625, [2172, 2174]], [686, "return", 0.279296875, [2191, 2198]], [687, "an", 2.171875, [2198, 2201]], [688, "s", 0.1455078125, [2201, 2202]], [689, ";", 0.453125, [2202, 2203]], [692, "}", 0.84765625, [2207, 2209]], [694, "};", 3.71875, [2210, 2212]]]}, "clean_tokens": ["<\uff5cbegin\u2581of\u2581sentence\uff5c>", "You", "are", "an", "exception", "ally", "intelligent", "coding", "assistant", "that", "consistently", "delivers", "accurate", "and", "reliable", "responses", "to", "user", "instructions", ".", "", "", "", "@", "@", "Inst", "ruction", "", "", "You", "are", "a", "program", "rep", "aire", "r", ".", "Please", "repair", "the", "following", "bug", "gy", "program", ".", "You", "are", "given", "an", "integer", "array", "num", "s", "and", "an", "integer", "goal", ".", "", "You", "want", "to", "choose", "a", "subsequ", "ence", "of", "num", "s", "such", "that", "the", "sum", "of", "its", "elements", "is", "the", "closest", "possible", "to", "goal", ".", "That", "is", ",", "if", "the", "sum", "of", "the", "subsequ", "ence", "'", "s", "elements", "is", "sum", ",", "then", "you", "want", "to", "minimize", "the", "absolute", "difference", "abs", "(", "sum", "-", "goal", ").", "", "Return", "the", "minimum", "possible", "value", "of", "abs", "(", "sum", "-", "goal", ").", "", "Note", "that", "a", "subsequ", "ence", "of", "an", "array", "is", "an", "array", "formed", "by", "removing", "some", "elements", "(", "poss", "ibly", "all", "or", "none", ")", "of", "the", "original", "array", ".", "B", "ug", "gy", "code", ":", "class", "S", "olution", "{", "", "public", ":", "", "", "void", "find", "(", "vector", "<", "int", ">", "&", "v", ",", "int", "i", ",", "int", "e", ",", "int", "sum", ",", "vector", "<", "int", ">", "&", "sum", "v", "){", "", "", "if", "(", "i", "==", "e", "){", "", "", "sum", "v", ".", "push", "_", "back", "(", "sum", ");", "", "", "return", ";", "", "", "}", "", "", "find", "(", "v", ",", "i", "+", "1", ",", "e", ",", "sum", "+", "v", "[", "i", "],", "sum", "v", ");", "", "", "find", "(", "v", ",", "i", "+", "1", ",", "e", ",", "sum", ",", "sum", "v", ");", "", "", "}", "", "", "", "", "", "", "int", "min", "Abs", "Diff", "erence", "(", "vector", "<", "int", ">", "&", "num", "s", ",", "int", "goal", ")", "{", "", "", "int", "n", "=", "num", "s", ".", "size", "();", "", "", "", "", "//", "Step", "", "1", ":", "Div", "ide", "num", "s", "into", "", "2", "sub", "arr", "ays", "of", "size", "n", "/", "2", "and", "n", "-", "n", "/", "2", "", "", "", "", "vector", "<", "int", ">", "A", ",", "B", ";", "", "", "for", "(", "int", "i", "=", "0", ";", "i", "<", "n", "/", "2", ";", "i", "++", ")", "", "", "A", ".", "push", "_", "back", "(", "num", "s", "[", "i", "]);", "", "", "for", "(", "int", "i", "=", "n", "/", "2", ";", "i", "<", "n", ";", "i", "++", ")", "", "", "B", ".", "push", "_", "back", "(", "num", "s", "[", "i", "]);", "", "", "", "", "//", "Step", "", "2", ":", "Find", "all", "possible", "subset", "sums", "of", "A", "and", "B", "", "", "", "", "vector", "<", "int", ">", "sum", "A", ",", "sum", "B", ";", "", "", "find", "(", "A", ",", "0", ",", "A", ".", "size", "(),", "0", ",", "sum", "A", ");", "", "", "find", "(", "B", ",", "0", ",", "B", ".", "size", "(),", "0", ",", "sum", "B", ");", "", "", "", "", "sort", "(", "sum", "A", ".", "begin", "(),", "sum", "A", ".", "end", "());", "", "", "", "", "//", "Step", "", "3", ":", "Find", "combinations", "from", "sum", "A", "&", "sum", "B", "such", "that", "abs", "(", "sum", "-", "go", "al", ")", "is", "minim", "ized", "", "", "", "", "int", "an", "s", "=", "INT", "_", "MAX", ";", "", "", "", "", "for", "(", "int", "i", "=", "0", ";", "i", "<", "sum", "A", ".", "size", "();", "i", "++", "){", "", "", "int", "s", "=", "sum", "A", "[", "i", "];", "", "", "int", "l", "=", "0", ";", "", "", "int", "r", "=", "sum", "B", ".", "size", "()-", "1", ";", "", "", "while", "(", "l", "<", "=", "r", "){", "", "", "int", "mid", "=", "l", "+", "(", "r", "-", "l", ")/", "2", ";", "", "", "int", "sum", "=", "s", "+", "sum", "B", "[", "mid", "];", "", "", "if", "(", "sum", "==", "go", "al", ")", "", "", "return", "", "0", ";", "", "", "an", "s", "=", "min", "(", "ans", ",", "abs", "(", "sum", "-", "go", "al", "));", "", "", "if", "(", "sum", ">", "go", "al", "){", "", "", "r", "=", "mid", "-", "1", ";", "", "", "}", "", "", "else", "{", "", "", "l", "=", "mid", "+", "1", ";", "", "", "}", "", "", "", "}", "", "", "}", "", "", "", "", "return", "an", "s", ";", "", "", "}", "", "};", "$", "Test", "case", "(", "Input", "with", "expected", "output", ")", ":", "Input", ":", "num", "s", "=", "[", "5", ",-", "7", ",", "3", ",", "5", "],", "goal", "=", "6", "", "Output", ":", "", "0", "", "F", "ault", "reasoning", ":", "sum", "B", "(", "variable", ")", "in", "min", "Abs", "Diff", "erence", "(", "function", ")", "is", "wrong", ".", "", "", "", "@", "@", "Response", "", "", "You", "should", "pay", "attention", "to", "all", "previous", "inf", "om", "ation", "when", "generating", "next", "token", ".", "", ""], "fix": "You are an exceptionally intelligent coding assistant that consistently delivers accurate and reliable responses to user instructions.\n\n        @@ Instruction\n        You are a program repairer. Please repair the following buggy program. You are given an integer array nums and an integer goal.\nYou want to choose a subsequence of nums such that the sum of its elements is the closest possible to goal. That is, if the sum of the subsequence's elements is sum, then you want to minimize the absolute difference abs(sum - goal).\nReturn the minimum possible value of abs(sum - goal).\nNote that a subsequence of an array is an array formed by removing some elements (possibly all or none) of the original array.Buggy code : class Solution {\npublic:\n    void find(vector<int>&v, int i, int e, int sum, vector<int>&sumv){\n        if(i==e){\n            sumv.push_back(sum);\n            return;\n        }\n        find(v,i+1,e,sum+v[i],sumv);\n        find(v,i+1,e,sum,sumv);\n    }\n        \n    \n    int minAbsDifference(vector<int>& nums, int goal) {\n        int n=nums.size();\n        \n        //Step 1: Divide nums into 2 subarrays of size n/2 and n-n/2\n        \n        vector<int>A,B;\n        for(int i=0;i<n/2;i++)\n            A.push_back(nums[i]);\n        for(int i=n/2;i<n;i++)\n            B.push_back(nums[i]);\n        \n        //Step 2: Find all possible subset sums of A and B\n        \n        vector<int>sumA,sumB;\n        find(A,0,A.size(),0,sumA);\n        find(B,0,B.size(),0,sumB);\n        \n        sort(sumA.begin(),sumA.end());\n         \n        //Step 3: Find combinations from sumA & sumB such that abs(sum-goal) is minimized\n        \n        int ans=INT_MAX;\n        \n        for(int i=0;i<sumA.size();i++){\n            int s=sumA[i];\n            int l=0;\n            int r=sumB.size()-1;\n            while(l<=r){\n                int mid=l+(r-l)/2;\n                int sum=s+sumB[mid];\n                if(sum==goal)\n                    return 0;\n                ans=min(ans,abs(sum-goal));\n                if(sum>goal){\n                    r=mid-1;\n                }\n                else{\n                    l=mid+1;\n                }    \n            }\n        }\n        \n        return ans;\n    }\n};$Testcase(Input with expected output) : Input: nums = [5,-7,3,5], goal = 6\nOutput: 0\nFault reasoning: sumB(variable) in minAbsDifference(function) is wrong.\n\n        @@ Response\n        You should pay attention to all previous infomation when generating next token.\n        Repair : \n```cpp\nvoid find(vector<int>&v, int i, int e, int sum, vector<int>&sumv){\n    if(i==e){\n        sumv.push_back(sum);\n        return;\n    }\n    find(v,i+1,e,sum+v[i],sumv);\n    find(v,i+1,e,sum,sumv);\n}\n    \nint minAbsDifference(vector<int>& nums, int goal) {\n    int n=nums.size();\n    vector<int>A,B;\n    //Step 1: Divide nums into 2 subarrays of size n/2 and n-n/2\n    \n    for(int i=0; i<n/2; i++) A.push_back(nums[i]);\n    for(int i=n/2; i<n; i++) B.push_back(nums[i]);\n    \n    //Step 2: Find all possible subset sums of A and B\n    \n    vector<int>sumA,sumB;\n    find(A,0,A.size(),0,sumA);\n    find(B,0,B.size(),0,sumB);\n    \n    sort(sumA.begin(),sumA.end());\n    sort(sumB.begin(),sumB.end());\n    //Step 3: Find combinations from sumA & sumB such that abs(sum-goal) is minimized\n\n    int ans=INT_MAX;\n    int i=0;\n    int j=sumB.size()-1;\n    while(i<sumA.size() && j>=0){\n        int sum=sumA[i]+sumB[j];\n        ans=min(ans,abs(sum-goal));\n\n        if(sum<goal) i++;\n        else if(sum>goal) j--;\n        else return 0;\n    }\n    \n    return ans;\n}\n``` \nThe error was that we were not sorting sumB after generating its all possible subsets, so it's impossible to binary search from both ends to find the closest sum to the goal. \n\nWe need to first sort sumB in ascending order, and then perform binary search to find the sum closest to the goal in sumB. If the sum equals to the goal, we simply return 0. Otherwise, we continue to find the minimum in every loop iteration."}