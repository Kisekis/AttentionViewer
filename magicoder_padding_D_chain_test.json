{"data": null, "prompt": "You are an exceptionally intelligent coding assistant that consistently delivers accurate and reliable responses to user instructions.\n\n    @@ Instruction\n    You are a program repairer. Please repair the following buggy program. You are given an integer array nums and an integer goal.\nYou want to choose a subsequence of nums such that the sum of its elements is the closest possible to goal. That is, if the sum of the subsequence's elements is sum, then you want to minimize the absolute difference abs(sum - goal).\nReturn the minimum possible value of abs(sum - goal).\nNote that a subsequence of an array is an array formed by removing some elements (possibly all or none) of the original array.Buggy code : class Solution {\npublic:\n    void find(vector<int>&v, int i, int e, int sum, vector<int>&sumv){\n        if(i==e){\n            sumv.push_back(sum);\n            return;\n        }\n        find(v,i+1,e,sum+v[i],sumv);\n        find(v,i+1,e,sum,sumv);\n    }\n        \n    \n    int minAbsDifference(vector<int>& nums, int goal) {\n        int n=nums.size();\n        \n        //Step 1: Divide nums into 2 subarrays of size n/2 and n-n/2\n        \n        vector<int>A,B;\n        for(int i=0;i<n/2;i++)\n            A.push_back(nums[i]);\n        for(int i=n/2;i<n;i++)\n            B.push_back(nums[i]);\n        \n        //Step 2: Find all possible subset sums of A and B\n        \n        vector<int>sumA,sumB;\n        find(A,0,A.size(),0,sumA);\n        find(B,0,B.size(),0,sumB);\n        \n        sort(sumA.begin(),sumA.end());\n         \n        //Step 3: Find combinations from sumA & sumB such that abs(sum-goal) is minimized\n        \n        int ans=INT_MAX;\n        \n        for(int i=0;i<sumA.size();i++){\n            int s=sumA[i];\n            int l=0;\n            int r=sumB.size()-1;\n            while(l<=r){\n                int mid=l+(r-l)/2;\n                int sum=s+sumB[mid];\n                if(sum==goal)\n                    return 0;\n                ans=min(ans,abs(sum-goal));\n                if(sum>goal){\n                    r=mid-1;\n                }\n                else{\n                    l=mid+1;\n                }    \n            }\n        }\n        \n        return ans;\n    }\n};$Testcase(Input with expected output) : Input: nums = [5,-7,3,5], goal = 6\nOutput: 0\nFault reasoning: sumB(variable) in minAbsDifference(function) is wrong, which causes sum(variable) in minAbsDifference(function) is wrong, which causes ans(variable) in minAbsDifference(function) is wrong, which causes return of minAbsDifference(function) is wrong.\n\n    @@ Response\n    ", "res": {"reading_first": [[9, "You", 0.0084228515625, [0, 3]], [10, "are", 0.009765625, [3, 7]], [11, "an", 0.01177978515625, [7, 10]], [12, "exception", 0.01177978515625, [10, 20]], [13, "ally", 0.0108642578125, [20, 24]], [14, "intelligent", 0.01025390625, [24, 36]], [15, "coding", 0.0216064453125, [36, 43]], [16, "assistant", 0.00836181640625, [43, 53]], [17, "that", 0.01409912109375, [53, 58]], [18, "consistently", 0.01422119140625, [58, 71]], [19, "delivers", 0.0107421875, [71, 80]], [20, "accurate", 0.01434326171875, [80, 89]], [21, "and", 0.01806640625, [89, 93]], [22, "reliable", 0.01007080078125, [93, 102]], [23, "responses", 0.01129150390625, [102, 112]], [24, "to", 0.0164794921875, [112, 115]], [25, "user", 0.00811767578125, [115, 120]], [26, "instructions", 0.01129150390625, [120, 133]], [27, ".", 0.080078125, [133, 134]], [31, "@", 0.007568359375, [139, 141]], [32, "@", 0.0093994140625, [141, 142]], [33, "Inst", 0.00775146484375, [142, 147]], [34, "ruction", 0.0076904296875, [147, 154]], [37, "You", 0.00701904296875, [158, 162]], [38, "are", 0.01031494140625, [162, 166]], [39, "a", 0.0230712890625, [166, 168]], [40, "program", 0.011474609375, [168, 176]], [41, "rep", 0.010009765625, [176, 180]], [42, "aire", 0.00823974609375, [180, 184]], [43, "r", 0.007171630859375, [184, 185]], [44, ".", 0.07861328125, [185, 186]], [45, "Please", 0.015869140625, [186, 193]], [46, "repair", 0.01373291015625, [193, 200]], [47, "the", 0.017578125, [200, 204]], [48, "following", 0.016357421875, [204, 214]], [49, "bug", 0.01397705078125, [214, 218]], [50, "gy", 0.00823974609375, [218, 220]], [51, "program", 0.0118408203125, [220, 228]], [52, ".", 0.0791015625, [228, 229]], [53, "You", 0.006988525390625, [229, 233]], [54, "are", 0.0106201171875, [233, 237]], [55, "given", 0.01708984375, [237, 243]], [56, "an", 0.01287841796875, [243, 246]], [57, "integer", 0.0128173828125, [246, 254]], [58, "array", 0.014892578125, [254, 260]], [59, "num", 0.01214599609375, [260, 264]], [60, "s", 0.01165771484375, [264, 265]], [61, "and", 0.01904296875, [265, 269]], [62, "an", 0.01300048828125, [269, 272]], [63, "integer", 0.0126953125, [272, 280]], [64, "goal", 0.01226806640625, [280, 285]], [65, ".", 0.076171875, [285, 286]], [67, "You", 0.0089111328125, [287, 290]], [68, "want", 0.01177978515625, [290, 295]], [69, "to", 0.0164794921875, [295, 298]], [70, "choose", 0.01214599609375, [298, 305]], [71, "a", 0.022216796875, [305, 307]], [72, "subsequ", 0.01324462890625, [307, 315]], [73, "ence", 0.01043701171875, [315, 319]], [74, "of", 0.018798828125, [319, 322]], [75, "num", 0.01239013671875, [322, 326]], [76, "s", 0.0113525390625, [326, 327]], [77, "such", 0.01080322265625, [327, 332]], [78, "that", 0.0152587890625, [332, 337]], [79, "the", 0.016845703125, [337, 341]], [80, "sum", 0.01104736328125, [341, 345]], [81, "of", 0.01953125, [345, 348]], [82, "its", 0.0089111328125, [348, 352]], [83, "elements", 0.013671875, [352, 361]], [84, "is", 0.0120849609375, [361, 364]], [85, "the", 0.01708984375, [364, 368]], [86, "closest", 0.01300048828125, [368, 376]], [87, "possible", 0.0115966796875, [376, 385]], [88, "to", 0.017333984375, [385, 388]], [89, "goal", 0.01220703125, [388, 393]], [90, ".", 0.076171875, [393, 394]], [91, "That", 0.01092529296875, [394, 399]], [92, "is", 0.01190185546875, [399, 402]], [93, ",", 0.02490234375, [402, 403]], [94, "if", 0.0184326171875, [403, 406]], [95, "the", 0.0179443359375, [406, 410]], [96, "sum", 0.0098876953125, [410, 414]], [97, "of", 0.0185546875, [414, 417]], [98, "the", 0.01806640625, [417, 421]], [99, "subsequ", 0.0135498046875, [421, 429]], [100, "ence", 0.01031494140625, [429, 433]], [101, "'", 0.01141357421875, [433, 434]], [102, "s", 0.01226806640625, [434, 435]], [103, "elements", 0.0120849609375, [435, 444]], [104, "is", 0.01226806640625, [444, 447]], [105, "sum", 0.00982666015625, [447, 451]], [106, ",", 0.0255126953125, [451, 452]], [107, "then", 0.015380859375, [452, 457]], [108, "you", 0.00762939453125, [457, 461]], [109, "want", 0.0123291015625, [461, 466]], [110, "to", 0.0177001953125, [466, 469]], [111, "minimize", 0.0162353515625, [469, 478]], [112, "the", 0.01806640625, [478, 482]], [113, "absolute", 0.016357421875, [482, 491]], [114, "difference", 0.012451171875, [491, 502]], [115, "abs", 0.01220703125, [502, 506]], [116, "(", 0.042236328125, [506, 507]], [117, "sum", 0.01116943359375, [507, 510]], [118, "-", 0.00946044921875, [510, 512]], [119, "goal", 0.012451171875, [512, 517]], [120, ").", 0.0159912109375, [517, 519]], [122, "Return", 0.01141357421875, [520, 526]], [123, "the", 0.017578125, [526, 530]], [124, "minimum", 0.01068115234375, [530, 538]], [125, "possible", 0.010986328125, [538, 547]], [126, "value", 0.01397705078125, [547, 553]], [127, "of", 0.0186767578125, [553, 556]], [128, "abs", 0.01226806640625, [556, 560]], [129, "(", 0.0419921875, [560, 561]], [130, "sum", 0.01141357421875, [561, 564]], [131, "-", 0.0096435546875, [564, 566]], [132, "goal", 0.01263427734375, [566, 571]], [133, ").", 0.0164794921875, [571, 573]], [135, "Note", 0.010009765625, [574, 578]], [136, "that", 0.0150146484375, [578, 583]], [137, "a", 0.0230712890625, [583, 585]], [138, "subsequ", 0.01513671875, [585, 593]], [139, "ence", 0.00994873046875, [593, 597]], [140, "of", 0.0184326171875, [597, 600]], [141, "an", 0.0125732421875, [600, 603]], [142, "array", 0.01397705078125, [603, 609]], [143, "is", 0.0123291015625, [609, 612]], [144, "an", 0.01263427734375, [612, 615]], [145, "array", 0.0140380859375, [615, 621]], [146, "formed", 0.0184326171875, [621, 628]], [147, "by", 0.0135498046875, [628, 631]], [148, "removing", 0.00860595703125, [631, 640]], [149, "some", 0.01129150390625, [640, 645]], [150, "elements", 0.0123291015625, [645, 654]], [151, "(", 0.0220947265625, [654, 656]], [152, "poss", 0.01104736328125, [656, 660]], [153, "ibly", 0.01300048828125, [660, 664]], [154, "all", 0.01080322265625, [664, 668]], [155, "or", 0.01385498046875, [668, 671]], [156, "none", 0.014404296875, [671, 676]], [157, ")", 0.06396484375, [676, 677]], [158, "of", 0.01953125, [677, 680]], [159, "the", 0.0185546875, [680, 684]], [160, "original", 0.01202392578125, [684, 693]], [161, "array", 0.01470947265625, [693, 699]], [162, ".", 0.0810546875, [699, 700]], [163, "B", 0.00518798828125, [700, 701]], [164, "ug", 0.0086669921875, [701, 703]], [165, "gy", 0.00848388671875, [703, 705]], [166, "code", 0.01458740234375, [705, 710]], [167, ":", 0.008056640625, [710, 712]], [168, "class", 0.01458740234375, [712, 718]], [169, "S", 0.00872802734375, [718, 720]], [170, "olution", 0.01519775390625, [720, 727]], [171, "{", 0.033447265625, [727, 729]], [173, "public", 0.010986328125, [730, 736]], [174, ":", 0.0208740234375, [736, 737]], [177, "void", 0.0126953125, [741, 746]], [178, "find", 0.01422119140625, [746, 751]], [179, "(", 0.045654296875, [751, 752]], [180, "vector", 0.01416015625, [752, 758]], [181, "<", 0.00933837890625, [758, 759]], [182, "int", 0.01324462890625, [759, 762]], [183, ">", 0.01324462890625, [762, 763]], [184, "&", 0.003662109375, [763, 764]], [185, "v", 0.006500244140625, [764, 765]], [186, ",", 0.0272216796875, [765, 766]], [187, "int", 0.01251220703125, [766, 770]], [188, "i", 0.0081787109375, [770, 772]], [189, ",", 0.0269775390625, [772, 773]], [190, "int", 0.0123291015625, [773, 777]], [191, "e", 0.00689697265625, [777, 779]], [192, ",", 0.026611328125, [779, 780]], [193, "int", 0.01220703125, [780, 784]], [194, "sum", 0.0106201171875, [784, 788]], [195, ",", 0.0260009765625, [788, 789]], [196, "vector", 0.01055908203125, [789, 796]], [197, "<", 0.00860595703125, [796, 797]], [198, "int", 0.0126953125, [797, 800]], [199, ">", 0.0120849609375, [800, 801]], [200, "&", 0.0034027099609375, [801, 802]], [201, "sum", 0.01190185546875, [802, 805]], [202, "v", 0.00604248046875, [805, 806]], [203, "){", 0.0185546875, [806, 808]], [206, "if", 0.0196533203125, [816, 819]], [207, "(", 0.0439453125, [819, 820]], [208, "i", 0.0101318359375, [820, 821]], [209, "==", 0.013427734375, [821, 823]], [210, "e", 0.00830078125, [823, 824]], [211, "){", 0.018798828125, [824, 826]], [214, "sum", 0.00994873046875, [838, 842]], [215, "v", 0.005828857421875, [842, 843]], [216, ".", 0.08203125, [843, 844]], [217, "push", 0.01177978515625, [844, 848]], [218, "_", 0.02197265625, [848, 849]], [219, "back", 0.0103759765625, [849, 853]], [220, "(", 0.045654296875, [853, 854]], [221, "sum", 0.01092529296875, [854, 857]], [222, ");", 0.021484375, [857, 859]], [225, "return", 0.0211181640625, [871, 878]], [226, ";", 0.0184326171875, [878, 879]], [229, "}", 0.02685546875, [887, 889]], [232, "find", 0.01416015625, [897, 902]], [233, "(", 0.046142578125, [902, 903]], [234, "v", 0.00604248046875, [903, 904]], [235, ",", 0.0263671875, [904, 905]], [236, "i", 0.00994873046875, [905, 906]], [237, "+", 0.011962890625, [906, 907]], [238, "1", 0.0306396484375, [907, 908]], [239, ",", 0.0262451171875, [908, 909]], [240, "e", 0.0084228515625, [909, 910]], [241, ",", 0.0262451171875, [910, 911]], [242, "sum", 0.01202392578125, [911, 914]], [243, "+", 0.01171875, [914, 915]], [244, "v", 0.00604248046875, [915, 916]], [245, "[", 0.0128173828125, [916, 917]], [246, "i", 0.00970458984375, [917, 918]], [247, "],", 0.0106201171875, [918, 920]], [248, "sum", 0.0118408203125, [920, 923]], [249, "v", 0.005950927734375, [923, 924]], [250, ");", 0.0224609375, [924, 926]], [253, "find", 0.0145263671875, [934, 939]], [254, "(", 0.04541015625, [939, 940]], [255, "v", 0.006072998046875, [940, 941]], [256, ",", 0.0264892578125, [941, 942]], [257, "i", 0.0098876953125, [942, 943]], [258, "+", 0.01141357421875, [943, 944]], [259, "1", 0.031005859375, [944, 945]], [260, ",", 0.0262451171875, [945, 946]], [261, "e", 0.00836181640625, [946, 947]], [262, ",", 0.026123046875, [947, 948]], [263, "sum", 0.012451171875, [948, 951]], [264, ",", 0.026123046875, [951, 952]], [265, "sum", 0.01251220703125, [952, 955]], [266, "v", 0.006378173828125, [955, 956]], [267, ");", 0.0230712890625, [956, 958]], [270, "}", 0.0264892578125, [962, 964]], [277, "int", 0.01397705078125, [982, 986]], [278, "min", 0.0111083984375, [986, 990]], [279, "Abs", 0.00970458984375, [990, 993]], [280, "Diff", 0.00836181640625, [993, 997]], [281, "erence", 0.01092529296875, [997, 1003]], [282, "(", 0.048095703125, [1003, 1004]], [283, "vector", 0.01544189453125, [1004, 1010]], [284, "<", 0.009521484375, [1010, 1011]], [285, "int", 0.01409912109375, [1011, 1014]], [286, ">", 0.01373291015625, [1014, 1015]], [287, "&", 0.0037994384765625, [1015, 1016]], [288, "num", 0.01324462890625, [1016, 1020]], [289, "s", 0.012451171875, [1020, 1021]], [290, ",", 0.0274658203125, [1021, 1022]], [291, "int", 0.01385498046875, [1022, 1026]], [292, "goal", 0.01361083984375, [1026, 1031]], [293, ")", 0.06396484375, [1031, 1032]], [294, "{", 0.03564453125, [1032, 1034]], [297, "int", 0.013916015625, [1042, 1046]], [298, "n", 0.01165771484375, [1046, 1048]], [299, "=", 0.02294921875, [1048, 1049]], [300, "num", 0.010986328125, [1049, 1052]], [301, "s", 0.01251220703125, [1052, 1053]], [302, ".", 0.08544921875, [1053, 1054]], [303, "size", 0.0157470703125, [1054, 1058]], [304, "();", 0.0177001953125, [1058, 1061]], [309, "//", 0.0123291015625, [1078, 1081]], [310, "Step", 0.0111083984375, [1081, 1085]], [312, "1", 0.032470703125, [1086, 1087]], [313, ":", 0.02197265625, [1087, 1088]], [314, "Div", 0.00799560546875, [1088, 1092]], [315, "ide", 0.011962890625, [1092, 1095]], [316, "num", 0.0115966796875, [1095, 1099]], [317, "s", 0.012451171875, [1099, 1100]], [318, "into", 0.0162353515625, [1100, 1105]], [320, "2", 0.037109375, [1106, 1107]], [321, "sub", 0.00921630859375, [1107, 1111]], [322, "arr", 0.01043701171875, [1111, 1114]], [323, "ays", 0.01007080078125, [1114, 1117]], [324, "of", 0.02099609375, [1117, 1120]], [325, "size", 0.01287841796875, [1120, 1125]], [326, "n", 0.0113525390625, [1125, 1127]], [327, "/", 0.0162353515625, [1127, 1128]], [328, "2", 0.037841796875, [1128, 1129]], [329, "and", 0.021484375, [1129, 1133]], [330, "n", 0.01190185546875, [1133, 1135]], [331, "-", 0.0322265625, [1135, 1136]], [332, "n", 0.0084228515625, [1136, 1137]], [333, "/", 0.0162353515625, [1137, 1138]], [334, "2", 0.038818359375, [1138, 1139]], [339, "vector", 0.0118408203125, [1156, 1163]], [340, "<", 0.009765625, [1163, 1164]], [341, "int", 0.01422119140625, [1164, 1167]], [342, ">", 0.01422119140625, [1167, 1168]], [343, "A", 0.00897216796875, [1168, 1169]], [344, ",", 0.0286865234375, [1169, 1170]], [345, "B", 0.00555419921875, [1170, 1171]], [346, ";", 0.0191650390625, [1171, 1172]], [349, "for", 0.0164794921875, [1180, 1184]], [350, "(", 0.04833984375, [1184, 1185]], [351, "int", 0.013671875, [1185, 1188]], [352, "i", 0.00848388671875, [1188, 1190]], [353, "=", 0.024658203125, [1190, 1191]], [354, "0", 0.01123046875, [1191, 1192]], [355, ";", 0.020263671875, [1192, 1193]], [356, "i", 0.01092529296875, [1193, 1194]], [357, "<", 0.0101318359375, [1194, 1195]], [358, "n", 0.008544921875, [1195, 1196]], [359, "/", 0.0155029296875, [1196, 1197]], [360, "2", 0.037841796875, [1197, 1198]], [361, ";", 0.0208740234375, [1198, 1199]], [362, "i", 0.01129150390625, [1199, 1200]], [363, "++", 0.0150146484375, [1200, 1202]], [364, ")", 0.06640625, [1202, 1203]], [367, "A", 0.01025390625, [1215, 1217]], [368, ".", 0.08642578125, [1217, 1218]], [369, "push", 0.01446533203125, [1218, 1222]], [370, "_", 0.025390625, [1222, 1223]], [371, "back", 0.01165771484375, [1223, 1227]], [372, "(", 0.048583984375, [1227, 1228]], [373, "num", 0.01165771484375, [1228, 1231]], [374, "s", 0.0126953125, [1231, 1232]], [375, "[", 0.01446533203125, [1232, 1233]], [376, "i", 0.01080322265625, [1233, 1234]], [377, "]);", 0.0206298828125, [1234, 1237]], [380, "for", 0.0172119140625, [1245, 1249]], [381, "(", 0.048583984375, [1249, 1250]], [382, "int", 0.0152587890625, [1250, 1253]], [383, "i", 0.00921630859375, [1253, 1255]], [384, "=", 0.02392578125, [1255, 1256]], [385, "n", 0.0086669921875, [1256, 1257]], [386, "/", 0.0145263671875, [1257, 1258]], [387, "2", 0.037109375, [1258, 1259]], [388, ";", 0.02099609375, [1259, 1260]], [389, "i", 0.01129150390625, [1260, 1261]], [390, "<", 0.01025390625, [1261, 1262]], [391, "n", 0.00836181640625, [1262, 1263]], [392, ";", 0.0205078125, [1263, 1264]], [393, "i", 0.0106201171875, [1264, 1265]], [394, "++", 0.0137939453125, [1265, 1267]], [395, ")", 0.0693359375, [1267, 1268]], [398, "B", 0.00994873046875, [1280, 1282]], [399, ".", 0.09130859375, [1282, 1283]], [400, "push", 0.013671875, [1283, 1287]], [401, "_", 0.0255126953125, [1287, 1288]], [402, "back", 0.011474609375, [1288, 1292]], [403, "(", 0.05078125, [1292, 1293]], [404, "num", 0.0108642578125, [1293, 1296]], [405, "s", 0.01300048828125, [1296, 1297]], [406, "[", 0.0142822265625, [1297, 1298]], [407, "i", 0.010498046875, [1298, 1299]], [408, "]);", 0.0198974609375, [1299, 1302]], [413, "//", 0.0133056640625, [1319, 1322]], [414, "Step", 0.0115966796875, [1322, 1326]], [416, "2", 0.03759765625, [1327, 1328]], [417, ":", 0.02392578125, [1328, 1329]], [418, "Find", 0.0174560546875, [1329, 1334]], [419, "all", 0.0126953125, [1334, 1338]], [420, "possible", 0.01397705078125, [1338, 1347]], [421, "subset", 0.0166015625, [1347, 1354]], [422, "sums", 0.0184326171875, [1354, 1359]], [423, "of", 0.022705078125, [1359, 1362]], [424, "A", 0.01043701171875, [1362, 1364]], [425, "and", 0.0218505859375, [1364, 1368]], [426, "B", 0.0107421875, [1368, 1370]], [431, "vector", 0.0133056640625, [1387, 1394]], [432, "<", 0.01080322265625, [1394, 1395]], [433, "int", 0.015380859375, [1395, 1398]], [434, ">", 0.0157470703125, [1398, 1399]], [435, "sum", 0.01416015625, [1399, 1402]], [436, "A", 0.009033203125, [1402, 1403]], [437, ",", 0.030517578125, [1403, 1404]], [438, "sum", 0.0142822265625, [1404, 1407]], [439, "B", 0.005828857421875, [1407, 1408]], [440, ";", 0.02294921875, [1408, 1409]], [443, "find", 0.017578125, [1417, 1422]], [444, "(", 0.054443359375, [1422, 1423]], [445, "A", 0.00909423828125, [1423, 1424]], [446, ",", 0.0311279296875, [1424, 1425]], [447, "0", 0.01275634765625, [1425, 1426]], [448, ",", 0.03125, [1426, 1427]], [449, "A", 0.00933837890625, [1427, 1428]], [450, ".", 0.0966796875, [1428, 1429]], [451, "size", 0.0181884765625, [1429, 1433]], [452, "(),", 0.01483154296875, [1433, 1436]], [453, "0", 0.01324462890625, [1436, 1437]], [454, ",", 0.031494140625, [1437, 1438]], [455, "sum", 0.01483154296875, [1438, 1441]], [456, "A", 0.010009765625, [1441, 1442]], [457, ");", 0.0289306640625, [1442, 1444]], [460, "find", 0.017578125, [1452, 1457]], [461, "(", 0.0546875, [1457, 1458]], [462, "B", 0.006317138671875, [1458, 1459]], [463, ",", 0.0308837890625, [1459, 1460]], [464, "0", 0.01220703125, [1460, 1461]], [465, ",", 0.0306396484375, [1461, 1462]], [466, "B", 0.005950927734375, [1462, 1463]], [467, ".", 0.09619140625, [1463, 1464]], [468, "size", 0.0162353515625, [1464, 1468]], [469, "(),", 0.01336669921875, [1468, 1471]], [470, "0", 0.011474609375, [1471, 1472]], [471, ",", 0.0301513671875, [1472, 1473]], [472, "sum", 0.01373291015625, [1473, 1476]], [473, "B", 0.00555419921875, [1476, 1477]], [474, ");", 0.02685546875, [1477, 1479]], [479, "sort", 0.0142822265625, [1496, 1501]], [480, "(", 0.055419921875, [1501, 1502]], [481, "sum", 0.0147705078125, [1502, 1505]], [482, "A", 0.0093994140625, [1505, 1506]], [483, ".", 0.10107421875, [1506, 1507]], [484, "begin", 0.025146484375, [1507, 1512]], [485, "(),", 0.01495361328125, [1512, 1515]], [486, "sum", 0.0152587890625, [1515, 1518]], [487, "A", 0.0098876953125, [1518, 1519]], [488, ".", 0.10009765625, [1519, 1520]], [489, "end", 0.0162353515625, [1520, 1523]], [490, "());", 0.020751953125, [1523, 1527]], [495, "//", 0.01434326171875, [1545, 1548]], [496, "Step", 0.0123291015625, [1548, 1552]], [498, "3", 0.024169921875, [1553, 1554]], [499, ":", 0.0262451171875, [1554, 1555]], [500, "Find", 0.018798828125, [1555, 1560]], [501, "combinations", 0.024658203125, [1560, 1573]], [502, "from", 0.020263671875, [1573, 1578]], [503, "sum", 0.01446533203125, [1578, 1582]], [504, "A", 0.00933837890625, [1582, 1583]], [505, "&", 0.004974365234375, [1583, 1585]], [506, "sum", 0.0146484375, [1585, 1589]], [507, "B", 0.006439208984375, [1589, 1590]], [508, "such", 0.0164794921875, [1590, 1595]], [509, "that", 0.0206298828125, [1595, 1600]], [510, "abs", 0.017822265625, [1600, 1604]], [511, "(", 0.05615234375, [1604, 1605]], [512, "sum", 0.0159912109375, [1605, 1608]], [513, "-", 0.0341796875, [1608, 1609]], [514, "go", 0.01446533203125, [1609, 1611]], [515, "al", 0.0120849609375, [1611, 1613]], [516, ")", 0.0703125, [1613, 1614]], [517, "is", 0.014892578125, [1614, 1617]], [518, "minim", 0.01458740234375, [1617, 1623]], [519, "ized", 0.0150146484375, [1623, 1627]], [524, "int", 0.0150146484375, [1644, 1648]], [525, "an", 0.016357421875, [1648, 1651]], [526, "s", 0.013671875, [1651, 1652]], [527, "=", 0.026611328125, [1652, 1653]], [528, "INT", 0.01116943359375, [1653, 1656]], [529, "_", 0.0283203125, [1656, 1657]], [530, "MAX", 0.01300048828125, [1657, 1660]], [531, ";", 0.023193359375, [1660, 1661]], [536, "for", 0.0196533203125, [1678, 1682]], [537, "(", 0.059814453125, [1682, 1683]], [538, "int", 0.016845703125, [1683, 1686]], [539, "i", 0.010498046875, [1686, 1688]], [540, "=", 0.0303955078125, [1688, 1689]], [541, "0", 0.01348876953125, [1689, 1690]], [542, ";", 0.0252685546875, [1690, 1691]], [543, "i", 0.0135498046875, [1691, 1692]], [544, "<", 0.01220703125, [1692, 1693]], [545, "sum", 0.016357421875, [1693, 1696]], [546, "A", 0.0111083984375, [1696, 1697]], [547, ".", 0.1083984375, [1697, 1698]], [548, "size", 0.019287109375, [1698, 1702]], [549, "();", 0.023681640625, [1702, 1705]], [550, "i", 0.0133056640625, [1705, 1706]], [551, "++", 0.0179443359375, [1706, 1708]], [552, "){", 0.029052734375, [1708, 1710]], [555, "int", 0.0185546875, [1722, 1726]], [556, "s", 0.0128173828125, [1726, 1728]], [557, "=", 0.0306396484375, [1728, 1729]], [558, "sum", 0.0167236328125, [1729, 1732]], [559, "A", 0.01171875, [1732, 1733]], [560, "[", 0.0184326171875, [1733, 1734]], [561, "i", 0.01446533203125, [1734, 1735]], [562, "];", 0.02392578125, [1735, 1737]], [565, "int", 0.01806640625, [1749, 1753]], [566, "l", 0.01153564453125, [1753, 1755]], [567, "=", 0.0294189453125, [1755, 1756]], [568, "0", 0.01324462890625, [1756, 1757]], [569, ";", 0.0252685546875, [1757, 1758]], [572, "int", 0.017333984375, [1770, 1774]], [573, "r", 0.0120849609375, [1774, 1776]], [574, "=", 0.02978515625, [1776, 1777]], [575, "sum", 0.0157470703125, [1777, 1780]], [576, "B", 0.0064697265625, [1780, 1781]], [577, ".", 0.1064453125, [1781, 1782]], [578, "size", 0.0185546875, [1782, 1786]], [579, "()-", 0.0185546875, [1786, 1789]], [580, "1", 0.036376953125, [1789, 1790]], [581, ";", 0.0262451171875, [1790, 1791]], [584, "while", 0.0296630859375, [1803, 1809]], [585, "(", 0.0634765625, [1809, 1810]], [586, "l", 0.007568359375, [1810, 1811]], [587, "<", 0.0130615234375, [1811, 1812]], [588, "=", 0.032958984375, [1812, 1813]], [589, "r", 0.01116943359375, [1813, 1814]], [590, "){", 0.0322265625, [1814, 1816]], [593, "int", 0.02001953125, [1832, 1836]], [594, "mid", 0.018798828125, [1836, 1840]], [595, "=", 0.032470703125, [1840, 1841]], [596, "l", 0.0084228515625, [1841, 1842]], [597, "+", 0.0162353515625, [1842, 1843]], [598, "(", 0.0634765625, [1843, 1844]], [599, "r", 0.01153564453125, [1844, 1845]], [600, "-", 0.0390625, [1845, 1846]], [601, "l", 0.00836181640625, [1846, 1847]], [602, ")/", 0.021728515625, [1847, 1849]], [603, "2", 0.043212890625, [1849, 1850]], [604, ";", 0.02783203125, [1850, 1851]], [607, "int", 0.0185546875, [1867, 1871]], [608, "sum", 0.0167236328125, [1871, 1875]], [609, "=", 0.03173828125, [1875, 1876]], [610, "s", 0.01611328125, [1876, 1877]], [611, "+", 0.015869140625, [1877, 1878]], [612, "sum", 0.0172119140625, [1878, 1881]], [613, "B", 0.007720947265625, [1881, 1882]], [614, "[", 0.0184326171875, [1882, 1883]], [615, "mid", 0.01287841796875, [1883, 1886]], [616, "];", 0.0240478515625, [1886, 1888]], [619, "if", 0.0242919921875, [1904, 1907]], [620, "(", 0.0634765625, [1907, 1908]], [621, "sum", 0.0174560546875, [1908, 1911]], [622, "==", 0.02392578125, [1911, 1913]], [623, "go", 0.016845703125, [1913, 1915]], [624, "al", 0.011962890625, [1915, 1917]], [625, ")", 0.08154296875, [1917, 1918]], [628, "return", 0.0308837890625, [1938, 1945]], [630, "0", 0.0155029296875, [1946, 1947]], [631, ";", 0.0303955078125, [1947, 1948]], [634, "an", 0.02392578125, [1964, 1967]], [635, "s", 0.019775390625, [1967, 1968]], [636, "=", 0.035400390625, [1968, 1969]], [637, "min", 0.0189208984375, [1969, 1972]], [638, "(", 0.06982421875, [1972, 1973]], [639, "ans", 0.021728515625, [1973, 1976]], [640, ",", 0.041015625, [1976, 1977]], [641, "abs", 0.0206298828125, [1977, 1980]], [642, "(", 0.0693359375, [1980, 1981]], [643, "sum", 0.01904296875, [1981, 1984]], [644, "-", 0.04296875, [1984, 1985]], [645, "go", 0.0164794921875, [1985, 1987]], [646, "al", 0.01239013671875, [1987, 1989]], [647, "));", 0.03271484375, [1989, 1992]], [650, "if", 0.025146484375, [2008, 2011]], [651, "(", 0.0703125, [2011, 2012]], [652, "sum", 0.01904296875, [2012, 2015]], [653, ">", 0.020751953125, [2015, 2016]], [654, "go", 0.0184326171875, [2016, 2018]], [655, "al", 0.01312255859375, [2018, 2020]], [656, "){", 0.036376953125, [2020, 2022]], [659, "r", 0.0179443359375, [2042, 2044]], [660, "=", 0.038818359375, [2044, 2045]], [661, "mid", 0.017333984375, [2045, 2048]], [662, "-", 0.0478515625, [2048, 2049]], [663, "1", 0.04541015625, [2049, 2050]], [664, ";", 0.03515625, [2050, 2051]], [667, "}", 0.042724609375, [2067, 2069]], [670, "else", 0.0283203125, [2085, 2090]], [671, "{", 0.0361328125, [2090, 2091]], [674, "l", 0.01544189453125, [2111, 2113]], [675, "=", 0.03955078125, [2113, 2114]], [676, "mid", 0.0150146484375, [2114, 2117]], [677, "+", 0.017578125, [2117, 2118]], [678, "1", 0.04052734375, [2118, 2119]], [679, ";", 0.03466796875, [2119, 2120]], [682, "}", 0.04248046875, [2136, 2138]], [686, "}", 0.044677734375, [2154, 2156]], [689, "}", 0.04541015625, [2164, 2166]], [694, "return", 0.0380859375, [2183, 2190]], [695, "an", 0.0263671875, [2190, 2193]], [696, "s", 0.0194091796875, [2193, 2194]], [697, ";", 0.03564453125, [2194, 2195]], [700, "}", 0.042236328125, [2199, 2201]], [702, "};", 0.033203125, [2202, 2204]]], "reading_last": [[9, "You", 0.038818359375, [0, 3]], [10, "are", 0.0252685546875, [3, 7]], [11, "an", 0.01336669921875, [7, 10]], [12, "exception", 0.0296630859375, [10, 20]], [13, "ally", 0.01336669921875, [20, 24]], [14, "intelligent", 0.005859375, [24, 36]], [15, "coding", 0.032958984375, [36, 43]], [16, "assistant", 0.0089111328125, [43, 53]], [17, "that", 0.0032958984375, [53, 58]], [18, "consistently", 0.010986328125, [58, 71]], [19, "delivers", 0.0076904296875, [71, 80]], [20, "accurate", 0.006103515625, [80, 89]], [21, "and", 0.00482177734375, [89, 93]], [22, "reliable", 0.004241943359375, [93, 102]], [23, "responses", 0.0250244140625, [102, 112]], [24, "to", 0.00335693359375, [112, 115]], [25, "user", 0.0478515625, [115, 120]], [26, "instructions", 0.00921630859375, [120, 133]], [27, ".", 0.008544921875, [133, 134]], [31, "@", 0.0634765625, [139, 141]], [32, "@", 0.021728515625, [141, 142]], [33, "Inst", 0.12158203125, [142, 147]], [34, "ruction", 0.052978515625, [147, 154]], [37, "You", 0.08935546875, [158, 162]], [38, "are", 0.010009765625, [162, 166]], [39, "a", 0.015869140625, [166, 168]], [40, "program", 0.044677734375, [168, 176]], [41, "rep", 0.046630859375, [176, 180]], [42, "aire", 0.07275390625, [180, 184]], [43, "r", 0.0286865234375, [184, 185]], [44, ".", 0.01513671875, [185, 186]], [45, "Please", 0.01251220703125, [186, 193]], [46, "repair", 0.01806640625, [193, 200]], [47, "the", 0.00640869140625, [200, 204]], [48, "following", 0.00909423828125, [204, 214]], [49, "bug", 0.021728515625, [214, 218]], [50, "gy", 0.0242919921875, [218, 220]], [51, "program", 0.0791015625, [220, 228]], [52, ".", 0.013427734375, [228, 229]], [53, "You", 0.0118408203125, [229, 233]], [54, "are", 0.0030975341796875, [233, 237]], [55, "given", 0.0076904296875, [237, 243]], [56, "an", 0.005889892578125, [243, 246]], [57, "integer", 0.01513671875, [246, 254]], [58, "array", 0.019775390625, [254, 260]], [59, "num", 0.08251953125, [260, 264]], [60, "s", 0.039794921875, [264, 265]], [61, "and", 0.003936767578125, [265, 269]], [62, "an", 0.00311279296875, [269, 272]], [63, "integer", 0.00848388671875, [272, 280]], [64, "goal", 0.031982421875, [280, 285]], [65, ".", 0.004608154296875, [285, 286]], [67, "You", 0.007049560546875, [287, 290]], [68, "want", 0.004058837890625, [290, 295]], [69, "to", 0.00347900390625, [295, 298]], [70, "choose", 0.007598876953125, [298, 305]], [71, "a", 0.004852294921875, [305, 307]], [72, "subsequ", 0.034423828125, [307, 315]], [73, "ence", 0.01123046875, [315, 319]], [74, "of", 0.002166748046875, [319, 322]], [75, "num", 0.01458740234375, [322, 326]], [76, "s", 0.00439453125, [326, 327]], [77, "such", 0.0035858154296875, [327, 332]], [78, "that", 0.0021820068359375, [332, 337]], [79, "the", 0.0026702880859375, [337, 341]], [80, "sum", 0.005645751953125, [341, 345]], [81, "of", 0.00323486328125, [345, 348]], [82, "its", 0.0074462890625, [348, 352]], [83, "elements", 0.005462646484375, [352, 361]], [84, "is", 0.004119873046875, [361, 364]], [85, "the", 0.00555419921875, [364, 368]], [86, "closest", 0.0126953125, [368, 376]], [87, "possible", 0.00909423828125, [376, 385]], [88, "to", 0.0031280517578125, [385, 388]], [89, "goal", 0.00823974609375, [388, 393]], [90, ".", 0.0032806396484375, [393, 394]], [91, "That", 0.00640869140625, [394, 399]], [92, "is", 0.003997802734375, [399, 402]], [93, ",", 0.00396728515625, [402, 403]], [94, "if", 0.0031280517578125, [403, 406]], [95, "the", 0.0015106201171875, [406, 410]], [96, "sum", 0.0029296875, [410, 414]], [97, "of", 0.0016021728515625, [414, 417]], [98, "the", 0.00183868408203125, [417, 421]], [99, "subsequ", 0.0145263671875, [421, 429]], [100, "ence", 0.005218505859375, [429, 433]], [101, "'", 0.004180908203125, [433, 434]], [102, "s", 0.0015411376953125, [434, 435]], [103, "elements", 0.0022430419921875, [435, 444]], [104, "is", 0.00107574462890625, [444, 447]], [105, "sum", 0.003204345703125, [447, 451]], [106, ",", 0.0011444091796875, [451, 452]], [107, "then", 0.0011138916015625, [452, 457]], [108, "you", 0.00244140625, [457, 461]], [109, "want", 0.000881195068359375, [461, 466]], [110, "to", 0.000743865966796875, [466, 469]], [111, "minimize", 0.00494384765625, [469, 478]], [112, "the", 0.0010223388671875, [478, 482]], [113, "absolute", 0.004425048828125, [482, 491]], [114, "difference", 0.003265380859375, [491, 502]], [115, "abs", 0.0162353515625, [502, 506]], [116, "(", 0.0025177001953125, [506, 507]], [117, "sum", 0.004119873046875, [507, 510]], [118, "-", 0.0021209716796875, [510, 512]], [119, "goal", 0.0224609375, [512, 517]], [120, ").", 0.0029754638671875, [517, 519]], [122, "Return", 0.0048828125, [520, 526]], [123, "the", 0.004486083984375, [526, 530]], [124, "minimum", 0.006317138671875, [530, 538]], [125, "possible", 0.00775146484375, [538, 547]], [126, "value", 0.001617431640625, [547, 553]], [127, "of", 0.0019683837890625, [553, 556]], [128, "abs", 0.006805419921875, [556, 560]], [129, "(", 0.0021514892578125, [560, 561]], [130, "sum", 0.00439453125, [561, 564]], [131, "-", 0.0027313232421875, [564, 566]], [132, "goal", 0.002899169921875, [566, 571]], [133, ").", 0.003997802734375, [571, 573]], [135, "Note", 0.003173828125, [574, 578]], [136, "that", 0.006103515625, [578, 583]], [137, "a", 0.005889892578125, [583, 585]], [138, "subsequ", 0.0194091796875, [585, 593]], [139, "ence", 0.00823974609375, [593, 597]], [140, "of", 0.0027313232421875, [597, 600]], [141, "an", 0.0011444091796875, [600, 603]], [142, "array", 0.006011962890625, [603, 609]], [143, "is", 0.0025177001953125, [609, 612]], [144, "an", 0.00179290771484375, [612, 615]], [145, "array", 0.004364013671875, [615, 621]], [146, "formed", 0.005126953125, [621, 628]], [147, "by", 0.0028228759765625, [628, 631]], [148, "removing", 0.003143310546875, [631, 640]], [149, "some", 0.00177001953125, [640, 645]], [150, "elements", 0.004180908203125, [645, 654]], [151, "(", 0.0028076171875, [654, 656]], [152, "poss", 0.004974365234375, [656, 660]], [153, "ibly", 0.00154876708984375, [660, 664]], [154, "all", 0.004425048828125, [664, 668]], [155, "or", 0.00090789794921875, [668, 671]], [156, "none", 0.0030670166015625, [671, 676]], [157, ")", 0.000659942626953125, [676, 677]], [158, "of", 0.0026702880859375, [677, 680]], [159, "the", 0.0029296875, [680, 684]], [160, "original", 0.0040283203125, [684, 693]], [161, "array", 0.005218505859375, [693, 699]], [162, ".", 0.003631591796875, [699, 700]], [163, "B", 0.03173828125, [700, 701]], [164, "ug", 0.040283203125, [701, 703]], [165, "gy", 0.048828125, [703, 705]], [166, "code", 0.0257568359375, [705, 710]], [167, ":", 0.0224609375, [710, 712]], [168, "class", 0.0291748046875, [712, 718]], [169, "S", 0.034423828125, [718, 720]], [170, "olution", 0.018798828125, [720, 727]], [171, "{", 0.0111083984375, [727, 729]], [173, "public", 0.005828857421875, [730, 736]], [174, ":", 0.0032958984375, [736, 737]], [177, "void", 0.01470947265625, [741, 746]], [178, "find", 0.01708984375, [746, 751]], [179, "(", 0.01171875, [751, 752]], [180, "vector", 0.0205078125, [752, 758]], [181, "<", 0.007415771484375, [758, 759]], [182, "int", 0.0115966796875, [759, 762]], [183, ">", 0.0057373046875, [762, 763]], [184, "&", 0.0091552734375, [763, 764]], [185, "v", 0.01263427734375, [764, 765]], [186, ",", 0.005645751953125, [765, 766]], [187, "int", 0.00909423828125, [766, 770]], [188, "i", 0.00653076171875, [770, 772]], [189, ",", 0.006256103515625, [772, 773]], [190, "int", 0.00701904296875, [773, 777]], [191, "e", 0.0107421875, [777, 779]], [192, ",", 0.005340576171875, [779, 780]], [193, "int", 0.00567626953125, [780, 784]], [194, "sum", 0.0147705078125, [784, 788]], [195, ",", 0.00396728515625, [788, 789]], [196, "vector", 0.0054931640625, [789, 796]], [197, "<", 0.008056640625, [796, 797]], [198, "int", 0.00921630859375, [797, 800]], [199, ">", 0.0030670166015625, [800, 801]], [200, "&", 0.00579833984375, [801, 802]], [201, "sum", 0.032958984375, [802, 805]], [202, "v", 0.02392578125, [805, 806]], [203, "){", 0.0089111328125, [806, 808]], [206, "if", 0.00750732421875, [816, 819]], [207, "(", 0.006591796875, [819, 820]], [208, "i", 0.00823974609375, [820, 821]], [209, "==", 0.01287841796875, [821, 823]], [210, "e", 0.00994873046875, [823, 824]], [211, "){", 0.0037384033203125, [824, 826]], [214, "sum", 0.00958251953125, [838, 842]], [215, "v", 0.009521484375, [842, 843]], [216, ".", 0.01123046875, [843, 844]], [217, "push", 0.020751953125, [844, 848]], [218, "_", 0.01031494140625, [848, 849]], [219, "back", 0.002410888671875, [849, 853]], [220, "(", 0.0025787353515625, [853, 854]], [221, "sum", 0.00555419921875, [854, 857]], [222, ");", 0.0016937255859375, [857, 859]], [225, "return", 0.0023956298828125, [871, 878]], [226, ";", 0.0267333984375, [878, 879]], [229, "}", 0.00213623046875, [887, 889]], [232, "find", 0.01104736328125, [897, 902]], [233, "(", 0.0032958984375, [902, 903]], [234, "v", 0.00592041015625, [903, 904]], [235, ",", 0.0013580322265625, [904, 905]], [236, "i", 0.0025177001953125, [905, 906]], [237, "+", 0.001708984375, [906, 907]], [238, "1", 0.00188446044921875, [907, 908]], [239, ",", 0.001373291015625, [908, 909]], [240, "e", 0.00150299072265625, [909, 910]], [241, ",", 0.0025482177734375, [910, 911]], [242, "sum", 0.004669189453125, [911, 914]], [243, "+", 0.004791259765625, [914, 915]], [244, "v", 0.0033416748046875, [915, 916]], [245, "[", 0.00186920166015625, [916, 917]], [246, "i", 0.00421142578125, [917, 918]], [247, "],", 0.00396728515625, [918, 920]], [248, "sum", 0.0025634765625, [920, 923]], [249, "v", 0.005035400390625, [923, 924]], [250, ");", 0.00482177734375, [924, 926]], [253, "find", 0.005889892578125, [934, 939]], [254, "(", 0.00140380859375, [939, 940]], [255, "v", 0.002105712890625, [940, 941]], [256, ",", 0.0004425048828125, [941, 942]], [257, "i", 0.000675201416015625, [942, 943]], [258, "+", 0.0004444122314453125, [943, 944]], [259, "1", 0.00046539306640625, [944, 945]], [260, ",", 0.0004730224609375, [945, 946]], [261, "e", 0.0004405975341796875, [946, 947]], [262, ",", 0.00109100341796875, [947, 948]], [263, "sum", 0.0025482177734375, [948, 951]], [264, ",", 0.00188446044921875, [951, 952]], [265, "sum", 0.003753662109375, [952, 955]], [266, "v", 0.003387451171875, [955, 956]], [267, ");", 0.0059814453125, [956, 958]], [270, "}", 0.007415771484375, [962, 964]], [277, "int", 0.01190185546875, [982, 986]], [278, "min", 0.0152587890625, [986, 990]], [279, "Abs", 0.0133056640625, [990, 993]], [280, "Diff", 0.0296630859375, [993, 997]], [281, "erence", 0.007659912109375, [997, 1003]], [282, "(", 0.0035400390625, [1003, 1004]], [283, "vector", 0.004669189453125, [1004, 1010]], [284, "<", 0.0017547607421875, [1010, 1011]], [285, "int", 0.0067138671875, [1011, 1014]], [286, ">", 0.00189208984375, [1014, 1015]], [287, "&", 0.005126953125, [1015, 1016]], [288, "num", 0.0242919921875, [1016, 1020]], [289, "s", 0.00848388671875, [1020, 1021]], [290, ",", 0.0036468505859375, [1021, 1022]], [291, "int", 0.00311279296875, [1022, 1026]], [292, "goal", 0.0084228515625, [1026, 1031]], [293, ")", 0.00408935546875, [1031, 1032]], [294, "{", 0.00982666015625, [1032, 1034]], [297, "int", 0.00933837890625, [1042, 1046]], [298, "n", 0.00872802734375, [1046, 1048]], [299, "=", 0.01495361328125, [1048, 1049]], [300, "num", 0.005859375, [1049, 1052]], [301, "s", 0.0118408203125, [1052, 1053]], [302, ".", 0.010498046875, [1053, 1054]], [303, "size", 0.00518798828125, [1054, 1058]], [304, "();", 0.0023956298828125, [1058, 1061]], [309, "//", 0.02294921875, [1078, 1081]], [310, "Step", 0.017822265625, [1081, 1085]], [312, "1", 0.00921630859375, [1086, 1087]], [313, ":", 0.0079345703125, [1087, 1088]], [314, "Div", 0.0247802734375, [1088, 1092]], [315, "ide", 0.01031494140625, [1092, 1095]], [316, "num", 0.0191650390625, [1095, 1099]], [317, "s", 0.0111083984375, [1099, 1100]], [318, "into", 0.004608154296875, [1100, 1105]], [320, "2", 0.006866455078125, [1106, 1107]], [321, "sub", 0.01214599609375, [1107, 1111]], [322, "arr", 0.00970458984375, [1111, 1114]], [323, "ays", 0.009521484375, [1114, 1117]], [324, "of", 0.004913330078125, [1117, 1120]], [325, "size", 0.00872802734375, [1120, 1125]], [326, "n", 0.0037384033203125, [1125, 1127]], [327, "/", 0.004119873046875, [1127, 1128]], [328, "2", 0.007659912109375, [1128, 1129]], [329, "and", 0.00225830078125, [1129, 1133]], [330, "n", 0.0019683837890625, [1133, 1135]], [331, "-", 0.003570556640625, [1135, 1136]], [332, "n", 0.000835418701171875, [1136, 1137]], [333, "/", 0.00180816650390625, [1137, 1138]], [334, "2", 0.003997802734375, [1138, 1139]], [339, "vector", 0.005706787109375, [1156, 1163]], [340, "<", 0.004608154296875, [1163, 1164]], [341, "int", 0.01141357421875, [1164, 1167]], [342, ">", 0.00750732421875, [1167, 1168]], [343, "A", 0.0284423828125, [1168, 1169]], [344, ",", 0.006927490234375, [1169, 1170]], [345, "B", 0.01373291015625, [1170, 1171]], [346, ";", 0.0023651123046875, [1171, 1172]], [349, "for", 0.002471923828125, [1180, 1184]], [350, "(", 0.0032501220703125, [1184, 1185]], [351, "int", 0.002349853515625, [1185, 1188]], [352, "i", 0.001220703125, [1188, 1190]], [353, "=", 0.00113677978515625, [1190, 1191]], [354, "0", 0.0023193359375, [1191, 1192]], [355, ";", 0.00225830078125, [1192, 1193]], [356, "i", 0.0010223388671875, [1193, 1194]], [357, "<", 0.00146484375, [1194, 1195]], [358, "n", 0.00147247314453125, [1195, 1196]], [359, "/", 0.00160980224609375, [1196, 1197]], [360, "2", 0.0024871826171875, [1197, 1198]], [361, ";", 0.001190185546875, [1198, 1199]], [362, "i", 0.000789642333984375, [1199, 1200]], [363, "++", 0.0023345947265625, [1200, 1202]], [364, ")", 0.0012359619140625, [1202, 1203]], [367, "A", 0.00701904296875, [1215, 1217]], [368, ".", 0.00439453125, [1217, 1218]], [369, "push", 0.0084228515625, [1218, 1222]], [370, "_", 0.0037078857421875, [1222, 1223]], [371, "back", 0.00146484375, [1223, 1227]], [372, "(", 0.00154876708984375, [1227, 1228]], [373, "num", 0.01336669921875, [1228, 1231]], [374, "s", 0.0062255859375, [1231, 1232]], [375, "[", 0.00116729736328125, [1232, 1233]], [376, "i", 0.00189971923828125, [1233, 1234]], [377, "]);", 0.00250244140625, [1234, 1237]], [380, "for", 0.00091552734375, [1245, 1249]], [381, "(", 0.00162506103515625, [1249, 1250]], [382, "int", 0.0033111572265625, [1250, 1253]], [383, "i", 0.000682830810546875, [1253, 1255]], [384, "=", 0.00107574462890625, [1255, 1256]], [385, "n", 0.000507354736328125, [1256, 1257]], [386, "/", 0.0004425048828125, [1257, 1258]], [387, "2", 0.0006866455078125, [1258, 1259]], [388, ";", 0.00139617919921875, [1259, 1260]], [389, "i", 0.00156402587890625, [1260, 1261]], [390, "<", 0.00122833251953125, [1261, 1262]], [391, "n", 0.00079345703125, [1262, 1263]], [392, ";", 0.000492095947265625, [1263, 1264]], [393, "i", 0.0005035400390625, [1264, 1265]], [394, "++", 0.00060272216796875, [1265, 1267]], [395, ")", 0.00043487548828125, [1267, 1268]], [398, "B", 0.00799560546875, [1280, 1282]], [399, ".", 0.00173187255859375, [1282, 1283]], [400, "push", 0.00518798828125, [1283, 1287]], [401, "_", 0.0042724609375, [1287, 1288]], [402, "back", 0.00078582763671875, [1288, 1292]], [403, "(", 0.000888824462890625, [1292, 1293]], [404, "num", 0.00732421875, [1293, 1296]], [405, "s", 0.003265380859375, [1296, 1297]], [406, "[", 0.0002460479736328125, [1297, 1298]], [407, "i", 0.00031280517578125, [1298, 1299]], [408, "]);", 0.003021240234375, [1299, 1302]], [413, "//", 0.004608154296875, [1319, 1322]], [414, "Step", 0.001983642578125, [1322, 1326]], [416, "2", 0.002044677734375, [1327, 1328]], [417, ":", 0.004669189453125, [1328, 1329]], [418, "Find", 0.005615234375, [1329, 1334]], [419, "all", 0.0111083984375, [1334, 1338]], [420, "possible", 0.00927734375, [1338, 1347]], [421, "subset", 0.03271484375, [1347, 1354]], [422, "sums", 0.013671875, [1354, 1359]], [423, "of", 0.005828857421875, [1359, 1362]], [424, "A", 0.005126953125, [1362, 1364]], [425, "and", 0.003265380859375, [1364, 1368]], [426, "B", 0.004241943359375, [1368, 1370]], [431, "vector", 0.0032501220703125, [1387, 1394]], [432, "<", 0.002716064453125, [1394, 1395]], [433, "int", 0.003265380859375, [1395, 1398]], [434, ">", 0.0059814453125, [1398, 1399]], [435, "sum", 0.029541015625, [1399, 1402]], [436, "A", 0.01397705078125, [1402, 1403]], [437, ",", 0.00445556640625, [1403, 1404]], [438, "sum", 0.01116943359375, [1404, 1407]], [439, "B", 0.0089111328125, [1407, 1408]], [440, ";", 0.002410888671875, [1408, 1409]], [443, "find", 0.006378173828125, [1417, 1422]], [444, "(", 0.0026397705078125, [1422, 1423]], [445, "A", 0.0030059814453125, [1423, 1424]], [446, ",", 0.00142669677734375, [1424, 1425]], [447, "0", 0.001708984375, [1425, 1426]], [448, ",", 0.00165557861328125, [1426, 1427]], [449, "A", 0.00131988525390625, [1427, 1428]], [450, ".", 0.0027618408203125, [1428, 1429]], [451, "size", 0.0020751953125, [1429, 1433]], [452, "(),", 0.001068115234375, [1433, 1436]], [453, "0", 0.0007781982421875, [1436, 1437]], [454, ",", 0.00154876708984375, [1437, 1438]], [455, "sum", 0.004608154296875, [1438, 1441]], [456, "A", 0.00250244140625, [1441, 1442]], [457, ");", 0.003143310546875, [1442, 1444]], [460, "find", 0.0027618408203125, [1452, 1457]], [461, "(", 0.002197265625, [1457, 1458]], [462, "B", 0.0019989013671875, [1458, 1459]], [463, ",", 0.0006866455078125, [1459, 1460]], [464, "0", 0.000492095947265625, [1460, 1461]], [465, ",", 0.00113677978515625, [1461, 1462]], [466, "B", 0.00061798095703125, [1462, 1463]], [467, ".", 0.00127410888671875, [1463, 1464]], [468, "size", 0.000682830810546875, [1464, 1468]], [469, "(),", 0.000576019287109375, [1468, 1471]], [470, "0", 0.000438690185546875, [1471, 1472]], [471, ",", 0.000759124755859375, [1472, 1473]], [472, "sum", 0.00360107421875, [1473, 1476]], [473, "B", 0.00139617919921875, [1476, 1477]], [474, ");", 0.002960205078125, [1477, 1479]], [479, "sort", 0.007171630859375, [1496, 1501]], [480, "(", 0.004180908203125, [1501, 1502]], [481, "sum", 0.00921630859375, [1502, 1505]], [482, "A", 0.0089111328125, [1505, 1506]], [483, ".", 0.003448486328125, [1506, 1507]], [484, "begin", 0.0030975341796875, [1507, 1512]], [485, "(),", 0.0034027099609375, [1512, 1515]], [486, "sum", 0.0016021728515625, [1515, 1518]], [487, "A", 0.004180908203125, [1518, 1519]], [488, ".", 0.001312255859375, [1519, 1520]], [489, "end", 0.0019073486328125, [1520, 1523]], [490, "());", 0.0026702880859375, [1523, 1527]], [495, "//", 0.00372314453125, [1545, 1548]], [496, "Step", 0.00118255615234375, [1548, 1552]], [498, "3", 0.00125885009765625, [1553, 1554]], [499, ":", 0.003326416015625, [1554, 1555]], [500, "Find", 0.004058837890625, [1555, 1560]], [501, "combinations", 0.0274658203125, [1560, 1573]], [502, "from", 0.005828857421875, [1573, 1578]], [503, "sum", 0.007232666015625, [1578, 1582]], [504, "A", 0.005645751953125, [1582, 1583]], [505, "&", 0.01055908203125, [1583, 1585]], [506, "sum", 0.00408935546875, [1585, 1589]], [507, "B", 0.00738525390625, [1589, 1590]], [508, "such", 0.004974365234375, [1590, 1595]], [509, "that", 0.004608154296875, [1595, 1600]], [510, "abs", 0.0142822265625, [1600, 1604]], [511, "(", 0.004364013671875, [1604, 1605]], [512, "sum", 0.006195068359375, [1605, 1608]], [513, "-", 0.0086669921875, [1608, 1609]], [514, "go", 0.031005859375, [1609, 1611]], [515, "al", 0.0079345703125, [1611, 1613]], [516, ")", 0.005096435546875, [1613, 1614]], [517, "is", 0.00433349609375, [1614, 1617]], [518, "minim", 0.01904296875, [1617, 1623]], [519, "ized", 0.006683349609375, [1623, 1627]], [524, "int", 0.005615234375, [1644, 1648]], [525, "an", 0.0164794921875, [1648, 1651]], [526, "s", 0.007720947265625, [1651, 1652]], [527, "=", 0.006500244140625, [1652, 1653]], [528, "INT", 0.005523681640625, [1653, 1656]], [529, "_", 0.00396728515625, [1656, 1657]], [530, "MAX", 0.0025482177734375, [1657, 1660]], [531, ";", 0.0032196044921875, [1660, 1661]], [536, "for", 0.0032958984375, [1678, 1682]], [537, "(", 0.004730224609375, [1682, 1683]], [538, "int", 0.00592041015625, [1683, 1686]], [539, "i", 0.00225830078125, [1686, 1688]], [540, "=", 0.00250244140625, [1688, 1689]], [541, "0", 0.0027313232421875, [1689, 1690]], [542, ";", 0.002838134765625, [1690, 1691]], [543, "i", 0.00146484375, [1691, 1692]], [544, "<", 0.00194549560546875, [1692, 1693]], [545, "sum", 0.007110595703125, [1693, 1696]], [546, "A", 0.004486083984375, [1696, 1697]], [547, ".", 0.0035858154296875, [1697, 1698]], [548, "size", 0.0032806396484375, [1698, 1702]], [549, "();", 0.000919342041015625, [1702, 1705]], [550, "i", 0.00299072265625, [1705, 1706]], [551, "++", 0.0047607421875, [1706, 1708]], [552, "){", 0.002777099609375, [1708, 1710]], [555, "int", 0.01007080078125, [1722, 1726]], [556, "s", 0.0067138671875, [1726, 1728]], [557, "=", 0.007232666015625, [1728, 1729]], [558, "sum", 0.00970458984375, [1729, 1732]], [559, "A", 0.0036468505859375, [1732, 1733]], [560, "[", 0.002593994140625, [1733, 1734]], [561, "i", 0.0025634765625, [1734, 1735]], [562, "];", 0.004608154296875, [1735, 1737]], [565, "int", 0.0126953125, [1749, 1753]], [566, "l", 0.01165771484375, [1753, 1755]], [567, "=", 0.005401611328125, [1755, 1756]], [568, "0", 0.0048828125, [1756, 1757]], [569, ";", 0.002349853515625, [1757, 1758]], [572, "int", 0.00244140625, [1770, 1774]], [573, "r", 0.0030975341796875, [1774, 1776]], [574, "=", 0.001953125, [1776, 1777]], [575, "sum", 0.003936767578125, [1777, 1780]], [576, "B", 0.00604248046875, [1780, 1781]], [577, ".", 0.00341796875, [1781, 1782]], [578, "size", 0.0028076171875, [1782, 1786]], [579, "()-", 0.000904083251953125, [1786, 1789]], [580, "1", 0.00109100341796875, [1789, 1790]], [581, ";", 0.0016326904296875, [1790, 1791]], [584, "while", 0.00341796875, [1803, 1809]], [585, "(", 0.0016021728515625, [1809, 1810]], [586, "l", 0.0026397705078125, [1810, 1811]], [587, "<", 0.0030670166015625, [1811, 1812]], [588, "=", 0.00164031982421875, [1812, 1813]], [589, "r", 0.00396728515625, [1813, 1814]], [590, "){", 0.003082275390625, [1814, 1816]], [593, "int", 0.004425048828125, [1832, 1836]], [594, "mid", 0.01129150390625, [1836, 1840]], [595, "=", 0.0037078857421875, [1840, 1841]], [596, "l", 0.005218505859375, [1841, 1842]], [597, "+", 0.00185394287109375, [1842, 1843]], [598, "(", 0.002227783203125, [1843, 1844]], [599, "r", 0.0024261474609375, [1844, 1845]], [600, "-", 0.00159454345703125, [1845, 1846]], [601, "l", 0.0030670166015625, [1846, 1847]], [602, ")/", 0.00159454345703125, [1847, 1849]], [603, "2", 0.007568359375, [1849, 1850]], [604, ";", 0.0030364990234375, [1850, 1851]], [607, "int", 0.00799560546875, [1867, 1871]], [608, "sum", 0.0142822265625, [1871, 1875]], [609, "=", 0.0027008056640625, [1875, 1876]], [610, "s", 0.0036163330078125, [1876, 1877]], [611, "+", 0.004364013671875, [1877, 1878]], [612, "sum", 0.0086669921875, [1878, 1881]], [613, "B", 0.00982666015625, [1881, 1882]], [614, "[", 0.002532958984375, [1882, 1883]], [615, "mid", 0.0037841796875, [1883, 1886]], [616, "];", 0.0027313232421875, [1886, 1888]], [619, "if", 0.00213623046875, [1904, 1907]], [620, "(", 0.002838134765625, [1907, 1908]], [621, "sum", 0.006072998046875, [1908, 1911]], [622, "==", 0.0034637451171875, [1911, 1913]], [623, "go", 0.0194091796875, [1913, 1915]], [624, "al", 0.00836181640625, [1915, 1917]], [625, ")", 0.0020904541015625, [1917, 1918]], [628, "return", 0.0034637451171875, [1938, 1945]], [630, "0", 0.005462646484375, [1946, 1947]], [631, ";", 0.0028533935546875, [1947, 1948]], [634, "an", 0.0107421875, [1964, 1967]], [635, "s", 0.005859375, [1967, 1968]], [636, "=", 0.00616455078125, [1968, 1969]], [637, "min", 0.00799560546875, [1969, 1972]], [638, "(", 0.003692626953125, [1972, 1973]], [639, "ans", 0.00238037109375, [1973, 1976]], [640, ",", 0.00445556640625, [1976, 1977]], [641, "abs", 0.004058837890625, [1977, 1980]], [642, "(", 0.0023651123046875, [1980, 1981]], [643, "sum", 0.002044677734375, [1981, 1984]], [644, "-", 0.0022430419921875, [1984, 1985]], [645, "go", 0.004241943359375, [1985, 1987]], [646, "al", 0.0023193359375, [1987, 1989]], [647, "));", 0.0024566650390625, [1989, 1992]], [650, "if", 0.001983642578125, [2008, 2011]], [651, "(", 0.00164031982421875, [2011, 2012]], [652, "sum", 0.0037689208984375, [2012, 2015]], [653, ">", 0.00213623046875, [2015, 2016]], [654, "go", 0.049560546875, [2016, 2018]], [655, "al", 0.0025787353515625, [2018, 2020]], [656, "){", 0.0018157958984375, [2020, 2022]], [659, "r", 0.00396728515625, [2042, 2044]], [660, "=", 0.0027008056640625, [2044, 2045]], [661, "mid", 0.002288818359375, [2045, 2048]], [662, "-", 0.00147247314453125, [2048, 2049]], [663, "1", 0.0015869140625, [2049, 2050]], [664, ";", 0.003021240234375, [2050, 2051]], [667, "}", 0.0019989013671875, [2067, 2069]], [670, "else", 0.0012664794921875, [2085, 2090]], [671, "{", 0.00142669677734375, [2090, 2091]], [674, "l", 0.003204345703125, [2111, 2113]], [675, "=", 0.00092315673828125, [2113, 2114]], [676, "mid", 0.0011749267578125, [2114, 2117]], [677, "+", 0.000553131103515625, [2117, 2118]], [678, "1", 0.0007781982421875, [2118, 2119]], [679, ";", 0.00164031982421875, [2119, 2120]], [682, "}", 0.003997802734375, [2136, 2138]], [686, "}", 0.0045166015625, [2154, 2156]], [689, "}", 0.005706787109375, [2164, 2166]], [694, "return", 0.004974365234375, [2183, 2190]], [695, "an", 0.00994873046875, [2190, 2193]], [696, "s", 0.006256103515625, [2193, 2194]], [697, ";", 0.00616455078125, [2194, 2195]], [700, "}", 0.01434326171875, [2199, 2201]], [702, "};", 0.02734375, [2202, 2204]]], "reading_all": [[9, "You", 1.109375, [0, 3]], [10, "are", 1.78125, [3, 7]], [11, "an", 0.80078125, [7, 10]], [12, "exception", 1.28125, [10, 20]], [13, "ally", 0.640625, [20, 24]], [14, "intelligent", 0.431640625, [24, 36]], [15, "coding", 0.734375, [36, 43]], [16, "assistant", 0.6875, [43, 53]], [17, "that", 0.314453125, [53, 58]], [18, "consistently", 0.4375, [58, 71]], [19, "delivers", 0.490234375, [71, 80]], [20, "accurate", 0.33203125, [80, 89]], [21, "and", 0.2177734375, [89, 93]], [22, "reliable", 0.259765625, [93, 102]], [23, "responses", 0.6171875, [102, 112]], [24, "to", 0.2275390625, [112, 115]], [25, "user", 0.349609375, [115, 120]], [26, "instructions", 0.431640625, [120, 133]], [27, ".", 0.498046875, [133, 134]], [31, "@", 1.0, [139, 141]], [32, "@", 0.99609375, [141, 142]], [33, "Inst", 1.34375, [142, 147]], [34, "ruction", 1.609375, [147, 154]], [37, "You", 1.0234375, [158, 162]], [38, "are", 0.421875, [162, 166]], [39, "a", 0.41015625, [166, 168]], [40, "program", 1.4375, [168, 176]], [41, "rep", 3.28125, [176, 180]], [42, "aire", 14.3125, [180, 184]], [43, "r", 4.875, [184, 185]], [44, ".", 1.9140625, [185, 186]], [45, "Please", 1.4140625, [186, 193]], [46, "repair", 10.1875, [193, 200]], [47, "the", 1.34375, [200, 204]], [48, "following", 0.7734375, [204, 214]], [49, "bug", 3.046875, [214, 218]], [50, "gy", 2.0, [218, 220]], [51, "program", 2.84375, [220, 228]], [52, ".", 1.828125, [228, 229]], [53, "You", 0.361328125, [229, 233]], [54, "are", 0.1533203125, [233, 237]], [55, "given", 0.4296875, [237, 243]], [56, "an", 0.197265625, [243, 246]], [57, "integer", 0.41015625, [246, 254]], [58, "array", 0.466796875, [254, 260]], [59, "num", 0.412109375, [260, 264]], [60, "s", 0.458984375, [264, 265]], [61, "and", 0.208984375, [265, 269]], [62, "an", 0.1064453125, [269, 272]], [63, "integer", 0.1435546875, [272, 280]], [64, "goal", 0.50390625, [280, 285]], [65, ".", 0.25390625, [285, 286]], [67, "You", 0.234375, [287, 290]], [68, "want", 0.1943359375, [290, 295]], [69, "to", 0.0810546875, [295, 298]], [70, "choose", 0.326171875, [298, 305]], [71, "a", 0.115234375, [305, 307]], [72, "subsequ", 0.46875, [307, 315]], [73, "ence", 0.44921875, [315, 319]], [74, "of", 0.1044921875, [319, 322]], [75, "num", 0.17578125, [322, 326]], [76, "s", 0.14453125, [326, 327]], [77, "such", 0.1337890625, [327, 332]], [78, "that", 0.10546875, [332, 337]], [79, "the", 0.06591796875, [337, 341]], [80, "sum", 0.232421875, [341, 345]], [81, "of", 0.09033203125, [345, 348]], [82, "its", 0.107421875, [348, 352]], [83, "elements", 0.154296875, [352, 361]], [84, "is", 0.11474609375, [361, 364]], [85, "the", 0.12353515625, [364, 368]], [86, "closest", 0.5, [368, 376]], [87, "possible", 0.251953125, [376, 385]], [88, "to", 0.1435546875, [385, 388]], [89, "goal", 0.349609375, [388, 393]], [90, ".", 0.330078125, [393, 394]], [91, "That", 0.1650390625, [394, 399]], [92, "is", 0.10302734375, [399, 402]], [93, ",", 0.1669921875, [402, 403]], [94, "if", 0.123046875, [403, 406]], [95, "the", 0.0625, [406, 410]], [96, "sum", 0.12109375, [410, 414]], [97, "of", 0.0517578125, [414, 417]], [98, "the", 0.045166015625, [417, 421]], [99, "subsequ", 0.21484375, [421, 429]], [100, "ence", 0.16015625, [429, 433]], [101, "'", 0.15625, [433, 434]], [102, "s", 0.0595703125, [434, 435]], [103, "elements", 0.07177734375, [435, 444]], [104, "is", 0.05029296875, [444, 447]], [105, "sum", 0.095703125, [447, 451]], [106, ",", 0.205078125, [451, 452]], [107, "then", 0.08349609375, [452, 457]], [108, "you", 0.0791015625, [457, 461]], [109, "want", 0.1083984375, [461, 466]], [110, "to", 0.055908203125, [466, 469]], [111, "minimize", 0.40625, [469, 478]], [112, "the", 0.052490234375, [478, 482]], [113, "absolute", 0.1748046875, [482, 491]], [114, "difference", 0.1796875, [491, 502]], [115, "abs", 0.390625, [502, 506]], [116, "(", 0.34765625, [506, 507]], [117, "sum", 0.16796875, [507, 510]], [118, "-", 0.13671875, [510, 512]], [119, "goal", 0.271484375, [512, 517]], [120, ").", 0.2294921875, [517, 519]], [122, "Return", 0.46875, [520, 526]], [123, "the", 0.154296875, [526, 530]], [124, "minimum", 0.17578125, [530, 538]], [125, "possible", 0.15625, [538, 547]], [126, "value", 0.1318359375, [547, 553]], [127, "of", 0.0673828125, [553, 556]], [128, "abs", 0.1962890625, [556, 560]], [129, "(", 0.1640625, [560, 561]], [130, "sum", 0.12158203125, [561, 564]], [131, "-", 0.099609375, [564, 566]], [132, "goal", 0.11767578125, [566, 571]], [133, ").", 0.248046875, [571, 573]], [135, "Note", 0.23828125, [574, 578]], [136, "that", 0.142578125, [578, 583]], [137, "a", 0.123046875, [583, 585]], [138, "subsequ", 0.232421875, [585, 593]], [139, "ence", 0.150390625, [593, 597]], [140, "of", 0.0791015625, [597, 600]], [141, "an", 0.0634765625, [600, 603]], [142, "array", 0.166015625, [603, 609]], [143, "is", 0.0703125, [609, 612]], [144, "an", 0.058837890625, [612, 615]], [145, "array", 0.08837890625, [615, 621]], [146, "formed", 0.1533203125, [621, 628]], [147, "by", 0.068359375, [628, 631]], [148, "removing", 0.2216796875, [631, 640]], [149, "some", 0.08056640625, [640, 645]], [150, "elements", 0.12060546875, [645, 654]], [151, "(", 0.07958984375, [654, 656]], [152, "poss", 0.07958984375, [656, 660]], [153, "ibly", 0.13671875, [660, 664]], [154, "all", 0.09716796875, [664, 668]], [155, "or", 0.08349609375, [668, 671]], [156, "none", 0.1708984375, [671, 676]], [157, ")", 0.1103515625, [676, 677]], [158, "of", 0.0625, [677, 680]], [159, "the", 0.05029296875, [680, 684]], [160, "original", 0.072265625, [684, 693]], [161, "array", 0.09033203125, [693, 699]], [162, ".", 0.2490234375, [699, 700]], [163, "B", 0.77734375, [700, 701]], [164, "ug", 1.5234375, [701, 703]], [165, "gy", 2.140625, [703, 705]], [166, "code", 2.046875, [705, 710]], [167, ":", 1.375, [710, 712]], [168, "class", 1.1484375, [712, 718]], [169, "S", 0.60546875, [718, 720]], [170, "olution", 0.7890625, [720, 727]], [171, "{", 0.6328125, [727, 729]], [173, "public", 0.375, [730, 736]], [174, ":", 0.2265625, [736, 737]], [177, "void", 0.365234375, [741, 746]], [178, "find", 0.49609375, [746, 751]], [179, "(", 0.6640625, [751, 752]], [180, "vector", 0.322265625, [752, 758]], [181, "<", 0.107421875, [758, 759]], [182, "int", 0.162109375, [759, 762]], [183, ">", 0.09130859375, [762, 763]], [184, "&", 0.2099609375, [763, 764]], [185, "v", 0.265625, [764, 765]], [186, ",", 0.15234375, [765, 766]], [187, "int", 0.1171875, [766, 770]], [188, "i", 0.15625, [770, 772]], [189, ",", 0.1513671875, [772, 773]], [190, "int", 0.09912109375, [773, 777]], [191, "e", 0.201171875, [777, 779]], [192, ",", 0.1435546875, [779, 780]], [193, "int", 0.087890625, [780, 784]], [194, "sum", 0.2099609375, [784, 788]], [195, ",", 0.1240234375, [788, 789]], [196, "vector", 0.1201171875, [789, 796]], [197, "<", 0.068359375, [796, 797]], [198, "int", 0.169921875, [797, 800]], [199, ">", 0.053955078125, [800, 801]], [200, "&", 0.10546875, [801, 802]], [201, "sum", 0.2109375, [802, 805]], [202, "v", 0.50390625, [805, 806]], [203, "){", 0.251953125, [806, 808]], [206, "if", 0.2412109375, [816, 819]], [207, "(", 0.2060546875, [819, 820]], [208, "i", 0.1416015625, [820, 821]], [209, "==", 0.1826171875, [821, 823]], [210, "e", 0.205078125, [823, 824]], [211, "){", 0.1923828125, [824, 826]], [214, "sum", 0.08642578125, [838, 842]], [215, "v", 0.12060546875, [842, 843]], [216, ".", 0.15625, [843, 844]], [217, "push", 0.2734375, [844, 848]], [218, "_", 0.224609375, [848, 849]], [219, "back", 0.16015625, [849, 853]], [220, "(", 0.078125, [853, 854]], [221, "sum", 0.0859375, [854, 857]], [222, ");", 0.09814453125, [857, 859]], [225, "return", 0.1796875, [871, 878]], [226, ";", 3.25, [878, 879]], [229, "}", 0.1279296875, [887, 889]], [232, "find", 0.6328125, [897, 902]], [233, "(", 0.21875, [902, 903]], [234, "v", 0.09814453125, [903, 904]], [235, ",", 0.0673828125, [904, 905]], [236, "i", 0.08251953125, [905, 906]], [237, "+", 0.08642578125, [906, 907]], [238, "1", 0.126953125, [907, 908]], [239, ",", 0.060546875, [908, 909]], [240, "e", 0.07470703125, [909, 910]], [241, ",", 0.0615234375, [910, 911]], [242, "sum", 0.09033203125, [911, 914]], [243, "+", 0.126953125, [914, 915]], [244, "v", 0.058349609375, [915, 916]], [245, "[", 0.06591796875, [916, 917]], [246, "i", 0.056396484375, [917, 918]], [247, "],", 0.08935546875, [918, 920]], [248, "sum", 0.046142578125, [920, 923]], [249, "v", 0.0927734375, [923, 924]], [250, ");", 0.3984375, [924, 926]], [253, "find", 0.443359375, [934, 939]], [254, "(", 0.1708984375, [939, 940]], [255, "v", 0.0673828125, [940, 941]], [256, ",", 0.0458984375, [941, 942]], [257, "i", 0.03125, [942, 943]], [258, "+", 0.03271484375, [943, 944]], [259, "1", 0.06689453125, [944, 945]], [260, ",", 0.041259765625, [945, 946]], [261, "e", 0.031982421875, [946, 947]], [262, ",", 0.06103515625, [947, 948]], [263, "sum", 0.06494140625, [948, 951]], [264, ",", 0.080078125, [951, 952]], [265, "sum", 0.0634765625, [952, 955]], [266, "v", 0.091796875, [955, 956]], [267, ");", 0.39453125, [956, 958]], [270, "}", 0.443359375, [962, 964]], [277, "int", 0.28125, [982, 986]], [278, "min", 0.267578125, [986, 990]], [279, "Abs", 0.427734375, [990, 993]], [280, "Diff", 0.65625, [993, 997]], [281, "erence", 0.625, [997, 1003]], [282, "(", 0.4609375, [1003, 1004]], [283, "vector", 0.1533203125, [1004, 1010]], [284, "<", 0.05712890625, [1010, 1011]], [285, "int", 0.1474609375, [1011, 1014]], [286, ">", 0.053466796875, [1014, 1015]], [287, "&", 0.12158203125, [1015, 1016]], [288, "num", 0.216796875, [1016, 1020]], [289, "s", 0.1875, [1020, 1021]], [290, ",", 0.10498046875, [1021, 1022]], [291, "int", 0.07080078125, [1022, 1026]], [292, "goal", 0.484375, [1026, 1031]], [293, ")", 0.185546875, [1031, 1032]], [294, "{", 0.353515625, [1032, 1034]], [297, "int", 0.1572265625, [1042, 1046]], [298, "n", 0.16015625, [1046, 1048]], [299, "=", 0.216796875, [1048, 1049]], [300, "num", 0.1103515625, [1049, 1052]], [301, "s", 0.1357421875, [1052, 1053]], [302, ".", 0.1513671875, [1053, 1054]], [303, "size", 0.11572265625, [1054, 1058]], [304, "();", 0.10546875, [1058, 1061]], [309, "//", 0.48828125, [1078, 1081]], [310, "Step", 0.458984375, [1081, 1085]], [312, "1", 0.34375, [1086, 1087]], [313, ":", 0.302734375, [1087, 1088]], [314, "Div", 0.3828125, [1088, 1092]], [315, "ide", 0.4375, [1092, 1095]], [316, "num", 0.171875, [1095, 1099]], [317, "s", 0.2373046875, [1099, 1100]], [318, "into", 0.21484375, [1100, 1105]], [320, "2", 0.1845703125, [1106, 1107]], [321, "sub", 0.11376953125, [1107, 1111]], [322, "arr", 0.259765625, [1111, 1114]], [323, "ays", 0.27734375, [1114, 1117]], [324, "of", 0.08154296875, [1117, 1120]], [325, "size", 0.1103515625, [1120, 1125]], [326, "n", 0.099609375, [1125, 1127]], [327, "/", 0.138671875, [1127, 1128]], [328, "2", 0.265625, [1128, 1129]], [329, "and", 0.09326171875, [1129, 1133]], [330, "n", 0.05224609375, [1133, 1135]], [331, "-", 0.08642578125, [1135, 1136]], [332, "n", 0.06103515625, [1136, 1137]], [333, "/", 0.08447265625, [1137, 1138]], [334, "2", 0.1484375, [1138, 1139]], [339, "vector", 0.240234375, [1156, 1163]], [340, "<", 0.076171875, [1163, 1164]], [341, "int", 0.251953125, [1164, 1167]], [342, ">", 0.09375, [1167, 1168]], [343, "A", 0.328125, [1168, 1169]], [344, ",", 0.15625, [1169, 1170]], [345, "B", 0.20703125, [1170, 1171]], [346, ";", 0.1103515625, [1171, 1172]], [349, "for", 0.166015625, [1180, 1184]], [350, "(", 0.1826171875, [1184, 1185]], [351, "int", 0.06640625, [1185, 1188]], [352, "i", 0.052001953125, [1188, 1190]], [353, "=", 0.064453125, [1190, 1191]], [354, "0", 0.1337890625, [1191, 1192]], [355, ";", 0.0556640625, [1192, 1193]], [356, "i", 0.06396484375, [1193, 1194]], [357, "<", 0.0322265625, [1194, 1195]], [358, "n", 0.0908203125, [1195, 1196]], [359, "/", 0.083984375, [1196, 1197]], [360, "2", 0.1455078125, [1197, 1198]], [361, ";", 0.060791015625, [1198, 1199]], [362, "i", 0.051513671875, [1199, 1200]], [363, "++", 0.0830078125, [1200, 1202]], [364, ")", 0.103515625, [1202, 1203]], [367, "A", 0.1376953125, [1215, 1217]], [368, ".", 0.1337890625, [1217, 1218]], [369, "push", 0.1865234375, [1218, 1222]], [370, "_", 0.140625, [1222, 1223]], [371, "back", 0.0908203125, [1223, 1227]], [372, "(", 0.07958984375, [1227, 1228]], [373, "num", 0.236328125, [1228, 1231]], [374, "s", 0.09814453125, [1231, 1232]], [375, "[", 0.059326171875, [1232, 1233]], [376, "i", 0.05419921875, [1233, 1234]], [377, "]);", 0.11767578125, [1234, 1237]], [380, "for", 0.0810546875, [1245, 1249]], [381, "(", 0.146484375, [1249, 1250]], [382, "int", 0.05419921875, [1250, 1253]], [383, "i", 0.04296875, [1253, 1255]], [384, "=", 0.057861328125, [1255, 1256]], [385, "n", 0.049560546875, [1256, 1257]], [386, "/", 0.0654296875, [1257, 1258]], [387, "2", 0.091796875, [1258, 1259]], [388, ";", 0.06982421875, [1259, 1260]], [389, "i", 0.044677734375, [1260, 1261]], [390, "<", 0.041015625, [1261, 1262]], [391, "n", 0.031982421875, [1262, 1263]], [392, ";", 0.04931640625, [1263, 1264]], [393, "i", 0.02490234375, [1264, 1265]], [394, "++", 0.036865234375, [1265, 1267]], [395, ")", 0.08447265625, [1267, 1268]], [398, "B", 0.1474609375, [1280, 1282]], [399, ".", 0.1328125, [1282, 1283]], [400, "push", 0.09521484375, [1283, 1287]], [401, "_", 0.134765625, [1287, 1288]], [402, "back", 0.04833984375, [1288, 1292]], [403, "(", 0.0791015625, [1292, 1293]], [404, "num", 0.283203125, [1293, 1296]], [405, "s", 0.08349609375, [1296, 1297]], [406, "[", 0.0267333984375, [1297, 1298]], [407, "i", 0.037353515625, [1298, 1299]], [408, "]);", 0.10302734375, [1299, 1302]], [413, "//", 0.166015625, [1319, 1322]], [414, "Step", 0.2255859375, [1322, 1326]], [416, "2", 0.2021484375, [1327, 1328]], [417, ":", 0.146484375, [1328, 1329]], [418, "Find", 0.26171875, [1329, 1334]], [419, "all", 0.16796875, [1334, 1338]], [420, "possible", 0.23828125, [1338, 1347]], [421, "subset", 0.490234375, [1347, 1354]], [422, "sums", 0.4921875, [1354, 1359]], [423, "of", 0.1103515625, [1359, 1362]], [424, "A", 0.193359375, [1362, 1364]], [425, "and", 0.0927734375, [1364, 1368]], [426, "B", 0.125, [1368, 1370]], [431, "vector", 0.162109375, [1387, 1394]], [432, "<", 0.06494140625, [1394, 1395]], [433, "int", 0.09765625, [1395, 1398]], [434, ">", 0.0849609375, [1398, 1399]], [435, "sum", 0.2138671875, [1399, 1402]], [436, "A", 0.29296875, [1402, 1403]], [437, ",", 0.095703125, [1403, 1404]], [438, "sum", 0.126953125, [1404, 1407]], [439, "B", 0.1435546875, [1407, 1408]], [440, ";", 0.09912109375, [1408, 1409]], [443, "find", 0.65625, [1417, 1422]], [444, "(", 0.35546875, [1422, 1423]], [445, "A", 0.1162109375, [1423, 1424]], [446, ",", 0.07958984375, [1424, 1425]], [447, "0", 0.0859375, [1425, 1426]], [448, ",", 0.07763671875, [1426, 1427]], [449, "A", 0.04248046875, [1427, 1428]], [450, ".", 0.1220703125, [1428, 1429]], [451, "size", 0.08447265625, [1429, 1433]], [452, "(),", 0.0849609375, [1433, 1436]], [453, "0", 0.08642578125, [1436, 1437]], [454, ",", 0.07177734375, [1437, 1438]], [455, "sum", 0.09033203125, [1438, 1441]], [456, "A", 0.08984375, [1441, 1442]], [457, ");", 0.25390625, [1442, 1444]], [460, "find", 0.4375, [1452, 1457]], [461, "(", 0.1533203125, [1457, 1458]], [462, "B", 0.07763671875, [1458, 1459]], [463, ",", 0.055419921875, [1459, 1460]], [464, "0", 0.041015625, [1460, 1461]], [465, ",", 0.0478515625, [1461, 1462]], [466, "B", 0.02099609375, [1462, 1463]], [467, ".", 0.1376953125, [1463, 1464]], [468, "size", 0.042236328125, [1464, 1468]], [469, "(),", 0.032470703125, [1468, 1471]], [470, "0", 0.044677734375, [1471, 1472]], [471, ",", 0.0498046875, [1472, 1473]], [472, "sum", 0.10595703125, [1473, 1476]], [473, "B", 0.06640625, [1476, 1477]], [474, ");", 0.119140625, [1477, 1479]], [479, "sort", 0.400390625, [1496, 1501]], [480, "(", 0.1962890625, [1501, 1502]], [481, "sum", 0.0986328125, [1502, 1505]], [482, "A", 0.12353515625, [1505, 1506]], [483, ".", 0.1435546875, [1506, 1507]], [484, "begin", 0.08740234375, [1507, 1512]], [485, "(),", 0.052734375, [1512, 1515]], [486, "sum", 0.111328125, [1515, 1518]], [487, "A", 0.10400390625, [1518, 1519]], [488, ".", 0.115234375, [1519, 1520]], [489, "end", 0.0634765625, [1520, 1523]], [490, "());", 0.1796875, [1523, 1527]], [495, "//", 0.1748046875, [1545, 1548]], [496, "Step", 0.15625, [1548, 1552]], [498, "3", 0.1513671875, [1553, 1554]], [499, ":", 0.1474609375, [1554, 1555]], [500, "Find", 0.1435546875, [1555, 1560]], [501, "combinations", 0.609375, [1560, 1573]], [502, "from", 0.1669921875, [1573, 1578]], [503, "sum", 0.0986328125, [1578, 1582]], [504, "A", 0.1943359375, [1582, 1583]], [505, "&", 0.2255859375, [1583, 1585]], [506, "sum", 0.07470703125, [1585, 1589]], [507, "B", 0.1787109375, [1589, 1590]], [508, "such", 0.193359375, [1590, 1595]], [509, "that", 0.1806640625, [1595, 1600]], [510, "abs", 0.337890625, [1600, 1604]], [511, "(", 0.26171875, [1604, 1605]], [512, "sum", 0.11328125, [1605, 1608]], [513, "-", 0.255859375, [1608, 1609]], [514, "go", 0.2890625, [1609, 1611]], [515, "al", 0.1923828125, [1611, 1613]], [516, ")", 0.1875, [1613, 1614]], [517, "is", 0.10009765625, [1614, 1617]], [518, "minim", 0.29296875, [1617, 1623]], [519, "ized", 0.26171875, [1623, 1627]], [524, "int", 0.19140625, [1644, 1648]], [525, "an", 0.15234375, [1648, 1651]], [526, "s", 0.283203125, [1651, 1652]], [527, "=", 0.20703125, [1652, 1653]], [528, "INT", 0.166015625, [1653, 1656]], [529, "_", 0.1357421875, [1656, 1657]], [530, "MAX", 0.1884765625, [1657, 1660]], [531, ";", 0.1708984375, [1660, 1661]], [536, "for", 0.201171875, [1678, 1682]], [537, "(", 0.1708984375, [1682, 1683]], [538, "int", 0.1181640625, [1683, 1686]], [539, "i", 0.078125, [1686, 1688]], [540, "=", 0.0849609375, [1688, 1689]], [541, "0", 0.056640625, [1689, 1690]], [542, ";", 0.06494140625, [1690, 1691]], [543, "i", 0.06298828125, [1691, 1692]], [544, "<", 0.037109375, [1692, 1693]], [545, "sum", 0.080078125, [1693, 1696]], [546, "A", 0.1474609375, [1696, 1697]], [547, ".", 0.1474609375, [1697, 1698]], [548, "size", 0.080078125, [1698, 1702]], [549, "();", 0.0810546875, [1702, 1705]], [550, "i", 0.0947265625, [1705, 1706]], [551, "++", 0.1279296875, [1706, 1708]], [552, "){", 0.1328125, [1708, 1710]], [555, "int", 0.1484375, [1722, 1726]], [556, "s", 0.1474609375, [1726, 1728]], [557, "=", 0.2490234375, [1728, 1729]], [558, "sum", 0.08251953125, [1729, 1732]], [559, "A", 0.1064453125, [1732, 1733]], [560, "[", 0.080078125, [1733, 1734]], [561, "i", 0.0751953125, [1734, 1735]], [562, "];", 0.1494140625, [1735, 1737]], [565, "int", 0.1376953125, [1749, 1753]], [566, "l", 0.181640625, [1753, 1755]], [567, "=", 0.19140625, [1755, 1756]], [568, "0", 0.09521484375, [1756, 1757]], [569, ";", 0.0927734375, [1757, 1758]], [572, "int", 0.080078125, [1770, 1774]], [573, "r", 0.1650390625, [1774, 1776]], [574, "=", 0.078125, [1776, 1777]], [575, "sum", 0.058837890625, [1777, 1780]], [576, "B", 0.158203125, [1780, 1781]], [577, ".", 0.1376953125, [1781, 1782]], [578, "size", 0.0654296875, [1782, 1786]], [579, "()-", 0.057861328125, [1786, 1789]], [580, "1", 0.1064453125, [1789, 1790]], [581, ";", 0.095703125, [1790, 1791]], [584, "while", 0.193359375, [1803, 1809]], [585, "(", 0.126953125, [1809, 1810]], [586, "l", 0.08056640625, [1810, 1811]], [587, "<", 0.057861328125, [1811, 1812]], [588, "=", 0.0869140625, [1812, 1813]], [589, "r", 0.09912109375, [1813, 1814]], [590, "){", 0.1787109375, [1814, 1816]], [593, "int", 0.12890625, [1832, 1836]], [594, "mid", 0.310546875, [1836, 1840]], [595, "=", 0.130859375, [1840, 1841]], [596, "l", 0.07958984375, [1841, 1842]], [597, "+", 0.055419921875, [1842, 1843]], [598, "(", 0.1181640625, [1843, 1844]], [599, "r", 0.0546875, [1844, 1845]], [600, "-", 0.0712890625, [1845, 1846]], [601, "l", 0.0634765625, [1846, 1847]], [602, ")/", 0.1298828125, [1847, 1849]], [603, "2", 0.59765625, [1849, 1850]], [604, ";", 0.10107421875, [1850, 1851]], [607, "int", 0.1552734375, [1867, 1871]], [608, "sum", 0.166015625, [1871, 1875]], [609, "=", 0.1611328125, [1875, 1876]], [610, "s", 0.1298828125, [1876, 1877]], [611, "+", 0.111328125, [1877, 1878]], [612, "sum", 0.076171875, [1878, 1881]], [613, "B", 0.11767578125, [1881, 1882]], [614, "[", 0.06005859375, [1882, 1883]], [615, "mid", 0.09375, [1883, 1886]], [616, "];", 0.111328125, [1886, 1888]], [619, "if", 0.1259765625, [1904, 1907]], [620, "(", 0.134765625, [1907, 1908]], [621, "sum", 0.10498046875, [1908, 1911]], [622, "==", 0.12060546875, [1911, 1913]], [623, "go", 0.1748046875, [1913, 1915]], [624, "al", 0.21875, [1915, 1917]], [625, ")", 0.2333984375, [1917, 1918]], [628, "return", 0.33203125, [1938, 1945]], [630, "0", 0.447265625, [1946, 1947]], [631, ";", 0.2119140625, [1947, 1948]], [634, "an", 0.1748046875, [1964, 1967]], [635, "s", 0.2236328125, [1967, 1968]], [636, "=", 0.2041015625, [1968, 1969]], [637, "min", 0.263671875, [1969, 1972]], [638, "(", 0.2421875, [1972, 1973]], [639, "ans", 0.13671875, [1973, 1976]], [640, ",", 0.177734375, [1976, 1977]], [641, "abs", 0.2275390625, [1977, 1980]], [642, "(", 0.1513671875, [1980, 1981]], [643, "sum", 0.08056640625, [1981, 1984]], [644, "-", 0.09765625, [1984, 1985]], [645, "go", 0.140625, [1985, 1987]], [646, "al", 0.06201171875, [1987, 1989]], [647, "));", 0.154296875, [1989, 1992]], [650, "if", 0.09716796875, [2008, 2011]], [651, "(", 0.12109375, [2011, 2012]], [652, "sum", 0.078125, [2012, 2015]], [653, ">", 0.09912109375, [2015, 2016]], [654, "go", 2.15625, [2016, 2018]], [655, "al", 0.08935546875, [2018, 2020]], [656, "){", 0.154296875, [2020, 2022]], [659, "r", 0.11572265625, [2042, 2044]], [660, "=", 0.12109375, [2044, 2045]], [661, "mid", 0.1083984375, [2045, 2048]], [662, "-", 0.0986328125, [2048, 2049]], [663, "1", 0.11767578125, [2049, 2050]], [664, ";", 0.10498046875, [2050, 2051]], [667, "}", 0.1337890625, [2067, 2069]], [670, "else", 0.10498046875, [2085, 2090]], [671, "{", 0.1162109375, [2090, 2091]], [674, "l", 0.0888671875, [2111, 2113]], [675, "=", 0.0751953125, [2113, 2114]], [676, "mid", 0.052001953125, [2114, 2117]], [677, "+", 0.040283203125, [2117, 2118]], [678, "1", 0.08203125, [2118, 2119]], [679, ";", 0.0927734375, [2119, 2120]], [682, "}", 0.166015625, [2136, 2138]], [686, "}", 0.2431640625, [2154, 2156]], [689, "}", 0.298828125, [2164, 2166]], [694, "return", 0.255859375, [2183, 2190]], [695, "an", 0.35546875, [2190, 2193]], [696, "s", 0.1953125, [2193, 2194]], [697, ";", 0.32421875, [2194, 2195]], [700, "}", 0.80859375, [2199, 2201]], [702, "};", 1.6953125, [2202, 2204]]]}, "clean_tokens": ["<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cend\u2581of\u2581sentence\uff5c>", "<\uff5cbegin\u2581of\u2581sentence\uff5c>", "You", "are", "an", "exception", "ally", "intelligent", "coding", "assistant", "that", "consistently", "delivers", "accurate", "and", "reliable", "responses", "to", "user", "instructions", ".", "", "", "", "@", "@", "Inst", "ruction", "", "", "You", "are", "a", "program", "rep", "aire", "r", ".", "Please", "repair", "the", "following", "bug", "gy", "program", ".", "You", "are", "given", "an", "integer", "array", "num", "s", "and", "an", "integer", "goal", ".", "", "You", "want", "to", "choose", "a", "subsequ", "ence", "of", "num", "s", "such", "that", "the", "sum", "of", "its", "elements", "is", "the", "closest", "possible", "to", "goal", ".", "That", "is", ",", "if", "the", "sum", "of", "the", "subsequ", "ence", "'", "s", "elements", "is", "sum", ",", "then", "you", "want", "to", "minimize", "the", "absolute", "difference", "abs", "(", "sum", "-", "goal", ").", "", "Return", "the", "minimum", "possible", "value", "of", "abs", "(", "sum", "-", "goal", ").", "", "Note", "that", "a", "subsequ", "ence", "of", "an", "array", "is", "an", "array", "formed", "by", "removing", "some", "elements", "(", "poss", "ibly", "all", "or", "none", ")", "of", "the", "original", "array", ".", "B", "ug", "gy", "code", ":", "class", "S", "olution", "{", "", "public", ":", "", "", "void", "find", "(", "vector", "<", "int", ">", "&", "v", ",", "int", "i", ",", "int", "e", ",", "int", "sum", ",", "vector", "<", "int", ">", "&", "sum", "v", "){", "", "", "if", "(", "i", "==", "e", "){", "", "", "sum", "v", ".", "push", "_", "back", "(", "sum", ");", "", "", "return", ";", "", "", "}", "", "", "find", "(", "v", ",", "i", "+", "1", ",", "e", ",", "sum", "+", "v", "[", "i", "],", "sum", "v", ");", "", "", "find", "(", "v", ",", "i", "+", "1", ",", "e", ",", "sum", ",", "sum", "v", ");", "", "", "}", "", "", "", "", "", "", "int", "min", "Abs", "Diff", "erence", "(", "vector", "<", "int", ">", "&", "num", "s", ",", "int", "goal", ")", "{", "", "", "int", "n", "=", "num", "s", ".", "size", "();", "", "", "", "", "//", "Step", "", "1", ":", "Div", "ide", "num", "s", "into", "", "2", "sub", "arr", "ays", "of", "size", "n", "/", "2", "and", "n", "-", "n", "/", "2", "", "", "", "", "vector", "<", "int", ">", "A", ",", "B", ";", "", "", "for", "(", "int", "i", "=", "0", ";", "i", "<", "n", "/", "2", ";", "i", "++", ")", "", "", "A", ".", "push", "_", "back", "(", "num", "s", "[", "i", "]);", "", "", "for", "(", "int", "i", "=", "n", "/", "2", ";", "i", "<", "n", ";", "i", "++", ")", "", "", "B", ".", "push", "_", "back", "(", "num", "s", "[", "i", "]);", "", "", "", "", "//", "Step", "", "2", ":", "Find", "all", "possible", "subset", "sums", "of", "A", "and", "B", "", "", "", "", "vector", "<", "int", ">", "sum", "A", ",", "sum", "B", ";", "", "", "find", "(", "A", ",", "0", ",", "A", ".", "size", "(),", "0", ",", "sum", "A", ");", "", "", "find", "(", "B", ",", "0", ",", "B", ".", "size", "(),", "0", ",", "sum", "B", ");", "", "", "", "", "sort", "(", "sum", "A", ".", "begin", "(),", "sum", "A", ".", "end", "());", "", "", "", "", "//", "Step", "", "3", ":", "Find", "combinations", "from", "sum", "A", "&", "sum", "B", "such", "that", "abs", "(", "sum", "-", "go", "al", ")", "is", "minim", "ized", "", "", "", "", "int", "an", "s", "=", "INT", "_", "MAX", ";", "", "", "", "", "for", "(", "int", "i", "=", "0", ";", "i", "<", "sum", "A", ".", "size", "();", "i", "++", "){", "", "", "int", "s", "=", "sum", "A", "[", "i", "];", "", "", "int", "l", "=", "0", ";", "", "", "int", "r", "=", "sum", "B", ".", "size", "()-", "1", ";", "", "", "while", "(", "l", "<", "=", "r", "){", "", "", "int", "mid", "=", "l", "+", "(", "r", "-", "l", ")/", "2", ";", "", "", "int", "sum", "=", "s", "+", "sum", "B", "[", "mid", "];", "", "", "if", "(", "sum", "==", "go", "al", ")", "", "", "return", "", "0", ";", "", "", "an", "s", "=", "min", "(", "ans", ",", "abs", "(", "sum", "-", "go", "al", "));", "", "", "if", "(", "sum", ">", "go", "al", "){", "", "", "r", "=", "mid", "-", "1", ";", "", "", "}", "", "", "else", "{", "", "", "l", "=", "mid", "+", "1", ";", "", "", "}", "", "", "", "}", "", "", "}", "", "", "", "", "return", "an", "s", ";", "", "", "}", "", "};", "$", "Test", "case", "(", "Input", "with", "expected", "output", ")", ":", "Input", ":", "num", "s", "=", "[", "5", ",-", "7", ",", "3", ",", "5", "],", "goal", "=", "6", "", "Output", ":", "", "0", "", "F", "ault", "reasoning", ":", "sum", "B", "(", "variable", ")", "in", "min", "Abs", "Diff", "erence", "(", "function", ")", "is", "wrong", ",", "which", "causes", "sum", "(", "variable", ")", "in", "min", "Abs", "Diff", "erence", "(", "function", ")", "is", "wrong", ",", "which", "causes", "an", "s", "(", "variable", ")", "in", "min", "Abs", "Diff", "erence", "(", "function", ")", "is", "wrong", ",", "which", "causes", "return", "of", "min", "Abs", "Diff", "erence", "(", "function", ")", "is", "wrong", ".", "", "", "", "@", "@", "Response", "", ""], "fix": null}